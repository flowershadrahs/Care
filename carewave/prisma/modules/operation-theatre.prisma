// operation-theatre.prisma
enum OperationTheatreStatus {
  AVAILABLE
  IN_USE
  UNDER_MAINTENANCE
  RESERVED
  OUT_OF_SERVICE
}

enum ProcedureStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  POSTPONED
}

enum ProcedureType {
  ELECTIVE
  EMERGENCY
  MINOR
  MAJOR
  DIAGNOSTIC
}

model OperationTheatre {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  name                String                // e.g., "OT-1 Main Theatre"
  theatreNumber       String                @unique // e.g., "OT-001"
  status              OperationTheatreStatus @default("AVAILABLE")
  departmentId        Int?                  // Link to department
  department          Department?           @relation(fields: [departmentId], references: [id])
  clinicalSettingId   Int?                  // Link to clinical setting
  clinicalSetting     ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])
  location            String?               // e.g., "Building B, Floor 3"
  capacity            Int?                  // Max capacity (e.g., number of patients or staff)
  equipmentList       String?               // JSON or text for equipment (e.g., {"ventilator": 1, "monitor": 2})
  cssdInstrumentId    Int?                  // Link to CSSD instruments
  cssdInstrument      CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])
  procedures          SurgicalProcedure[]   // Procedures scheduled in this theatre
  createdById         Int?                  // User who created the theatre
  createdBy           User?                 @relation("TheatreCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?                  // User who last updated
  updatedBy           User?                 @relation("TheatreUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("OperationTheatreAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model SurgicalProcedure {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  patientId           Int                   // Link to patient
  patient             Patient               @relation(fields: [patientId], references: [id])
  doctorId            Int?                  // Link to lead surgeon
  doctor              Doctor?               @relation("Surgeon", fields: [doctorId], references: [id])
  operationTheatreId  Int                   // Link to operation theatre
  operationTheatre    OperationTheatre      @relation(fields: [operationTheatreId], references: [id])
  appointmentId       Int?                  // Link to appointment
  appointment         Appointment?          @relation(fields: [appointmentId], references: [id])
  admissionId         Int?                  // Link to admission
  admission           Admission?            @relation(fields: [admissionId], references: [id])
  clinicalRecordId    Int?                  // Link to clinical record
  clinicalRecord      ClinicalRecord?       @relation(fields: [clinicalRecordId], references: [id])
  medicalRecordId     Int?                  // Link to medical record
  medicalRecord       MedicalRecord?        @relation(fields: [medicalRecordId], references: [id])
  departmentId        Int?                  // Link to department
  department          Department?           @relation(fields: [departmentId], references: [id])
  clinicalSettingId   Int?                  // Link to clinical setting
  clinicalSetting     ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])
  type                ProcedureType         // ELECTIVE, EMERGENCY, etc.
  status              ProcedureStatus       @default("SCHEDULED")
  procedureCode       String?               // e.g., ICD-10-PCS code
  description         String?               // Procedure description
  startTime           DateTime              // Scheduled start time
  endTime             DateTime?             // Actual or estimated end time
  duration            Int?                  // Duration in minutes
  anesthesiaType      String?               // e.g., "General", "Local"
  preOpNotes          String?               // Pre-operative notes
  postOpNotes         String?               // Post-operative notes
  complications       String?               // JSON or text for complications
  cssdRequisitionId   Int?                  // Link to CSSD requisition for instruments
  cssdRequisition     CSSDRequisition?      @relation(fields: [cssdRequisitionId], references: [id])
  pharmacyId          Int?                  // Link to pharmacy for medications
  pharmacy            Pharmacy?             @relation(fields: [pharmacyId], references: [id])
  nursingId           Int?                  // Link to nursing care during procedure
  nursing             Nursing?              @relation(fields: [nursingId], references: [id])
  billingId           Int?                  // Link to billing for procedure charges
  billing             Billing?              @relation(fields: [billingId], references: [id])
  claimId             Int?                  // Link to insurance claim
  claim               Claim?                @relation(fields: [claimId], references: [id])
  nhifClaimId         Int?                  // Link to NHIF claim
  nhifClaim           NhifClaim?            @relation(fields: [nhifClaimId], references: [id])
  staffAssignments    SurgicalStaff[]       // Staff assigned to procedure
  documents           String?               // JSON or file paths for attached documents
  createdById         Int?                  // User who created the procedure
  createdBy           User?                 @relation("ProcedureCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?                  // User who last updated
  updatedBy           User?                 @relation("ProcedureUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("SurgicalProcedureAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model SurgicalStaff {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  procedureId         Int                   // Link to surgical procedure
  procedure           SurgicalProcedure     @relation(fields: [procedureId], references: [id])
  staffId             Int                   // Link to staff (User)
  staff               User                  @relation("SurgicalStaff", fields: [staffId], references: [id])
  role                String                // e.g., "Surgeon", "Anesthetist", "Nurse"
  notes               String?               // Notes about staff role
  createdById         Int?                  // User who assigned staff
  createdBy           User?                 @relation("StaffAssignmentCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?                  // User who last updated
  updatedBy           User?                 @relation("StaffAssignmentUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("SurgicalStaffAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}