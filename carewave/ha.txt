Environment variables loaded from .env
Prisma schema loaded from prisma/schema.prisma
Datasource "db": PostgreSQL database "postgres", schema "public" at "aws-0-us-east-1.pooler.supabase.com:5432"


Error: Prisma schema validation - (validate wasm)
Error code: P1012
[1;91merror[0m: [1mError validating field `referrals` in model `Patient`: The relation field `referrals` on model `Patient` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:188[0m
[1;94m   | [0m
[1;94m187 | [0m  queues               Queue[]               @relation("PatientQueue")
[1;94m188 | [0m  [1;91mreferrals            Referral[]            @relation("Referral_patient_fkey")[0m
[1;94m189 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `Appointment__fkey` has to be unique in the following namespace: on model `Appointment` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:398[0m
[1;94m   | [0m
[1;94m397 | [0m  queueId               Int?                @unique
[1;94m398 | [0m  [1;91mqueue                 Queue?              @relation("AppointmentQueue")[0m
[1;94m399 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `queue` on Model `Appointment` and `appointment` on Model `Queue` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:398[0m
[1;94m   | [0m
[1;94m397 | [0m  queueId               Int?                @unique
[1;94m398 | [0m  [1;91mqueue                 Queue?              @relation("AppointmentQueue")[0m
[1;94m399 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `Queue` and `queue` on Model `Appointment` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:829[0m
[1;94m   | [0m
[1;94m828 | [0m  appointmentId       Int?                  @unique
[1;94m829 | [0m  [1;91mappointment         Appointment?          @relation("AppointmentQueue")[0m
[1;94m830 | [0m  admissionId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `queue` on Model `Appointment` and `appointment` on Model `Queue` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:398[0m
[1;94m   | [0m
[1;94m397 | [0m  queueId               Int?                @unique
[1;94m398 | [0m  [1;91mqueue                 Queue?              @relation("AppointmentQueue")[0m
[1;94m399 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `Queue` and `queue` on Model `Appointment` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:829[0m
[1;94m   | [0m
[1;94m828 | [0m  appointmentId       Int?                  @unique
[1;94m829 | [0m  [1;91mappointment         Appointment?          @relation("AppointmentQueue")[0m
[1;94m830 | [0m  admissionId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `Appointment__fkey` has to be unique in the following namespace: on model `Appointment` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:406[0m
[1;94m   | [0m
[1;94m405 | [0m  radiologyId           Int?                @unique
[1;94m406 | [0m  [1;91mradiology             Radiology?          @relation("AppointmentRadiology")[0m
[1;94m407 | [0m  radiologyTests        RadiologyTest[]     @relation("AppointmentRadiologyTests")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Appointment` and `appointment` on Model `Radiology` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:406[0m
[1;94m   | [0m
[1;94m405 | [0m  radiologyId           Int?                @unique
[1;94m406 | [0m  [1;91mradiology             Radiology?          @relation("AppointmentRadiology")[0m
[1;94m407 | [0m  radiologyTests        RadiologyTest[]     @relation("AppointmentRadiologyTests")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `Radiology` and `radiology` on Model `Appointment` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1166[0m
[1;94m   | [0m
[1;94m1165 | [0m  appointmentId       Int?                  @unique
[1;94m1166 | [0m  [1;91mappointment         Appointment?          @relation("AppointmentRadiology")[0m
[1;94m1167 | [0m  emergencyId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Appointment` and `appointment` on Model `Radiology` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:406[0m
[1;94m   | [0m
[1;94m405 | [0m  radiologyId           Int?                @unique
[1;94m406 | [0m  [1;91mradiology             Radiology?          @relation("AppointmentRadiology")[0m
[1;94m407 | [0m  radiologyTests        RadiologyTest[]     @relation("AppointmentRadiologyTests")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `Radiology` and `radiology` on Model `Appointment` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1166[0m
[1;94m   | [0m
[1;94m1165 | [0m  appointmentId       Int?                  @unique
[1;94m1166 | [0m  [1;91mappointment         Appointment?          @relation("AppointmentRadiology")[0m
[1;94m1167 | [0m  emergencyId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `Appointment__fkey` has to be unique in the following namespace: on model `Appointment` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:419[0m
[1;94m   | [0m
[1;94m418 | [0m  referralId            Int?                @unique
[1;94m419 | [0m  [1;91mreferral              Referral?           @relation("AppointmentReferral")[0m
[1;94m420 | [0m  location              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `Appointment` and `appointment` on Model `Referral` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:419[0m
[1;94m   | [0m
[1;94m418 | [0m  referralId            Int?                @unique
[1;94m419 | [0m  [1;91mreferral              Referral?           @relation("AppointmentReferral")[0m
[1;94m420 | [0m  location              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `Referral` and `referral` on Model `Appointment` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4259[0m
[1;94m   | [0m
[1;94m4258 | [0m  appointmentId       Int?                  @unique
[1;94m4259 | [0m  [1;91mappointment         Appointment?          @relation("AppointmentReferral")[0m
[1;94m4260 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `Appointment` and `appointment` on Model `Referral` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:419[0m
[1;94m   | [0m
[1;94m418 | [0m  referralId            Int?                @unique
[1;94m419 | [0m  [1;91mreferral              Referral?           @relation("AppointmentReferral")[0m
[1;94m420 | [0m  location              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `Referral` and `referral` on Model `Appointment` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4259[0m
[1;94m   | [0m
[1;94m4258 | [0m  appointmentId       Int?                  @unique
[1;94m4259 | [0m  [1;91mappointment         Appointment?          @relation("AppointmentReferral")[0m
[1;94m4260 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `referral` on Model `Admission` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:559[0m
[1;94m   | [0m
[1;94m558 | [0m  referralId           Int?                @unique
[1;94m559 | [0m  [1;91mreferral             Referral?           @relation("AdmissionReferral")[0m
[1;94m560 | [0m  insuranceId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `referral` on Model `Admission` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:559[0m
[1;94m   | [0m
[1;94m558 | [0m  referralId           Int?                @unique
[1;94m559 | [0m  [1;91mreferral             Referral?           @relation("AdmissionReferral")[0m
[1;94m560 | [0m  insuranceId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `Emergency__fkey` has to be unique in the following namespace: on model `Emergency` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:738[0m
[1;94m   | [0m
[1;94m737 | [0m  radiologyId           Int?                @unique
[1;94m738 | [0m  [1;91mradiology             Radiology?          @relation("EmergencyRadiology")[0m
[1;94m739 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Emergency` and `emergency` on Model `Radiology` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:738[0m
[1;94m   | [0m
[1;94m737 | [0m  radiologyId           Int?                @unique
[1;94m738 | [0m  [1;91mradiology             Radiology?          @relation("EmergencyRadiology")[0m
[1;94m739 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `emergency` on Model `Radiology` and `radiology` on Model `Emergency` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1168[0m
[1;94m   | [0m
[1;94m1167 | [0m  emergencyId         Int?                  @unique
[1;94m1168 | [0m  [1;91memergency           Emergency?            @relation("EmergencyRadiology")[0m
[1;94m1169 | [0m  invoiceId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Emergency` and `emergency` on Model `Radiology` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:738[0m
[1;94m   | [0m
[1;94m737 | [0m  radiologyId           Int?                @unique
[1;94m738 | [0m  [1;91mradiology             Radiology?          @relation("EmergencyRadiology")[0m
[1;94m739 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `emergency` on Model `Radiology` and `radiology` on Model `Emergency` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1168[0m
[1;94m   | [0m
[1;94m1167 | [0m  emergencyId         Int?                  @unique
[1;94m1168 | [0m  [1;91memergency           Emergency?            @relation("EmergencyRadiology")[0m
[1;94m1169 | [0m  invoiceId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `Emergency__fkey` has to be unique in the following namespace: on model `Emergency` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:744[0m
[1;94m   | [0m
[1;94m743 | [0m  billingId             Int?                @unique
[1;94m744 | [0m  [1;91mbilling               Billing?            @relation("EmergencyBilling")[0m
[1;94m745 | [0m  claimId               Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `billing` on Model `Emergency` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:744[0m
[1;94m   | [0m
[1;94m743 | [0m  billingId             Int?                @unique
[1;94m744 | [0m  [1;91mbilling               Billing?            @relation("EmergencyBilling")[0m
[1;94m745 | [0m  claimId               Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `billing` on Model `Emergency` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:744[0m
[1;94m   | [0m
[1;94m743 | [0m  billingId             Int?                @unique
[1;94m744 | [0m  [1;91mbilling               Billing?            @relation("EmergencyBilling")[0m
[1;94m745 | [0m  claimId               Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `Emergency__fkey` has to be unique in the following namespace: on model `Emergency` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:746[0m
[1;94m   | [0m
[1;94m745 | [0m  claimId               Int?                @unique
[1;94m746 | [0m  [1;91mclaim                 Claim?              @relation("EmergencyClaims")[0m
[1;94m747 | [0m  wardId                Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `claim` on Model `Emergency` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:746[0m
[1;94m   | [0m
[1;94m745 | [0m  claimId               Int?                @unique
[1;94m746 | [0m  [1;91mclaim                 Claim?              @relation("EmergencyClaims")[0m
[1;94m747 | [0m  wardId                Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `claim` on Model `Emergency` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:746[0m
[1;94m   | [0m
[1;94m745 | [0m  claimId               Int?                @unique
[1;94m746 | [0m  [1;91mclaim                 Claim?              @relation("EmergencyClaims")[0m
[1;94m747 | [0m  wardId                Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `uploadedBy` on Model `EmergencyDocument` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:776[0m
[1;94m   | [0m
[1;94m775 | [0m  uploadedById          Int?                @unique
[1;94m776 | [0m  [1;91muploadedBy            User?               @relation("EmergencyDocumentUploadedBy")[0m
[1;94m777 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `uploadedBy` on Model `EmergencyDocument` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:776[0m
[1;94m   | [0m
[1;94m775 | [0m  uploadedById          Int?                @unique
[1;94m776 | [0m  [1;91muploadedBy            User?               @relation("EmergencyDocumentUploadedBy")[0m
[1;94m777 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `recipient` on Model `EmergencyNotification` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:791[0m
[1;94m   | [0m
[1;94m790 | [0m  recipientId           Int?                @unique
[1;94m791 | [0m  [1;91mrecipient             User?               @relation("EmergencyNotificationRecipient")[0m
[1;94m792 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `recipient` on Model `EmergencyNotification` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:791[0m
[1;94m   | [0m
[1;94m790 | [0m  recipientId           Int?                @unique
[1;94m791 | [0m  [1;91mrecipient             User?               @relation("EmergencyNotificationRecipient")[0m
[1;94m792 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `Queue__fkey` has to be unique in the following namespace: on model `Queue` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:827[0m
[1;94m   | [0m
[1;94m826 | [0m  patientId           Int?                  @unique
[1;94m827 | [0m  [1;91mpatient             Patient?              @relation("PatientQueue")[0m
[1;94m828 | [0m  appointmentId       Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `patient` on Model `Queue` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:827[0m
[1;94m   | [0m
[1;94m826 | [0m  patientId           Int?                  @unique
[1;94m827 | [0m  [1;91mpatient             Patient?              @relation("PatientQueue")[0m
[1;94m828 | [0m  appointmentId       Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `patient` on Model `Queue` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:827[0m
[1;94m   | [0m
[1;94m826 | [0m  patientId           Int?                  @unique
[1;94m827 | [0m  [1;91mpatient             Patient?              @relation("PatientQueue")[0m
[1;94m828 | [0m  appointmentId       Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `Queue__fkey` has to be unique in the following namespace: on model `Queue` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:837[0m
[1;94m   | [0m
[1;94m836 | [0m  clinicalSettingId   Int?                  @unique
[1;94m837 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("QueueClinicalSettings")[0m
[1;94m838 | [0m  wardId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `clinicalSetting` on Model `Queue` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:837[0m
[1;94m   | [0m
[1;94m836 | [0m  clinicalSettingId   Int?                  @unique
[1;94m837 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("QueueClinicalSettings")[0m
[1;94m838 | [0m  wardId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `clinicalSetting` on Model `Queue` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:837[0m
[1;94m   | [0m
[1;94m836 | [0m  clinicalSettingId   Int?                  @unique
[1;94m837 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("QueueClinicalSettings")[0m
[1;94m838 | [0m  wardId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `actionBy` on Model `QueueLog` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:865[0m
[1;94m   | [0m
[1;94m864 | [0m  actionById          Int?                  @unique
[1;94m865 | [0m  [1;91mactionBy            User?                 @relation("QueueLogActionBy")[0m
[1;94m866 | [0m  actionDate          DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `actionBy` on Model `QueueLog` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:865[0m
[1;94m   | [0m
[1;94m864 | [0m  actionById          Int?                  @unique
[1;94m865 | [0m  [1;91mactionBy            User?                 @relation("QueueLogActionBy")[0m
[1;94m866 | [0m  actionDate          DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `recipient` on Model `QueueNotification` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:881[0m
[1;94m   | [0m
[1;94m880 | [0m  recipientId         Int?                  @unique
[1;94m881 | [0m  [1;91mrecipient           User?                 @relation("QueueNotificationRecipient")[0m
[1;94m882 | [0m  message             String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `recipient` on Model `QueueNotification` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:881[0m
[1;94m   | [0m
[1;94m880 | [0m  recipientId         Int?                  @unique
[1;94m881 | [0m  [1;91mrecipient           User?                 @relation("QueueNotificationRecipient")[0m
[1;94m882 | [0m  message             String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `QueueConfiguration`: The relation field `clinicalSetting` on model `QueueConfiguration` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:893[0m
[1;94m   | [0m
[1;94m892 | [0m  clinicalSettingId   Int?                  @unique
[1;94m893 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("QueueConfigClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m894 | [0m  name                String
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `QueueConfiguration`: The relation field `createdBy` on model `QueueConfiguration` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:903[0m
[1;94m   | [0m
[1;94m902 | [0m  createdById         Int?                  @unique
[1;94m903 | [0m  [1;91mcreatedBy           User?                 @relation("QueueConfigCreatedBy", fields: [createdById], references: [id])[0m
[1;94m904 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `QueueConfiguration`: The relation field `updatedBy` on model `QueueConfiguration` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:905[0m
[1;94m   | [0m
[1;94m904 | [0m  updatedById         Int?                  @unique
[1;94m905 | [0m  [1;91mupdatedBy           User?                 @relation("QueueConfigUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m906 | [0m  auditLogs           AuditLog[]            @relation("QueueConfigAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `QueueConfiguration`: The relation field `auditLogs` on model `QueueConfiguration` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:906[0m
[1;94m   | [0m
[1;94m905 | [0m  updatedBy           User?                 @relation("QueueConfigUpdatedBy", fields: [updatedById], references: [id])
[1;94m906 | [0m  [1;91mauditLogs           AuditLog[]            @relation("QueueConfigAuditLogs")[0m
[1;94m907 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `ClinicalRecord`: The relation field `appointment` on model `ClinicalRecord` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:944[0m
[1;94m   | [0m
[1;94m943 | [0m  appointmentId         Int?                @unique
[1;94m944 | [0m  [1;91mappointment           Appointment?        @relation("ClinicalRecordAppointments", fields: [appointmentId], references: [id])[0m
[1;94m945 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `ClinicalRecord`: The relation field `admission` on model `ClinicalRecord` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:946[0m
[1;94m   | [0m
[1;94m945 | [0m  admissionId           Int?                @unique
[1;94m946 | [0m  [1;91madmission             Admission?          @relation("ClinicalRecordAdmissions", fields: [admissionId], references: [id])[0m
[1;94m947 | [0m  medicalRecordId       Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `ClinicalRecord`: The relation field `medicalRecord` on model `ClinicalRecord` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:948[0m
[1;94m   | [0m
[1;94m947 | [0m  medicalRecordId       Int?                @unique
[1;94m948 | [0m  [1;91mmedicalRecord         MedicalRecord?      @relation("ClinicalRecordMedicalRecords", fields: [medicalRecordId], references: [id])[0m
[1;94m949 | [0m  clinicalSettingId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:963[0m
[1;94m   | [0m
[1;94m962 | [0m  laboratoryId          Int?                @unique
[1;94m963 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m964 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1060[0m
[1;94m   | [0m
[1;94m1059 | [0m  clinicalRecordId      Int?                @unique
[1;94m1060 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1061 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:963[0m
[1;94m   | [0m
[1;94m962 | [0m  laboratoryId          Int?                @unique
[1;94m963 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m964 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1060[0m
[1;94m   | [0m
[1;94m1059 | [0m  clinicalRecordId      Int?                @unique
[1;94m1060 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1061 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `ClinicalRecord`: The relation field `operationTheatre` on model `ClinicalRecord` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:969[0m
[1;94m   | [0m
[1;94m968 | [0m  operationTheatreId    Int?                @unique
[1;94m969 | [0m  [1;91moperationTheatre      OperationTheatre?   @relation("ClinicalRecordOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m970 | [0m  nursingId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursing` in model `ClinicalRecord`: The relation field `nursing` on model `ClinicalRecord` is missing an opposite relation field on the model `Nursing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:971[0m
[1;94m   | [0m
[1;94m970 | [0m  nursingId             Int?
[1;94m971 | [0m  [1;91mnursing               Nursing?            @relation("ClinicalRecordNursing", fields: [nursingId], references: [id])[0m
[1;94m972 | [0m  billingId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `ClinicalRecord`: The relation field `billing` on model `ClinicalRecord` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:973[0m
[1;94m   | [0m
[1;94m972 | [0m  billingId             Int?
[1;94m973 | [0m  [1;91mbilling               Billing?            @relation("ClinicalRecordBilling", fields: [billingId], references: [id])[0m
[1;94m974 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `ClinicalRecord`: The relation field `claim` on model `ClinicalRecord` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:975[0m
[1;94m   | [0m
[1;94m974 | [0m  claimId               Int?
[1;94m975 | [0m  [1;91mclaim                 Claim?              @relation("ClinicalRecordClaims", fields: [claimId], references: [id])[0m
[1;94m976 | [0m  encounterDate         DateTime?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ClinicalRecord`: The relation field `createdBy` on model `ClinicalRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:980[0m
[1;94m   | [0m
[1;94m979 | [0m  createdById           Int?
[1;94m980 | [0m  [1;91mcreatedBy             User?               @relation("ClinicalRecordCreatedBy", fields: [createdById], references: [id])[0m
[1;94m981 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ClinicalRecord`: The relation field `updatedBy` on model `ClinicalRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:982[0m
[1;94m   | [0m
[1;94m981 | [0m  updatedById           Int?
[1;94m982 | [0m  [1;91mupdatedBy             User?               @relation("ClinicalRecordUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m983 | [0m  reviewedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reviewedBy` in model `ClinicalRecord`: The relation field `reviewedBy` on model `ClinicalRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:984[0m
[1;94m   | [0m
[1;94m983 | [0m  reviewedById          Int?
[1;94m984 | [0m  [1;91mreviewedBy            User?               @relation("ClinicalRecordReviewedBy", fields: [reviewedById], references: [id])[0m
[1;94m985 | [0m  auditLogs             AuditLog[]          @relation("ClinicalRecordAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalRecord`: The relation field `auditLogs` on model `ClinicalRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:985[0m
[1;94m   | [0m
[1;94m984 | [0m  reviewedBy            User?               @relation("ClinicalRecordReviewedBy", fields: [reviewedById], references: [id])
[1;94m985 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClinicalRecordAuditLogs")[0m
[1;94m986 | [0m  clinicalDocuments     ClinicalDocument[]  @relation("ClinicalRecordDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `ClinicalDocument`: The relation field `uploadedBy` on model `ClinicalDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1004[0m
[1;94m   | [0m
[1;94m1003 | [0m  uploadedById          Int?
[1;94m1004 | [0m  [1;91muploadedBy            User?               @relation("ClinicalDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m1005 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalDocument`: The relation field `auditLogs` on model `ClinicalDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1007[0m
[1;94m   | [0m
[1;94m1006 | [0m  updatedAt             DateTime            @updatedAt
[1;94m1007 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClinicalDocumentAuditLogs")[0m
[1;94m1008 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ClinicalNotification`: The relation field `recipient` on model `ClinicalNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1019[0m
[1;94m   | [0m
[1;94m1018 | [0m  recipientId           Int?
[1;94m1019 | [0m  [1;91mrecipient             User?               @relation("ClinicalNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m1020 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1060[0m
[1;94m   | [0m
[1;94m1059 | [0m  clinicalRecordId      Int?                @unique
[1;94m1060 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1061 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:963[0m
[1;94m   | [0m
[1;94m962 | [0m  laboratoryId          Int?                @unique
[1;94m963 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m964 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1060[0m
[1;94m   | [0m
[1;94m1059 | [0m  clinicalRecordId      Int?                @unique
[1;94m1060 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1061 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:963[0m
[1;94m   | [0m
[1;94m962 | [0m  laboratoryId          Int?                @unique
[1;94m963 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m964 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Laboratory`: The relation field `billing` on model `Laboratory` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1075[0m
[1;94m   | [0m
[1;94m1074 | [0m  billingId             Int?
[1;94m1075 | [0m  [1;91mbilling               Billing?            @relation("LaboratoryBilling", fields: [billingId], references: [id])[0m
[1;94m1076 | [0m  claimId               Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1077[0m
[1;94m   | [0m
[1;94m1076 | [0m  claimId               Int?                @unique
[1;94m1077 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1078 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3237[0m
[1;94m   | [0m
[1;94m3236 | [0m  laboratoryId          Int?
[1;94m3237 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3238 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1077[0m
[1;94m   | [0m
[1;94m1076 | [0m  claimId               Int?                @unique
[1;94m1077 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1078 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3237[0m
[1;94m   | [0m
[1;94m3236 | [0m  laboratoryId          Int?
[1;94m3237 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3238 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `Laboratory`: The relation field `performedBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1080[0m
[1;94m   | [0m
[1;94m1079 | [0m  performedById         Int?
[1;94m1080 | [0m  [1;91mperformedBy           User?               @relation("PerformedBy", fields: [performedById], references: [id])[0m
[1;94m1081 | [0m  reviewedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reviewedBy` in model `Laboratory`: The relation field `reviewedBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1082[0m
[1;94m   | [0m
[1;94m1081 | [0m  reviewedById          Int?
[1;94m1082 | [0m  [1;91mreviewedBy            User?               @relation("ReviewedBy", fields: [reviewedById], references: [id])[0m
[1;94m1083 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Laboratory`: The relation field `createdBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1085[0m
[1;94m   | [0m
[1;94m1084 | [0m  createdById           Int?
[1;94m1085 | [0m  [1;91mcreatedBy             User?               @relation("LaboratoryCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1086 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Laboratory`: The relation field `updatedBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1087[0m
[1;94m   | [0m
[1;94m1086 | [0m  updatedById           Int?
[1;94m1087 | [0m  [1;91mupdatedBy             User?               @relation("LaboratoryUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1088 | [0m  auditLogs             AuditLog[]          @relation("LaboratoryAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Laboratory`: The relation field `auditLogs` on model `Laboratory` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1088[0m
[1;94m   | [0m
[1;94m1087 | [0m  updatedBy             User?               @relation("LaboratoryUpdatedBy", fields: [updatedById], references: [id])
[1;94m1088 | [0m  [1;91mauditLogs             AuditLog[]          @relation("LaboratoryAuditLogs")[0m
[1;94m1089 | [0m  labDocuments          LabDocument[]       @relation("LaboratoryDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `LabDocument`: The relation field `uploadedBy` on model `LabDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1108[0m
[1;94m   | [0m
[1;94m1107 | [0m  uploadedById          Int?
[1;94m1108 | [0m  [1;91muploadedBy            User?               @relation("LabDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m1109 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `LabDocument`: The relation field `auditLogs` on model `LabDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1111[0m
[1;94m   | [0m
[1;94m1110 | [0m  updatedAt             DateTime            @updatedAt
[1;94m1111 | [0m  [1;91mauditLogs             AuditLog[]          @relation("LabDocumentAuditLogs")[0m
[1;94m1112 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `LabNotification`: The relation field `recipient` on model `LabNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1123[0m
[1;94m   | [0m
[1;94m1122 | [0m  recipientId           Int?
[1;94m1123 | [0m  [1;91mrecipient             User?               @relation("LabNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m1124 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Radiology`: The relation field `patient` on model `Radiology` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1164[0m
[1;94m   | [0m
[1;94m1163 | [0m  patientId           Int?
[1;94m1164 | [0m  [1;91mpatient             Patient?              @relation("PatientRadiology", fields: [patientId], references: [id])[0m
[1;94m1165 | [0m  appointmentId       Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1170[0m
[1;94m   | [0m
[1;94m1169 | [0m  invoiceId           Int?                  @unique
[1;94m1170 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1171 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2702[0m
[1;94m   | [0m
[1;94m2701 | [0m  radiologyId           Int?
[1;94m2702 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2703 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1170[0m
[1;94m   | [0m
[1;94m1169 | [0m  invoiceId           Int?                  @unique
[1;94m1170 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1171 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2702[0m
[1;94m   | [0m
[1;94m2701 | [0m  radiologyId           Int?
[1;94m2702 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2703 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1184[0m
[1;94m   | [0m
[1;94m1183 | [0m  maternityId         Int?                  @unique
[1;94m1184 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1185 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2030[0m
[1;94m   | [0m
[1;94m2029 | [0m  radiologyId             Int?
[1;94m2030 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2031 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1184[0m
[1;94m   | [0m
[1;94m1183 | [0m  maternityId         Int?                  @unique
[1;94m1184 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1185 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2030[0m
[1;94m   | [0m
[1;94m2029 | [0m  radiologyId             Int?
[1;94m2030 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2031 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `medicalRecord` on Model `Radiology` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1186[0m
[1;94m   | [0m
[1;94m1185 | [0m  medicalRecordId     Int?
[1;94m1186 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("MedicalRecordRadiology")[0m
[1;94m1187 | [0m  homeCares           HomeCare[]            @relation("HomeCareRadiology")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `medicalRecord` on Model `Radiology` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1186[0m
[1;94m   | [0m
[1;94m1185 | [0m  medicalRecordId     Int?
[1;94m1186 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("MedicalRecordRadiology")[0m
[1;94m1187 | [0m  homeCares           HomeCare[]            @relation("HomeCareRadiology")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `RadiologyTest`: The relation field `billing` on model `RadiologyTest` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1229[0m
[1;94m   | [0m
[1;94m1228 | [0m  billingId           Int?
[1;94m1229 | [0m  [1;91mbilling             Billing?              @relation("RadiologyTestBilling", fields: [billingId], references: [id])[0m
[1;94m1230 | [0m  claimId             Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `RadiologyTest`: The relation field `claim` on model `RadiologyTest` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1231[0m
[1;94m   | [0m
[1;94m1230 | [0m  claimId             Int?                  @unique
[1;94m1231 | [0m  [1;91mclaim               Claim?                @relation("RadiologyTestClaim", fields: [claimId], references: [id])[0m
[1;94m1232 | [0m  nhifClaimId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `RadiologyTest`: The relation field `nhifClaim` on model `RadiologyTest` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1233[0m
[1;94m   | [0m
[1;94m1232 | [0m  nhifClaimId         Int?                  @unique
[1;94m1233 | [0m  [1;91mnhifClaim           NhifClaim?            @relation("RadiologyTestNhifClaim", fields: [nhifClaimId], references: [id])[0m
[1;94m1234 | [0m  testCode            String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `RadiologyEquipment__fkey` has to be unique in the following namespace: on model `RadiologyEquipment` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1265[0m
[1;94m   | [0m
[1;94m1264 | [0m  clinicalSettingId   Int?
[1;94m1265 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("RadiologyEquipmentClinicalSettings")[0m
[1;94m1266 | [0m  location            String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `RadiologyEquipment`: The relation field `clinicalSetting` on model `RadiologyEquipment` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1265[0m
[1;94m   | [0m
[1;94m1264 | [0m  clinicalSettingId   Int?
[1;94m1265 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("RadiologyEquipmentClinicalSettings")[0m
[1;94m1266 | [0m  location            String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `RadiologyEquipment__fkey` has to be unique in the following namespace: on model `RadiologyEquipment` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1279[0m
[1;94m   | [0m
[1;94m1278 | [0m  fixedAssetId        Int?
[1;94m1279 | [0m  [1;91mfixedAsset          FixedAsset?           @relation("RadiologyEquipmentFixedAsset")[0m
[1;94m1280 | [0m  procurementId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `fixedAsset` in model `RadiologyEquipment`: The relation field `fixedAsset` on model `RadiologyEquipment` is missing an opposite relation field on the model `FixedAsset`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1279[0m
[1;94m   | [0m
[1;94m1278 | [0m  fixedAssetId        Int?
[1;94m1279 | [0m  [1;91mfixedAsset          FixedAsset?           @relation("RadiologyEquipmentFixedAsset")[0m
[1;94m1280 | [0m  procurementId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `RadiologyEquipment__fkey` has to be unique in the following namespace: on model `RadiologyEquipment` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1281[0m
[1;94m   | [0m
[1;94m1280 | [0m  procurementId       Int?
[1;94m1281 | [0m  [1;91mprocurement         Procurement?          @relation("RadiologyEquipmentProcurement")[0m
[1;94m1282 | [0m  radiologyTests      RadiologyTest[]       @relation("RadiologyTestEquipment")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `RadiologyEquipment`: The relation field `procurement` on model `RadiologyEquipment` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1281[0m
[1;94m   | [0m
[1;94m1280 | [0m  procurementId       Int?
[1;94m1281 | [0m  [1;91mprocurement         Procurement?          @relation("RadiologyEquipmentProcurement")[0m
[1;94m1282 | [0m  radiologyTests      RadiologyTest[]       @relation("RadiologyTestEquipment")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `clinicalSettingId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1331[0m
[1;94m   | [0m
[1;94m1330 | [0m  clinicalSettingId     Int?
[1;94m1331 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("ClinicalSettingOperationTheatre", fields: [clinicalSettingId], references: [id])[0m
[1;94m1332 | [0m  location              String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `OperationTheatre`: The relation field `cssdInstrument` on model `OperationTheatre` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1336[0m
[1;94m   | [0m
[1;94m1335 | [0m  cssdInstrumentId      Int?
[1;94m1336 | [0m  [1;91mcssdInstrument        CSSDInstrument?       @relation("OperationTheatreCSSDInstrument", fields: [cssdInstrumentId], references: [id])[0m
[1;94m1337 | [0m  procedures            SurgicalProcedure[]   @relation("OperationTheatreProcedures")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `OperationTheatre`: The relation field `createdBy` on model `OperationTheatre` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1340[0m
[1;94m   | [0m
[1;94m1339 | [0m  createdById           Int?
[1;94m1340 | [0m  [1;91mcreatedBy             User?                 @relation("TheatreCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1341 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `OperationTheatre`: The relation field `updatedBy` on model `OperationTheatre` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1342[0m
[1;94m   | [0m
[1;94m1341 | [0m  updatedById           Int?
[1;94m1342 | [0m  [1;91mupdatedBy             User?                 @relation("TheatreUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1343 | [0m  auditLogs             AuditLog[]            @relation("OperationTheatreAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `OperationTheatre`: The relation field `auditLogs` on model `OperationTheatre` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1343[0m
[1;94m   | [0m
[1;94m1342 | [0m  updatedBy             User?                 @relation("TheatreUpdatedBy", fields: [updatedById], references: [id])
[1;94m1343 | [0m  [1;91mauditLogs             AuditLog[]            @relation("OperationTheatreAuditLogs")[0m
[1;94m1344 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `SurgicalProcedure`: The relation field `patient` on model `SurgicalProcedure` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1358[0m
[1;94m   | [0m
[1;94m1357 | [0m  patientId             Int
[1;94m1358 | [0m  [1;91mpatient               Patient               @relation("PatientSurgicalProcedures", fields: [patientId], references: [id])[0m
[1;94m1359 | [0m  doctorId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `SurgicalProcedure`: The relation field `appointment` on model `SurgicalProcedure` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1364[0m
[1;94m   | [0m
[1;94m1363 | [0m  appointmentId         Int?                  @unique
[1;94m1364 | [0m  [1;91mappointment           Appointment?          @relation("ProcedureAppointment", fields: [appointmentId], references: [id])[0m
[1;94m1365 | [0m  admissionId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `SurgicalProcedure`: The relation field `clinicalRecord` on model `SurgicalProcedure` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1368[0m
[1;94m   | [0m
[1;94m1367 | [0m  clinicalRecordId      Int?
[1;94m1368 | [0m  [1;91mclinicalRecord        ClinicalRecord?       @relation("SurgicalProcedureClinicalRecord", fields: [clinicalRecordId], references: [id])[0m
[1;94m1369 | [0m  medicalRecordId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `SurgicalProcedure`: The relation field `medicalRecord` on model `SurgicalProcedure` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1370[0m
[1;94m   | [0m
[1;94m1369 | [0m  medicalRecordId       Int?
[1;94m1370 | [0m  [1;91mmedicalRecord         MedicalRecord?        @relation("ProcedureMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m1371 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `SurgicalProcedure`: The relation field `clinicalSetting` on model `SurgicalProcedure` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1374[0m
[1;94m   | [0m
[1;94m1373 | [0m  clinicalSettingId     Int?
[1;94m1374 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("SurgicalProcedureClinicalSetting", fields: [clinicalSettingId], references: [id])[0m
[1;94m1375 | [0m  type                  ProcedureType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdRequisition` in model `SurgicalProcedure`: The relation field `cssdRequisition` on model `SurgicalProcedure` is missing an opposite relation field on the model `CSSDRequisition`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1387[0m
[1;94m   | [0m
[1;94m1386 | [0m  cssdRequisitionId     Int?
[1;94m1387 | [0m  [1;91mcssdRequisition       CSSDRequisition?      @relation("SurgicalProcedureCSSDRequisition", fields: [cssdRequisitionId], references: [id])[0m
[1;94m1388 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `SurgicalProcedure`: The relation field `pharmacy` on model `SurgicalProcedure` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1389[0m
[1;94m   | [0m
[1;94m1388 | [0m  pharmacyId            Int?
[1;94m1389 | [0m  [1;91mpharmacy              Pharmacy?             @relation("ProcedurePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m1390 | [0m  nursingId             Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `SurgicalProcedure`: The relation field `billing` on model `SurgicalProcedure` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1393[0m
[1;94m   | [0m
[1;94m1392 | [0m  billingId             Int?
[1;94m1393 | [0m  [1;91mbilling               Billing?              @relation("ProcedureBilling", fields: [billingId], references: [id])[0m
[1;94m1394 | [0m  claimId               Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `SurgicalProcedure`: The relation field `nhifClaim` on model `SurgicalProcedure` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1397[0m
[1;94m   | [0m
[1;94m1396 | [0m  nhifClaimId           Int?
[1;94m1397 | [0m  [1;91mnhifClaim             NhifClaim?            @relation("ProcedureNhifClaim", fields: [nhifClaimId], references: [id])[0m
[1;94m1398 | [0m  staffAssignments      SurgicalStaff[]       @relation("ProcedureStaffAssignments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `SurgicalProcedure`: The relation field `createdBy` on model `SurgicalProcedure` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1401[0m
[1;94m   | [0m
[1;94m1400 | [0m  createdById           Int?
[1;94m1401 | [0m  [1;91mcreatedBy             User?                 @relation("ProcedureCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1402 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `SurgicalProcedure`: The relation field `updatedBy` on model `SurgicalProcedure` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1403[0m
[1;94m   | [0m
[1;94m1402 | [0m  updatedById           Int?
[1;94m1403 | [0m  [1;91mupdatedBy             User?                 @relation("ProcedureUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1404 | [0m  auditLogs             AuditLog[]            @relation("SurgicalProcedureAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `SurgicalProcedure`: The relation field `auditLogs` on model `SurgicalProcedure` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1404[0m
[1;94m   | [0m
[1;94m1403 | [0m  updatedBy             User?                 @relation("ProcedureUpdatedBy", fields: [updatedById], references: [id])
[1;94m1404 | [0m  [1;91mauditLogs             AuditLog[]            @relation("SurgicalProcedureAuditLogs")[0m
[1;94m1405 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `SurgicalStaff`: The relation field `createdBy` on model `SurgicalStaff` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1419[0m
[1;94m   | [0m
[1;94m1418 | [0m  createdById           Int?
[1;94m1419 | [0m  [1;91mcreatedBy             User?                 @relation("StaffAssignmentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1420 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `SurgicalStaff`: The relation field `updatedBy` on model `SurgicalStaff` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1421[0m
[1;94m   | [0m
[1;94m1420 | [0m  updatedById           Int?
[1;94m1421 | [0m  [1;91mupdatedBy             User?                 @relation("StaffAssignmentUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1422 | [0m  auditLogs             AuditLog[]            @relation("SurgicalStaffAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `SurgicalStaff`: The relation field `auditLogs` on model `SurgicalStaff` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1422[0m
[1;94m   | [0m
[1;94m1421 | [0m  updatedBy             User?                 @relation("StaffAssignmentUpdatedBy", fields: [updatedById], references: [id])
[1;94m1422 | [0m  [1;91mauditLogs             AuditLog[]            @relation("SurgicalStaffAuditLogs")[0m
[1;94m1423 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `ClinicalSetting__fkey` has to be unique in the following namespace: on model `ClinicalSetting` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1476[0m
[1;94m   | [0m
[1;94m1475 | [0m  laboratoryId          Int?                  @unique
[1;94m1476 | [0m  [1;91mlaboratory            Laboratory?           @relation("ClinicalSettingLaboratory")[0m
[1;94m1477 | [0m  radiologyId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratory` in model `ClinicalSetting`: The relation field `laboratory` on model `ClinicalSetting` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1476[0m
[1;94m   | [0m
[1;94m1475 | [0m  laboratoryId          Int?                  @unique
[1;94m1476 | [0m  [1;91mlaboratory            Laboratory?           @relation("ClinicalSettingLaboratory")[0m
[1;94m1477 | [0m  radiologyId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `ClinicalSetting__fkey` has to be unique in the following namespace: on model `ClinicalSetting` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1478[0m
[1;94m   | [0m
[1;94m1477 | [0m  radiologyId           Int?                  @unique
[1;94m1478 | [0m  [1;91mradiology             Radiology?            @relation("ClinicalSettingRadiology")[0m
[1;94m1479 | [0m  pharmacyId            Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `ClinicalSetting` and `clinicalSetting` on Model `Radiology` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1478[0m
[1;94m   | [0m
[1;94m1477 | [0m  radiologyId           Int?                  @unique
[1;94m1478 | [0m  [1;91mradiology             Radiology?            @relation("ClinicalSettingRadiology")[0m
[1;94m1479 | [0m  pharmacyId            Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Radiology` and `radiology` on Model `ClinicalSetting` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1193[0m
[1;94m   | [0m
[1;94m1192 | [0m  claims              Claim[]               @relation("ClaimRadiology")
[1;94m1193 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("ClinicalSettingRadiology")[0m
[1;94m1194 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `ClinicalSetting` and `clinicalSetting` on Model `Radiology` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1478[0m
[1;94m   | [0m
[1;94m1477 | [0m  radiologyId           Int?                  @unique
[1;94m1478 | [0m  [1;91mradiology             Radiology?            @relation("ClinicalSettingRadiology")[0m
[1;94m1479 | [0m  pharmacyId            Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Radiology` and `radiology` on Model `ClinicalSetting` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1193[0m
[1;94m   | [0m
[1;94m1192 | [0m  claims              Claim[]               @relation("ClaimRadiology")
[1;94m1193 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("ClinicalSettingRadiology")[0m
[1;94m1194 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `ClinicalSetting__fkey` has to be unique in the following namespace: on model `ClinicalSetting` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1480[0m
[1;94m   | [0m
[1;94m1479 | [0m  pharmacyId            Int?                  @unique
[1;94m1480 | [0m  [1;91mpharmacy              Pharmacy?             @relation("ClinicalSettingPharmacy")[0m
[1;94m1481 | [0m  operationTheatreId    Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `ClinicalSetting`: The relation field `pharmacy` on model `ClinicalSetting` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1480[0m
[1;94m   | [0m
[1;94m1479 | [0m  pharmacyId            Int?                  @unique
[1;94m1480 | [0m  [1;91mpharmacy              Pharmacy?             @relation("ClinicalSettingPharmacy")[0m
[1;94m1481 | [0m  operationTheatreId    Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `ClinicalSetting__fkey` has to be unique in the following namespace: on model `ClinicalSetting` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1484[0m
[1;94m   | [0m
[1;94m1483 | [0m  nursingId             Int?                  @unique
[1;94m1484 | [0m  [1;91mnursing               Nursing?              @relation("ClinicalSettingNursing")[0m
[1;94m1485 | [0m  cssdId                Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursing` in model `ClinicalSetting`: The relation field `nursing` on model `ClinicalSetting` is missing an opposite relation field on the model `Nursing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1484[0m
[1;94m   | [0m
[1;94m1483 | [0m  nursingId             Int?                  @unique
[1;94m1484 | [0m  [1;91mnursing               Nursing?              @relation("ClinicalSettingNursing")[0m
[1;94m1485 | [0m  cssdId                Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `ClinicalSetting__fkey` has to be unique in the following namespace: on model `ClinicalSetting` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1488[0m
[1;94m   | [0m
[1;94m1487 | [0m  wardId                Int?                  @unique
[1;94m1488 | [0m  [1;91mward                  Ward?                 @relation("ClinicalSettingWard")[0m
[1;94m1489 | [0m  triageProtocols       String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `ward` on Model `ClinicalSetting` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1488[0m
[1;94m   | [0m
[1;94m1487 | [0m  wardId                Int?                  @unique
[1;94m1488 | [0m  [1;91mward                  Ward?                 @relation("ClinicalSettingWard")[0m
[1;94m1489 | [0m  triageProtocols       String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `ward` on Model `ClinicalSetting` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1488[0m
[1;94m   | [0m
[1;94m1487 | [0m  wardId                Int?                  @unique
[1;94m1488 | [0m  [1;91mward                  Ward?                 @relation("ClinicalSettingWard")[0m
[1;94m1489 | [0m  triageProtocols       String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ClinicalSetting`: The relation field `createdBy` on model `ClinicalSetting` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1494[0m
[1;94m   | [0m
[1;94m1493 | [0m  createdById           Int?                  @unique
[1;94m1494 | [0m  [1;91mcreatedBy             User?                 @relation("ClinicalSettingCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1495 | [0m  updatedById           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ClinicalSetting`: The relation field `updatedBy` on model `ClinicalSetting` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1496[0m
[1;94m   | [0m
[1;94m1495 | [0m  updatedById           Int?                  @unique
[1;94m1496 | [0m  [1;91mupdatedBy             User?                 @relation("ClinicalSettingUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1497 | [0m  auditLogs             AuditLog[]            @relation("ClinicalSettingAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalSetting`: The relation field `auditLogs` on model `ClinicalSetting` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1497[0m
[1;94m   | [0m
[1;94m1496 | [0m  updatedBy             User?                 @relation("ClinicalSettingUpdatedBy", fields: [updatedById], references: [id])
[1;94m1497 | [0m  [1;91mauditLogs             AuditLog[]            @relation("ClinicalSettingAuditLogs")[0m
[1;94m1498 | [0m  clinicalSettingDocuments ClinicalSettingDocument[] @relation("ClinicalSettingDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursingCares` in model `ClinicalSetting`: The relation field `nursingCares` on model `ClinicalSetting` is missing an opposite relation field on the model `NursingCare`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1515[0m
[1;94m   | [0m
[1;94m1514 | [0m  cssdRequisitions      CSSDRequisition[]     @relation("ClinicalSettingCSSDRequisitions")
[1;94m1515 | [0m  [1;91mnursingCares          NursingCare[]         @relation("NursingCareClinicalSettings")[0m
[1;94m1516 | [0m  queues               Queue[]               @relation("QueueClinicalSettings")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Room`: The relation field `createdBy` on model `Room` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1536[0m
[1;94m   | [0m
[1;94m1535 | [0m  createdById           Int?                  @unique
[1;94m1536 | [0m  [1;91mcreatedBy             User?                 @relation("RoomCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1537 | [0m  updatedById           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Room`: The relation field `updatedBy` on model `Room` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1538[0m
[1;94m   | [0m
[1;94m1537 | [0m  updatedById           Int?                  @unique
[1;94m1538 | [0m  [1;91mupdatedBy             User?                 @relation("RoomUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1539 | [0m  auditLogs             AuditLog[]            @relation("RoomAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Room`: The relation field `auditLogs` on model `Room` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1539[0m
[1;94m   | [0m
[1;94m1538 | [0m  updatedBy             User?                 @relation("RoomUpdatedBy", fields: [updatedById], references: [id])
[1;94m1539 | [0m  [1;91mauditLogs             AuditLog[]            @relation("RoomAuditLogs")[0m
[1;94m1540 | [0m  roomSchedules         RoomSchedule[]        @relation("RoomSchedules")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `RoomSchedule`: The relation field `appointment` on model `RoomSchedule` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1553[0m
[1;94m   | [0m
[1;94m1552 | [0m  appointmentId         Int?                  @unique
[1;94m1553 | [0m  [1;91mappointment           Appointment?          @relation("RoomScheduleAppointment", fields: [appointmentId], references: [id])[0m
[1;94m1554 | [0m  status                String                @default("AVAILABLE")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `RoomSchedule`: The relation field `createdBy` on model `RoomSchedule` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1557[0m
[1;94m   | [0m
[1;94m1556 | [0m  createdById           Int?                  @unique
[1;94m1557 | [0m  [1;91mcreatedBy             User?                 @relation("RoomScheduleCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1558 | [0m  updatedById           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `RoomSchedule`: The relation field `updatedBy` on model `RoomSchedule` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1559[0m
[1;94m   | [0m
[1;94m1558 | [0m  updatedById           Int?                  @unique
[1;94m1559 | [0m  [1;91mupdatedBy             User?                 @relation("RoomScheduleUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1560 | [0m  auditLogs             AuditLog[]            @relation("RoomScheduleAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `RoomSchedule`: The relation field `auditLogs` on model `RoomSchedule` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1560[0m
[1;94m   | [0m
[1;94m1559 | [0m  updatedBy             User?                 @relation("RoomScheduleUpdatedBy", fields: [updatedById], references: [id])
[1;94m1560 | [0m  [1;91mauditLogs             AuditLog[]            @relation("RoomScheduleAuditLogs")[0m
[1;94m1561 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `ClinicalSettingDocument`: The relation field `uploadedBy` on model `ClinicalSettingDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1574[0m
[1;94m   | [0m
[1;94m1573 | [0m  uploadedById          Int?                  @unique
[1;94m1574 | [0m  [1;91muploadedBy            User?                 @relation("ClinicalSettingDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m1575 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalSettingDocument`: The relation field `auditLogs` on model `ClinicalSettingDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1577[0m
[1;94m   | [0m
[1;94m1576 | [0m  updatedAt             DateTime              @updatedAt
[1;94m1577 | [0m  [1;91mauditLogs             AuditLog[]            @relation("ClinicalSettingDocumentAuditLogs")[0m
[1;94m1578 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ClinicalSettingNotification`: The relation field `recipient` on model `ClinicalSettingNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1589[0m
[1;94m   | [0m
[1;94m1588 | [0m  recipientId           Int?                  @unique
[1;94m1589 | [0m  [1;91mrecipient             User?                 @relation("ClinicalSettingNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m1590 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Cssd`: The relation field `department` on model `Cssd` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1642[0m
[1;94m   | [0m
[1;94m1641 | [0m  departmentId        Int?
[1;94m1642 | [0m  [1;91mdepartment          Department?           @relation("DepartmentCssd", fields: [departmentId], references: [id])[0m
[1;94m1643 | [0m  clinicalSettingId   Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Cssd`: The relation field `createdBy` on model `Cssd` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1655[0m
[1;94m   | [0m
[1;94m1654 | [0m  createdById         Int?                  @unique
[1;94m1655 | [0m  [1;91mcreatedBy           User?                 @relation("CssdCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1656 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Cssd`: The relation field `updatedBy` on model `Cssd` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1657[0m
[1;94m   | [0m
[1;94m1656 | [0m  updatedById         Int?                  @unique
[1;94m1657 | [0m  [1;91mupdatedBy           User?                 @relation("CssdUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1658 | [0m  auditLogs           AuditLog[]            @relation("CssdAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Cssd`: The relation field `auditLogs` on model `Cssd` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1658[0m
[1;94m   | [0m
[1;94m1657 | [0m  updatedBy           User?                 @relation("CssdUpdatedBy", fields: [updatedById], references: [id])
[1;94m1658 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CssdAuditLogs")[0m
[1;94m1659 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `CSSDInstrument`: The relation field `department` on model `CSSDInstrument` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1683[0m
[1;94m   | [0m
[1;94m1682 | [0m  departmentId        Int?
[1;94m1683 | [0m  [1;91mdepartment          Department?           @relation("DepartmentCSSDInstruments", fields: [departmentId], references: [id])[0m
[1;94m1684 | [0m  operationTheatreId  Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `CSSDInstrument`: The relation field `operationTheatre` on model `CSSDInstrument` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1685[0m
[1;94m   | [0m
[1;94m1684 | [0m  operationTheatreId  Int?                  @unique
[1;94m1685 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("OperationTheatreCSSDInstruments", fields: [operationTheatreId], references: [id])[0m
[1;94m1686 | [0m  clinicalSettingId   Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `CSSDInstrument`: The relation field `procurement` on model `CSSDInstrument` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1689[0m
[1;94m   | [0m
[1;94m1688 | [0m  procurementId       Int?                  @unique
[1;94m1689 | [0m  [1;91mprocurement         Procurement?          @relation("CSSDInstrumentProcurement", fields: [procurementId], references: [id])[0m
[1;94m1690 | [0m  fixedAssetId        Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `CSSDInstrument`: The relation field `createdBy` on model `CSSDInstrument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1697[0m
[1;94m   | [0m
[1;94m1696 | [0m  createdById         Int?                  @unique
[1;94m1697 | [0m  [1;91mcreatedBy           User?                 @relation("InstrumentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1698 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `CSSDInstrument`: The relation field `updatedBy` on model `CSSDInstrument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1699[0m
[1;94m   | [0m
[1;94m1698 | [0m  updatedById         Int?                  @unique
[1;94m1699 | [0m  [1;91mupdatedBy           User?                 @relation("InstrumentUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1700 | [0m  auditLogs           AuditLog[]            @relation("CSSDInstrumentAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDInstrument`: The relation field `auditLogs` on model `CSSDInstrument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1700[0m
[1;94m   | [0m
[1;94m1699 | [0m  updatedBy           User?                 @relation("InstrumentUpdatedBy", fields: [updatedById], references: [id])
[1;94m1700 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDInstrumentAuditLogs")[0m
[1;94m1701 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `CSSDRecord`: The relation field `operationTheatre` on model `CSSDRecord` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1723[0m
[1;94m   | [0m
[1;94m1722 | [0m  operationTheatreId  Int?                  @unique
[1;94m1723 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("OperationTheatreCSSDRecords", fields: [operationTheatreId], references: [id])[0m
[1;94m1724 | [0m  clinicalSettingId   Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `CSSDRecord`: The relation field `createdBy` on model `CSSDRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1727[0m
[1;94m   | [0m
[1;94m1726 | [0m  createdById         Int?                  @unique
[1;94m1727 | [0m  [1;91mcreatedBy           User?                 @relation("RecordCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1728 | [0m  qualityCheckedById  Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `qualityCheckedBy` in model `CSSDRecord`: The relation field `qualityCheckedBy` on model `CSSDRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1729[0m
[1;94m   | [0m
[1;94m1728 | [0m  qualityCheckedById  Int?                  @unique
[1;94m1729 | [0m  [1;91mqualityCheckedBy    User?                 @relation("RecordQualityCheckedBy", fields: [qualityCheckedById], references: [id])[0m
[1;94m1730 | [0m  logs                CSSDLog[]             @relation("RecordLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDRecord`: The relation field `auditLogs` on model `CSSDRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1731[0m
[1;94m   | [0m
[1;94m1730 | [0m  logs                CSSDLog[]             @relation("RecordLogs")
[1;94m1731 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDRecordAuditLogs")[0m
[1;94m1732 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `CSSDRequisition`: The relation field `operationTheatre` on model `CSSDRequisition` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1746[0m
[1;94m   | [0m
[1;94m1745 | [0m  operationTheatreId  Int?                  @unique
[1;94m1746 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("OperationTheatreCSSDRequisitions", fields: [operationTheatreId], references: [id])[0m
[1;94m1747 | [0m  requestedById       Int
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `CSSDRequisition`: The relation field `approvedBy` on model `CSSDRequisition` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1750[0m
[1;94m   | [0m
[1;94m1749 | [0m  approvedById        Int?                  @unique
[1;94m1750 | [0m  [1;91mapprovedBy          User?                 @relation("RequisitionApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m1751 | [0m  quantity            Int
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `CSSDRequisition`: The relation field `procurement` on model `CSSDRequisition` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1760[0m
[1;94m   | [0m
[1;94m1759 | [0m  procurementId       Int?                  @unique
[1;94m1760 | [0m  [1;91mprocurement         Procurement?          @relation("CSSDRequisitionProcurement", fields: [procurementId], references: [id])[0m
[1;94m1761 | [0m  logs                CSSDLog[]             @relation("RequisitionLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDRequisition`: The relation field `auditLogs` on model `CSSDRequisition` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1762[0m
[1;94m   | [0m
[1;94m1761 | [0m  logs                CSSDLog[]             @relation("RequisitionLogs")
[1;94m1762 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDRequisitionAuditLogs")[0m
[1;94m1763 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `CSSDMaintenance`: The relation field `performedBy` on model `CSSDMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1778[0m
[1;94m   | [0m
[1;94m1777 | [0m  performedById       Int?                  @unique
[1;94m1778 | [0m  [1;91mperformedBy         User?                 @relation("MaintenancePerformedBy", fields: [performedById], references: [id])[0m
[1;94m1779 | [0m  cost                Float?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `CSSDMaintenance`: The relation field `procurement` on model `CSSDMaintenance` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1783[0m
[1;94m   | [0m
[1;94m1782 | [0m  procurementId       Int?                  @unique
[1;94m1783 | [0m  [1;91mprocurement         Procurement?          @relation("CSSDMaintenanceProcurement", fields: [procurementId], references: [id])[0m
[1;94m1784 | [0m  logs                CSSDLog[]             @relation("MaintenanceLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDMaintenance`: The relation field `auditLogs` on model `CSSDMaintenance` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1785[0m
[1;94m   | [0m
[1;94m1784 | [0m  logs                CSSDLog[]             @relation("MaintenanceLogs")
[1;94m1785 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDMaintenanceAuditLogs")[0m
[1;94m1786 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssd` in model `CSSDLog`: The relation field `cssd` on model `CSSDLog` is missing an opposite relation field on the model `Cssd`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1794[0m
[1;94m   | [0m
[1;94m1793 | [0m  cssdId              Int?
[1;94m1794 | [0m  [1;91mcssd                Cssd?                 @relation("CssdLogs", fields: [cssdId], references: [id])[0m
[1;94m1795 | [0m  instrumentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Nursing`: The relation field `patient` on model `Nursing` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1849[0m
[1;94m   | [0m
[1;94m1848 | [0m  patientId           Int?
[1;94m1849 | [0m  [1;91mpatient             Patient?              @relation("PatientNursingRecords", fields: [patientId], references: [id])[0m
[1;94m1850 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Nursing`: The relation field `clinicalRecord` on model `Nursing` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1855[0m
[1;94m   | [0m
[1;94m1854 | [0m  clinicalRecordId    Int?
[1;94m1855 | [0m  [1;91mclinicalRecord      ClinicalRecord?       @relation(fields: [clinicalRecordId], references: [id])[0m
[1;94m1856 | [0m  admissionId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `ward` in model `Nursing`: The relation field `ward` on model `Nursing` is missing an opposite relation field on the model `Ward`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1859[0m
[1;94m   | [0m
[1;94m1858 | [0m  wardId              Int?
[1;94m1859 | [0m  [1;91mward                Ward?                 @relation("WardNursing", fields: [wardId], references: [id])[0m
[1;94m1860 | [0m  clinicalSettingId   Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Nursing`: The relation field `clinicalSetting` on model `Nursing` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1861[0m
[1;94m   | [0m
[1;94m1860 | [0m  clinicalSettingId   Int?
[1;94m1861 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m1862 | [0m  status              NursingStatus         @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Nursing`: The relation field `billing` on model `Nursing` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1868[0m
[1;94m   | [0m
[1;94m1867 | [0m  billingId           Int?
[1;94m1868 | [0m  [1;91mbilling             Billing?              @relation("NursingBilling", fields: [billingId], references: [id])[0m
[1;94m1869 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Nursing`: The relation field `createdBy` on model `Nursing` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1871[0m
[1;94m   | [0m
[1;94m1870 | [0m  createdById         Int?
[1;94m1871 | [0m  [1;91mcreatedBy           User?                 @relation("NursingCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1872 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Nursing`: The relation field `updatedBy` on model `Nursing` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1873[0m
[1;94m   | [0m
[1;94m1872 | [0m  updatedById         Int?
[1;94m1873 | [0m  [1;91mupdatedBy           User?                 @relation("NursingUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1874 | [0m  auditLogs           AuditLog[]            @relation("NursingAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Nursing`: The relation field `auditLogs` on model `Nursing` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1874[0m
[1;94m   | [0m
[1;94m1873 | [0m  updatedBy           User?                 @relation("NursingUpdatedBy", fields: [updatedById], references: [id])
[1;94m1874 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingAuditLogs")[0m
[1;94m1875 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `NursingCare`: The relation field `patient` on model `NursingCare` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1884[0m
[1;94m   | [0m
[1;94m1883 | [0m  patientId           Int
[1;94m1884 | [0m  [1;91mpatient             Patient               @relation("PatientNursingCare", fields: [patientId], references: [id])[0m
[1;94m1885 | [0m  nurseId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `NursingCare`: The relation field `clinicalRecord` on model `NursingCare` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1890[0m
[1;94m   | [0m
[1;94m1889 | [0m  clinicalRecordId    Int?
[1;94m1890 | [0m  [1;91mclinicalRecord      ClinicalRecord?       @relation(fields: [clinicalRecordId], references: [id])[0m
[1;94m1891 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `NursingCare`: The relation field `medicalRecord` on model `NursingCare` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1892[0m
[1;94m   | [0m
[1;94m1891 | [0m  medicalRecordId     Int?
[1;94m1892 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("NursingCareMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m1893 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `NursingCare`: The relation field `clinicalSetting` on model `NursingCare` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1898[0m
[1;94m   | [0m
[1;94m1897 | [0m  clinicalSettingId   Int?
[1;94m1898 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m1899 | [0m  type                NursingCareType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `prescription` in model `NursingCare`: The relation field `prescription` on model `NursingCare` is missing an opposite relation field on the model `Prescription`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1910[0m
[1;94m   | [0m
[1;94m1909 | [0m  prescriptionId      Int?
[1;94m1910 | [0m  [1;91mprescription        Prescription?         @relation(fields: [prescriptionId], references: [id])[0m
[1;94m1911 | [0m  pharmacyId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `NursingCare`: The relation field `billing` on model `NursingCare` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1914[0m
[1;94m   | [0m
[1;94m1913 | [0m  billingId           Int?
[1;94m1914 | [0m  [1;91mbilling             Billing?              @relation("NursingCareBilling", fields: [billingId], references: [id])[0m
[1;94m1915 | [0m  nursing             Nursing[]             @relation("NursingCareRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NursingCare`: The relation field `createdBy` on model `NursingCare` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1919[0m
[1;94m   | [0m
[1;94m1918 | [0m  createdById         Int?
[1;94m1919 | [0m  [1;91mcreatedBy           User?                 @relation("NursingCareCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1920 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NursingCare`: The relation field `updatedBy` on model `NursingCare` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1921[0m
[1;94m   | [0m
[1;94m1920 | [0m  updatedById         Int?
[1;94m1921 | [0m  [1;91mupdatedBy           User?                 @relation("NursingCareUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1922 | [0m  auditLogs           AuditLog[]            @relation("NursingCareAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NursingCare`: The relation field `auditLogs` on model `NursingCare` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1922[0m
[1;94m   | [0m
[1;94m1921 | [0m  updatedBy           User?                 @relation("NursingCareUpdatedBy", fields: [updatedById], references: [id])
[1;94m1922 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingCareAuditLogs")[0m
[1;94m1923 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `prescription` in model `NursingTask`: The relation field `prescription` on model `NursingTask` is missing an opposite relation field on the model `Prescription`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1942[0m
[1;94m   | [0m
[1;94m1941 | [0m  prescriptionId      Int?
[1;94m1942 | [0m  [1;91mprescription        Prescription?         @relation(fields: [prescriptionId], references: [id])[0m
[1;94m1943 | [0m  shiftId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NursingTask`: The relation field `createdBy` on model `NursingTask` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1946[0m
[1;94m   | [0m
[1;94m1945 | [0m  createdById         Int?
[1;94m1946 | [0m  [1;91mcreatedBy           User?                 @relation("TaskCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1947 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NursingTask`: The relation field `updatedBy` on model `NursingTask` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1948[0m
[1;94m   | [0m
[1;94m1947 | [0m  updatedById         Int?
[1;94m1948 | [0m  [1;91mupdatedBy           User?                 @relation("TaskUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1949 | [0m  auditLogs           AuditLog[]            @relation("NursingTaskAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NursingTask`: The relation field `auditLogs` on model `NursingTask` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1949[0m
[1;94m   | [0m
[1;94m1948 | [0m  updatedBy           User?                 @relation("TaskUpdatedBy", fields: [updatedById], references: [id])
[1;94m1949 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingTaskAuditLogs")[0m
[1;94m1950 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NursingShift`: The relation field `createdBy` on model `NursingShift` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1970[0m
[1;94m   | [0m
[1;94m1969 | [0m  createdById         Int?
[1;94m1970 | [0m  [1;91mcreatedBy           User?                 @relation("ShiftCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1971 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NursingShift`: The relation field `updatedBy` on model `NursingShift` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1972[0m
[1;94m   | [0m
[1;94m1971 | [0m  updatedById         Int?
[1;94m1972 | [0m  [1;91mupdatedBy           User?                 @relation("ShiftUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1973 | [0m  auditLogs           AuditLog[]            @relation("NursingShiftAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NursingShift`: The relation field `auditLogs` on model `NursingShift` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1973[0m
[1;94m   | [0m
[1;94m1972 | [0m  updatedBy           User?                 @relation("ShiftUpdatedBy", fields: [updatedById], references: [id])
[1;94m1973 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingShiftAuditLogs")[0m
[1;94m1974 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Maternity`: The relation field `patient` on model `Maternity` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2000[0m
[1;94m   | [0m
[1;94m1999 | [0m  patientId               Int
[1;94m2000 | [0m  [1;91mpatient                 Patient                 @relation("PatientMaternityRecords", fields: [patientId], references: [id])[0m
[1;94m2001 | [0m  doctorId                Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Maternity`: The relation field `admission` on model `Maternity` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2004[0m
[1;94m   | [0m
[1;94m2003 | [0m  admissionId             Int?
[1;94m2004 | [0m  [1;91madmission               Admission?              @relation("AdmissionMaternity", fields: [admissionId], references: [id])[0m
[1;94m2005 | [0m  departmentId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Maternity`: The relation field `clinicalSetting` on model `Maternity` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2008[0m
[1;94m   | [0m
[1;94m2007 | [0m  clinicalSettingId       Int?
[1;94m2008 | [0m  [1;91mclinicalSetting         ClinicalSetting?        @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m2009 | [0m  status                  MaternityStatus         @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Maternity`: The relation field `clinicalRecord` on model `Maternity` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2018[0m
[1;94m   | [0m
[1;94m2017 | [0m  clinicalRecordId        Int?
[1;94m2018 | [0m  [1;91mclinicalRecord          ClinicalRecord?         @relation(fields: [clinicalRecordId], references: [id])[0m
[1;94m2019 | [0m  billingId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Maternity`: The relation field `billing` on model `Maternity` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2020[0m
[1;94m   | [0m
[1;94m2019 | [0m  billingId               Int?
[1;94m2020 | [0m  [1;91mbilling                 Billing?                @relation(fields: [billingId], references: [id])[0m
[1;94m2021 | [0m  claimId                 Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `Maternity`: The relation field `claim` on model `Maternity` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2022[0m
[1;94m   | [0m
[1;94m2021 | [0m  claimId                 Int?
[1;94m2022 | [0m  [1;91mclaim                   Claim?                  @relation(fields: [claimId], references: [id])[0m
[1;94m2023 | [0m  wardId                  Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `ward` in model `Maternity`: The relation field `ward` on model `Maternity` is missing an opposite relation field on the model `Ward`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2024[0m
[1;94m   | [0m
[1;94m2023 | [0m  wardId                  Int?
[1;94m2024 | [0m  [1;91mward                    Ward?                   @relation(fields: [wardId], references: [id])[0m
[1;94m2025 | [0m  bedId                   Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `bed` in model `Maternity`: The relation field `bed` on model `Maternity` is missing an opposite relation field on the model `Bed`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2026[0m
[1;94m   | [0m
[1;94m2025 | [0m  bedId                   Int?
[1;94m2026 | [0m  [1;91mbed                     Bed?                    @relation(fields: [bedId], references: [id])[0m
[1;94m2027 | [0m  laboratoryId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratory` in model `Maternity`: The relation field `laboratory` on model `Maternity` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2028[0m
[1;94m   | [0m
[1;94m2027 | [0m  laboratoryId            Int?
[1;94m2028 | [0m  [1;91mlaboratory              Laboratory?             @relation(fields: [laboratoryId], references: [id])[0m
[1;94m2029 | [0m  radiologyId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2030[0m
[1;94m   | [0m
[1;94m2029 | [0m  radiologyId             Int?
[1;94m2030 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2031 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1184[0m
[1;94m   | [0m
[1;94m1183 | [0m  maternityId         Int?                  @unique
[1;94m1184 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1185 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2030[0m
[1;94m   | [0m
[1;94m2029 | [0m  radiologyId             Int?
[1;94m2030 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2031 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1184[0m
[1;94m   | [0m
[1;94m1183 | [0m  maternityId         Int?                  @unique
[1;94m1184 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1185 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `radiologyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2030[0m
[1;94m   | [0m
[1;94m2029 | [0m  radiologyId             Int?
[1;94m2030 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2031 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2032[0m
[1;94m   | [0m
[1;94m2031 | [0m  pharmacyId              Int?
[1;94m2032 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2033 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2249[0m
[1;94m   | [0m
[1;94m2248 | [0m  maternityId           Int?
[1;94m2249 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2250 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2032[0m
[1;94m   | [0m
[1;94m2031 | [0m  pharmacyId              Int?
[1;94m2032 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2033 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2249[0m
[1;94m   | [0m
[1;94m2248 | [0m  maternityId           Int?
[1;94m2249 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2250 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `pharmacyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2032[0m
[1;94m   | [0m
[1;94m2031 | [0m  pharmacyId              Int?
[1;94m2032 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2033 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `medicalRecordId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2036[0m
[1;94m   | [0m
[1;94m2035 | [0m  medicalRecordId         Int?
[1;94m2036 | [0m  [1;91mmedicalRecord           MedicalRecord?          @relation("MedicalRecordMaternity", fields: [medicalRecordId], references: [id])[0m
[1;94m2037 | [0m  notes                   String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Vaccination`: The relation field `patient` on model `Vaccination` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2116[0m
[1;94m   | [0m
[1;94m2115 | [0m  patientId           Int
[1;94m2116 | [0m  [1;91mpatient             Patient               @relation("PatientVaccinationRecords", fields: [patientId], references: [id])[0m
[1;94m2117 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `Vaccination`: The relation field `appointment` on model `Vaccination` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2122[0m
[1;94m   | [0m
[1;94m2121 | [0m  appointmentId       Int?
[1;94m2122 | [0m  [1;91mappointment         Appointment?          @relation("VaccinationAppointment", fields: [appointmentId], references: [id])[0m
[1;94m2123 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `Vaccination`: The relation field `medicalRecord` on model `Vaccination` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2124[0m
[1;94m   | [0m
[1;94m2123 | [0m  medicalRecordId     Int?
[1;94m2124 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("VaccinationMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m2125 | [0m  clinicalRecordId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Vaccination`: The relation field `clinicalRecord` on model `Vaccination` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2126[0m
[1;94m   | [0m
[1;94m2125 | [0m  clinicalRecordId    Int?
[1;94m2126 | [0m  [1;91mclinicalRecord      ClinicalRecord?       @relation("VaccinationClinicalRecord", fields: [clinicalRecordId], references: [id])[0m
[1;94m2127 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Vaccination`: The relation field `clinicalSetting` on model `Vaccination` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2130[0m
[1;94m   | [0m
[1;94m2129 | [0m  clinicalSettingId   Int?
[1;94m2130 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("VaccinationClinicalSetting", fields: [clinicalSettingId], references: [id])[0m
[1;94m2131 | [0m  vaccineId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `vaccine` in model `Vaccination`: The relation field `vaccine` on model `Vaccination` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2132[0m
[1;94m   | [0m
[1;94m2131 | [0m  vaccineId           Int?
[1;94m2132 | [0m  [1;91mvaccine             Medication?           @relation("VaccinationMedication", fields: [vaccineId], references: [id])[0m
[1;94m2133 | [0m  type                VaccineType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `Vaccination`: The relation field `nhifClaim` on model `Vaccination` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2153[0m
[1;94m   | [0m
[1;94m2152 | [0m  nhifClaimId         Int?
[1;94m2153 | [0m  [1;91mnhifClaim           NhifClaim?            @relation("VaccinationNhifClaim", fields: [nhifClaimId], references: [id])[0m
[1;94m2154 | [0m  pharmacyId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `Vaccination`: The relation field `pharmacy` on model `Vaccination` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2155[0m
[1;94m   | [0m
[1;94m2154 | [0m  pharmacyId          Int?
[1;94m2155 | [0m  [1;91mpharmacy            Pharmacy?             @relation("VaccinationPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2156 | [0m  inventoryId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `Vaccination`: The relation field `inventory` on model `Vaccination` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2157[0m
[1;94m   | [0m
[1;94m2156 | [0m  inventoryId         Int?
[1;94m2157 | [0m  [1;91minventory           Inventory?            @relation("VaccinationInventory", fields: [inventoryId], references: [id])[0m
[1;94m2158 | [0m  documents           String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `vaccinationCampaign` on Model `Vaccination` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2166[0m
[1;94m   | [0m
[1;94m2165 | [0m  updatedAt           DateTime              @updatedAt
[1;94m2166 | [0m  [1;91mvaccinationCampaign  VaccinationCampaign?  @relation("CampaignVaccinations")[0m
[1;94m2167 | [0m  vaccinationRecords  Doctor[]              @relation("DoctorVaccinationRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `vaccinationCampaign` on Model `Vaccination` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2166[0m
[1;94m   | [0m
[1;94m2165 | [0m  updatedAt           DateTime              @updatedAt
[1;94m2166 | [0m  [1;91mvaccinationCampaign  VaccinationCampaign?  @relation("CampaignVaccinations")[0m
[1;94m2167 | [0m  vaccinationRecords  Doctor[]              @relation("DoctorVaccinationRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Pharmacy`: The relation field `admission` on model `Pharmacy` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2232[0m
[1;94m   | [0m
[1;94m2231 | [0m  admissionId           Int?
[1;94m2232 | [0m  [1;91madmission             Admission?            @relation("PharmacyAdmissions", fields: [admissionId], references: [id])[0m
[1;94m2233 | [0m  prescriptionId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2236[0m
[1;94m   | [0m
[1;94m2235 | [0m  invoiceId             Int?
[1;94m2236 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2237 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2704[0m
[1;94m   | [0m
[1;94m2703 | [0m  pharmacyId            Int?
[1;94m2704 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2705 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2236[0m
[1;94m   | [0m
[1;94m2235 | [0m  invoiceId             Int?
[1;94m2236 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2237 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2704[0m
[1;94m   | [0m
[1;94m2703 | [0m  pharmacyId            Int?
[1;94m2704 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2705 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2236[0m
[1;94m   | [0m
[1;94m2235 | [0m  invoiceId             Int?
[1;94m2236 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2237 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Pharmacy`: The relation field `clinicalSetting` on model `Pharmacy` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2240[0m
[1;94m   | [0m
[1;94m2239 | [0m  clinicalSettingId     Int?
[1;94m2240 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("PharmacyClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m2241 | [0m  dispensingRecords     DispensingRecord[]    @relation("PharmacyDispensingRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `dispensingRecords` in model `Pharmacy`: The relation field `dispensingRecords` on model `Pharmacy` is missing an opposite relation field on the model `DispensingRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2241[0m
[1;94m   | [0m
[1;94m2240 | [0m  clinicalSetting       ClinicalSetting?      @relation("PharmacyClinicalSettings", fields: [clinicalSettingId], references: [id])
[1;94m2241 | [0m  [1;91mdispensingRecords     DispensingRecord[]    @relation("PharmacyDispensingRecords")[0m
[1;94m2242 | [0m  createdById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2249[0m
[1;94m   | [0m
[1;94m2248 | [0m  maternityId           Int?
[1;94m2249 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2250 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2032[0m
[1;94m   | [0m
[1;94m2031 | [0m  pharmacyId              Int?
[1;94m2032 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2033 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2249[0m
[1;94m   | [0m
[1;94m2248 | [0m  maternityId           Int?
[1;94m2249 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2250 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2032[0m
[1;94m   | [0m
[1;94m2031 | [0m  pharmacyId              Int?
[1;94m2032 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2033 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `maternityId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2249[0m
[1;94m   | [0m
[1;94m2248 | [0m  maternityId           Int?
[1;94m2249 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2250 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `Medication`: The relation field `inventory` on model `Medication` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2278[0m
[1;94m   | [0m
[1;94m2277 | [0m  inventoryId           Int?
[1;94m2278 | [0m  [1;91minventory             Inventory?            @relation("MedicationInventory", fields: [inventoryId], references: [id])[0m
[1;94m2279 | [0m  prescriptions         Prescription[]        @relation("MedicationPrescriptions")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `dispensingRecords` in model `Medication`: The relation field `dispensingRecords` on model `Medication` is missing an opposite relation field on the model `DispensingRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2280[0m
[1;94m   | [0m
[1;94m2279 | [0m  prescriptions         Prescription[]        @relation("MedicationPrescriptions")
[1;94m2280 | [0m  [1;91mdispensingRecords     DispensingRecord[]    @relation("MedicationDispensingRecords")[0m
[1;94m2281 | [0m  adverseReactions      AdverseReaction[]     @relation("MedicationAdverseReactions")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Prescription`: The relation field `clinicalRecord` on model `Prescription` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2311[0m
[1;94m   | [0m
[1;94m2310 | [0m  clinicalRecordId      Int?
[1;94m2311 | [0m  [1;91mclinicalRecord        ClinicalRecord?       @relation("PrescriptionClinicalRecords", fields: [clinicalRecordId], references: [id])[0m
[1;94m2312 | [0m  medicalRecordId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Prescription`: The relation field `createdBy` on model `Prescription` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2326[0m
[1;94m   | [0m
[1;94m2325 | [0m  createdById           Int?
[1;94m2326 | [0m  [1;91mcreatedBy             User?                 @relation("PrescriptionCreatedBy", fields: [createdById], references: [id])[0m
[1;94m2327 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Prescription`: The relation field `updatedBy` on model `Prescription` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2328[0m
[1;94m   | [0m
[1;94m2327 | [0m  updatedById           Int?
[1;94m2328 | [0m  [1;91mupdatedBy             User?                 @relation("PrescriptionUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m2329 | [0m  auditLogs             AuditLog[]            @relation("PrescriptionAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Prescription`: The relation field `auditLogs` on model `Prescription` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2329[0m
[1;94m   | [0m
[1;94m2328 | [0m  updatedBy             User?                 @relation("PrescriptionUpdatedBy", fields: [updatedById], references: [id])
[1;94m2329 | [0m  [1;91mauditLogs             AuditLog[]            @relation("PrescriptionAuditLogs")[0m
[1;94m2330 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursingCares` in model `Prescription`: The relation field `nursingCares` on model `Prescription` is missing an opposite relation field on the model `NursingCare`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2333[0m
[1;94m   | [0m
[1;94m2332 | [0m  prescription_ITEMS    PrescriptionItem[]    @relation("PrescriptionItems")
[1;94m2333 | [0m  [1;91mnursingCares          NursingCare[]         @relation("NursingCarePrescription")[0m
[1;94m2334 | [0m  nursingTasks          NursingTask[]         @relation("NursingTaskPrescription")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursingTasks` in model `Prescription`: The relation field `nursingTasks` on model `Prescription` is missing an opposite relation field on the model `NursingTask`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2334[0m
[1;94m   | [0m
[1;94m2333 | [0m  nursingCares          NursingCare[]         @relation("NursingCarePrescription")
[1;94m2334 | [0m  [1;91mnursingTasks          NursingTask[]         @relation("NursingTaskPrescription")[0m
[1;94m2335 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurements` in model `Department`: The relation field `procurements` on model `Department` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2422[0m
[1;94m   | [0m
[1;94m2421 | [0m  inventoryItems        Inventory[]           @relation("DepartmentInventory")
[1;94m2422 | [0m  [1;91mprocurements          Procurement[]         @relation("DepartmentProcurements")[0m
[1;94m2423 | [0m  costCenters           CostCenter[]          @relation("DepartmentCostCenters")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `verifications` in model `Department`: The relation field `verifications` on model `Department` is missing an opposite relation field on the model `Verification`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2465[0m
[1;94m   | [0m
[1;94m2464 | [0m  vaccinationCampaigns  VaccinationCampaign[] @relation("VaccinationCampaignDepartment")
[1;94m2465 | [0m  [1;91mverifications         Verification[]        @relation("DepartmentVerification")[0m
[1;94m2466 | [0m  verificationConfigs   VerificationConfiguration[] @relation("DepartmentVerificationConfig")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `verificationConfigs` in model `Department`: The relation field `verificationConfigs` on model `Department` is missing an opposite relation field on the model `VerificationConfiguration`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2466[0m
[1;94m   | [0m
[1;94m2465 | [0m  verifications         Verification[]        @relation("DepartmentVerification")
[1;94m2466 | [0m  [1;91mverificationConfigs   VerificationConfiguration[] @relation("DepartmentVerificationConfig")[0m
[1;94m2467 | [0m  emergencies           Emergency[]           @relation("DepartmentEmergencies")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referrals` in model `Department`: The relation field `referrals` on model `Department` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2468[0m
[1;94m   | [0m
[1;94m2467 | [0m  emergencies           Emergency[]           @relation("DepartmentEmergencies")
[1;94m2468 | [0m  [1;91mreferrals             Referral[]            @relation("Referral_department_fkey")[0m
[1;94m2469 | [0m  referralPrograms      ReferralProgram[]     @relation("ReferralProgram_department_fkey")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referralPrograms` in model `Department`: The relation field `referralPrograms` on model `Department` is missing an opposite relation field on the model `ReferralProgram`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2469[0m
[1;94m   | [0m
[1;94m2468 | [0m  referrals             Referral[]            @relation("Referral_department_fkey")
[1;94m2469 | [0m  [1;91mreferralPrograms      ReferralProgram[]     @relation("ReferralProgram_department_fkey")[0m
[1;94m2470 | [0m  medicalRecords        MedicalRecord[]       @relation("DepartmentMedicalRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `PrescriptionItem`: The relation field `createdBy` on model `PrescriptionItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2508[0m
[1;94m   | [0m
[1;94m2507 | [0m  createdById         Int?                  @unique
[1;94m2508 | [0m  [1;91mcreatedBy           User?                 @relation("PrescriptionItemCreatedBy", fields: [createdById], references: [id])[0m
[1;94m2509 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `PrescriptionItem`: The relation field `updatedBy` on model `PrescriptionItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2510[0m
[1;94m   | [0m
[1;94m2509 | [0m  updatedById         Int?                  @unique
[1;94m2510 | [0m  [1;91mupdatedBy           User?                 @relation("PrescriptionItemUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m2511 | [0m  auditLogs           AuditLog[]            @relation("PrescriptionItemAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `PrescriptionItem`: The relation field `auditLogs` on model `PrescriptionItem` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2511[0m
[1;94m   | [0m
[1;94m2510 | [0m  updatedBy           User?                 @relation("PrescriptionItemUpdatedBy", fields: [updatedById], references: [id])
[1;94m2511 | [0m  [1;91mauditLogs           AuditLog[]            @relation("PrescriptionItemAuditLogs")[0m
[1;94m2512 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medication` in model `DispensingRecord`: The relation field `medication` on model `DispensingRecord` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2522[0m
[1;94m   | [0m
[1;94m2521 | [0m  medicationId        Int
[1;94m2522 | [0m  [1;91mmedication          Medication            @relation("DispensingRecordMedication", fields: [medicationId], references: [id])[0m
[1;94m2523 | [0m  patientType         PatientType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `DispensingRecord`: The relation field `pharmacy` on model `DispensingRecord` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2529[0m
[1;94m   | [0m
[1;94m2528 | [0m  pharmacyId          Int?                  @unique
[1;94m2529 | [0m  [1;91mpharmacy            Pharmacy?             @relation("DispensingRecordPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2530 | [0m  invoiceId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `DispensingRecord`: The relation field `createdBy` on model `DispensingRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2537[0m
[1;94m   | [0m
[1;94m2536 | [0m  createdById         Int?                  @unique
[1;94m2537 | [0m  [1;91mcreatedBy           User?                 @relation("DispensingRecordCreatedBy", fields: [createdById], references: [id])[0m
[1;94m2538 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `DispensingRecord`: The relation field `updatedBy` on model `DispensingRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2539[0m
[1;94m   | [0m
[1;94m2538 | [0m  updatedById         Int?                  @unique
[1;94m2539 | [0m  [1;91mupdatedBy           User?                 @relation("DispensingRecordUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m2540 | [0m  auditLogs           AuditLog[]            @relation("DispensingRecordAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `DispensingRecord`: The relation field `auditLogs` on model `DispensingRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2540[0m
[1;94m   | [0m
[1;94m2539 | [0m  updatedBy           User?                 @relation("DispensingRecordUpdatedBy", fields: [updatedById], references: [id])
[1;94m2540 | [0m  [1;91mauditLogs           AuditLog[]            @relation("DispensingRecordAuditLogs")[0m
[1;94m2541 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `StockAdjustment`: The relation field `approvedBy` on model `StockAdjustment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2558[0m
[1;94m   | [0m
[1;94m2557 | [0m  approvedById        Int?                  @unique
[1;94m2558 | [0m  [1;91mapprovedBy          User?                 @relation("AdjustmentApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m2559 | [0m  adjustmentDate      DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `StockAdjustment`: The relation field `procurement` on model `StockAdjustment` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2563[0m
[1;94m   | [0m
[1;94m2562 | [0m  procurementId       Int?                  @unique
[1;94m2563 | [0m  [1;91mprocurement         Procurement?          @relation("StockAdjustmentProcurement", fields: [procurementId], references: [id])[0m
[1;94m2564 | [0m  inventoryId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `StockAdjustment`: The relation field `inventory` on model `StockAdjustment` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2565[0m
[1;94m   | [0m
[1;94m2564 | [0m  inventoryId         Int?                  @unique
[1;94m2565 | [0m  [1;91minventory           Inventory?            @relation("StockAdjustmentInventory", fields: [inventoryId], references: [id])[0m
[1;94m2566 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `StockAdjustment`: The relation field `auditLogs` on model `StockAdjustment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2567[0m
[1;94m   | [0m
[1;94m2566 | [0m  notes               String?
[1;94m2567 | [0m  [1;91mauditLogs           AuditLog[]            @relation("StockAdjustmentAuditLogs")[0m
[1;94m2568 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `notifications` in model `Billing`: The relation field `notifications` on model `Billing` is missing an opposite relation field on the model `BillingNotification`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2676[0m
[1;94m   | [0m
[1;94m2675 | [0m  auditLogs             AuditLog[]          @relation("BillingAuditLogs")
[1;94m2676 | [0m  [1;91mnotifications         BillingNotification[] @relation("BillingNotifications")[0m
[1;94m2677 | [0m  admissions            Admission[]         @relation("AdmissionBilling")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `prescriptionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2694[0m
[1;94m   | [0m
[1;94m2693 | [0m  prescriptionId        Int?
[1;94m2694 | [0m  [1;91mprescription          Prescription?       @relation("InvoicePrescription", fields: [prescriptionId], references: [id])[0m
[1;94m2695 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `appointmentId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2696[0m
[1;94m   | [0m
[1;94m2695 | [0m  appointmentId         Int?
[1;94m2696 | [0m  [1;91mappointment           Appointment?        @relation("AppointmentInvoices", fields: [appointmentId], references: [id])[0m
[1;94m2697 | [0m  admissionId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Invoice`: The relation field `admission` on model `Invoice` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2698[0m
[1;94m   | [0m
[1;94m2697 | [0m  admissionId           Int?
[1;94m2698 | [0m  [1;91madmission             Admission?          @relation("AdmissionInvoices", fields: [admissionId], references: [id])[0m
[1;94m2699 | [0m  laboratoryId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratory` in model `Invoice`: The relation field `laboratory` on model `Invoice` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2700[0m
[1;94m   | [0m
[1;94m2699 | [0m  laboratoryId          Int?
[1;94m2700 | [0m  [1;91mlaboratory            Laboratory?         @relation("InvoiceLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m2701 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2702[0m
[1;94m   | [0m
[1;94m2701 | [0m  radiologyId           Int?
[1;94m2702 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2703 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1170[0m
[1;94m   | [0m
[1;94m1169 | [0m  invoiceId           Int?                  @unique
[1;94m1170 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1171 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2702[0m
[1;94m   | [0m
[1;94m2701 | [0m  radiologyId           Int?
[1;94m2702 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2703 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1170[0m
[1;94m   | [0m
[1;94m1169 | [0m  invoiceId           Int?                  @unique
[1;94m1170 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1171 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `radiologyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2702[0m
[1;94m   | [0m
[1;94m2701 | [0m  radiologyId           Int?
[1;94m2702 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2703 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2704[0m
[1;94m   | [0m
[1;94m2703 | [0m  pharmacyId            Int?
[1;94m2704 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2705 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2236[0m
[1;94m   | [0m
[1;94m2235 | [0m  invoiceId             Int?
[1;94m2236 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2237 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2704[0m
[1;94m   | [0m
[1;94m2703 | [0m  pharmacyId            Int?
[1;94m2704 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2705 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2236[0m
[1;94m   | [0m
[1;94m2235 | [0m  invoiceId             Int?
[1;94m2236 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2237 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `pharmacyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2704[0m
[1;94m   | [0m
[1;94m2703 | [0m  pharmacyId            Int?
[1;94m2704 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2705 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `Invoice`: The relation field `operationTheatre` on model `Invoice` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2706[0m
[1;94m   | [0m
[1;94m2705 | [0m  operationTheatreId    Int?
[1;94m2706 | [0m  [1;91moperationTheatre      OperationTheatre?   @relation("InvoiceOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m2707 | [0m  totalAmount           Float
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2713[0m
[1;94m   | [0m
[1;94m2712 | [0m  transactionId         Int?
[1;94m2713 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2714 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2957[0m
[1;94m   | [0m
[1;94m2956 | [0m  invoiceId         Int?
[1;94m2957 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2958 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2713[0m
[1;94m   | [0m
[1;94m2712 | [0m  transactionId         Int?
[1;94m2713 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2714 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2957[0m
[1;94m   | [0m
[1;94m2956 | [0m  invoiceId         Int?
[1;94m2957 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2958 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `transactionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2713[0m
[1;94m   | [0m
[1;94m2712 | [0m  transactionId         Int?
[1;94m2713 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2714 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2715[0m
[1;94m   | [0m
[1;94m2714 | [0m  claimId               Int?
[1;94m2715 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2716 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3229[0m
[1;94m   | [0m
[1;94m3228 | [0m  invoiceId             Int?
[1;94m3229 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3230 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2715[0m
[1;94m   | [0m
[1;94m2714 | [0m  claimId               Int?
[1;94m2715 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2716 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3229[0m
[1;94m   | [0m
[1;94m3228 | [0m  invoiceId             Int?
[1;94m3229 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3230 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `claimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2715[0m
[1;94m   | [0m
[1;94m2714 | [0m  claimId               Int?
[1;94m2715 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2716 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2717[0m
[1;94m   | [0m
[1;94m2716 | [0m  nhifClaimId           Int?
[1;94m2717 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2718 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3382[0m
[1;94m   | [0m
[1;94m3381 | [0m  invoiceId           Int?
[1;94m3382 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3383 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2717[0m
[1;94m   | [0m
[1;94m2716 | [0m  nhifClaimId           Int?
[1;94m2717 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2718 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3382[0m
[1;94m   | [0m
[1;94m3381 | [0m  invoiceId           Int?
[1;94m3382 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3383 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `nhifClaimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2717[0m
[1;94m   | [0m
[1;94m2716 | [0m  nhifClaimId           Int?
[1;94m2717 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2718 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaims` in model `Invoice`: The relation field `nhifClaims` on model `Invoice` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2741[0m
[1;94m   | [0m
[1;94m2740 | [0m  payments              Payment[]           @relation("PaymentInvoices")
[1;94m2741 | [0m  [1;91mnhifClaims            NhifClaim[]         @relation("NhifClaimInvoice")[0m
[1;94m2742 | [0m  patients              Patient[]           @relation("PatientInsurances")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patients` in model `Invoice`: The relation field `patients` on model `Invoice` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2742[0m
[1;94m   | [0m
[1;94m2741 | [0m  nhifClaims            NhifClaim[]         @relation("NhifClaimInvoice")
[1;94m2742 | [0m  [1;91mpatients              Patient[]           @relation("PatientInsurances")[0m
[1;94m2743 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2957[0m
[1;94m   | [0m
[1;94m2956 | [0m  invoiceId         Int?
[1;94m2957 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2958 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2713[0m
[1;94m   | [0m
[1;94m2712 | [0m  transactionId         Int?
[1;94m2713 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2714 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2957[0m
[1;94m   | [0m
[1;94m2956 | [0m  invoiceId         Int?
[1;94m2957 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2958 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2713[0m
[1;94m   | [0m
[1;94m2712 | [0m  transactionId         Int?
[1;94m2713 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2714 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2957[0m
[1;94m   | [0m
[1;94m2956 | [0m  invoiceId         Int?
[1;94m2957 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2958 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2959[0m
[1;94m   | [0m
[1;94m2958 | [0m  claimId           Int?
[1;94m2959 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2960 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3245[0m
[1;94m   | [0m
[1;94m3244 | [0m  transactionId         Int?
[1;94m3245 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3246 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2959[0m
[1;94m   | [0m
[1;94m2958 | [0m  claimId           Int?
[1;94m2959 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2960 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3245[0m
[1;94m   | [0m
[1;94m3244 | [0m  transactionId         Int?
[1;94m3245 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3246 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `claimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2959[0m
[1;94m   | [0m
[1;94m2958 | [0m  claimId           Int?
[1;94m2959 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2960 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2961[0m
[1;94m   | [0m
[1;94m2960 | [0m  nhifClaimId       Int?
[1;94m2961 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2962 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3418[0m
[1;94m   | [0m
[1;94m3417 | [0m  transactionId       Int?
[1;94m3418 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3419 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2961[0m
[1;94m   | [0m
[1;94m2960 | [0m  nhifClaimId       Int?
[1;94m2961 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2962 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3418[0m
[1;94m   | [0m
[1;94m3417 | [0m  transactionId       Int?
[1;94m3418 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3419 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `nhifClaimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2961[0m
[1;94m   | [0m
[1;94m2960 | [0m  nhifClaimId       Int?
[1;94m2961 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2962 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `fixedAsset` in model `Transaction`: The relation field `fixedAsset` on model `Transaction` is missing an opposite relation field on the model `FixedAsset`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2967[0m
[1;94m   | [0m
[1;94m2966 | [0m  fixedAssetId      Int?
[1;94m2967 | [0m  [1;91mfixedAsset        FixedAsset?         @relation("TransactionFixedAssets", fields: [fixedAssetId], references: [id])[0m
[1;94m2968 | [0m  createdById       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3006[0m
[1;94m   | [0m
[1;94m3005 | [0m  budgetId          Int?
[1;94m3006 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m3007 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3031[0m
[1;94m   | [0m
[1;94m3030 | [0m  costCenterId      Int?
[1;94m3031 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3032 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3006[0m
[1;94m   | [0m
[1;94m3005 | [0m  budgetId          Int?
[1;94m3006 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m3007 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3031[0m
[1;94m   | [0m
[1;94m3030 | [0m  costCenterId      Int?
[1;94m3031 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3032 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `budgetId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3006[0m
[1;94m   | [0m
[1;94m3005 | [0m  budgetId          Int?
[1;94m3006 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m3007 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3031[0m
[1;94m   | [0m
[1;94m3030 | [0m  costCenterId      Int?
[1;94m3031 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3032 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3006[0m
[1;94m   | [0m
[1;94m3005 | [0m  budgetId          Int?
[1;94m3006 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m3007 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3031[0m
[1;94m   | [0m
[1;94m3030 | [0m  costCenterId      Int?
[1;94m3031 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3032 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3006[0m
[1;94m   | [0m
[1;94m3005 | [0m  budgetId          Int?
[1;94m3006 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m3007 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `costCenterId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3031[0m
[1;94m   | [0m
[1;94m3030 | [0m  costCenterId      Int?
[1;94m3031 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3032 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `BankStatement`: The relation field `auditLogs` on model `BankStatement` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3094[0m
[1;94m   | [0m
[1;94m3093 | [0m  updatedAt        DateTime             @updatedAt
[1;94m3094 | [0m  [1;91mauditLogs        AuditLog[]           @relation("BankStatementAuditLogs")[0m
[1;94m3095 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3229[0m
[1;94m   | [0m
[1;94m3228 | [0m  invoiceId             Int?
[1;94m3229 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3230 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2715[0m
[1;94m   | [0m
[1;94m2714 | [0m  claimId               Int?
[1;94m2715 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2716 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3229[0m
[1;94m   | [0m
[1;94m3228 | [0m  invoiceId             Int?
[1;94m3229 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3230 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2715[0m
[1;94m   | [0m
[1;94m2714 | [0m  claimId               Int?
[1;94m2715 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2716 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3229[0m
[1;94m   | [0m
[1;94m3228 | [0m  invoiceId             Int?
[1;94m3229 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3230 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `Claim`: The relation field `appointment` on model `Claim` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3231[0m
[1;94m   | [0m
[1;94m3230 | [0m  appointmentId         Int?
[1;94m3231 | [0m  [1;91mappointment           Appointment?        @relation("ClaimAppointments", fields: [appointmentId], references: [id])[0m
[1;94m3232 | [0m  admissionId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `Claim`: The relation field `pharmacy` on model `Claim` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3235[0m
[1;94m   | [0m
[1;94m3234 | [0m  pharmacyId            Int?
[1;94m3235 | [0m  [1;91mpharmacy              Pharmacy?           @relation("ClaimPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m3236 | [0m  laboratoryId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3237[0m
[1;94m   | [0m
[1;94m3236 | [0m  laboratoryId          Int?
[1;94m3237 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3238 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1077[0m
[1;94m   | [0m
[1;94m1076 | [0m  claimId               Int?                @unique
[1;94m1077 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1078 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3237[0m
[1;94m   | [0m
[1;94m3236 | [0m  laboratoryId          Int?
[1;94m3237 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3238 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1077[0m
[1;94m   | [0m
[1;94m1076 | [0m  claimId               Int?                @unique
[1;94m1077 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1078 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `laboratoryId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3237[0m
[1;94m   | [0m
[1;94m3236 | [0m  laboratoryId          Int?
[1;94m3237 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3238 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `Claim`: The relation field `nhifClaim` on model `Claim` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3243[0m
[1;94m   | [0m
[1;94m3242 | [0m  nhifClaimId           Int?
[1;94m3243 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("ClaimNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m3244 | [0m  transactionId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3245[0m
[1;94m   | [0m
[1;94m3244 | [0m  transactionId         Int?
[1;94m3245 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3246 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2959[0m
[1;94m   | [0m
[1;94m2958 | [0m  claimId           Int?
[1;94m2959 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2960 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3245[0m
[1;94m   | [0m
[1;94m3244 | [0m  transactionId         Int?
[1;94m3245 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3246 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2959[0m
[1;94m   | [0m
[1;94m2958 | [0m  claimId           Int?
[1;94m2959 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2960 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `transactionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3245[0m
[1;94m   | [0m
[1;94m3244 | [0m  transactionId         Int?
[1;94m3245 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3246 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Claim`: The relation field `createdBy` on model `Claim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3265[0m
[1;94m   | [0m
[1;94m3264 | [0m  createdById           Int?
[1;94m3265 | [0m  [1;91mcreatedBy             User?               @relation("ClaimCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3266 | [0m  approvedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `Claim`: The relation field `approvedBy` on model `Claim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3267[0m
[1;94m   | [0m
[1;94m3266 | [0m  approvedById          Int?
[1;94m3267 | [0m  [1;91mapprovedBy            User?               @relation("ClaimApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3268 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Claim`: The relation field `updatedBy` on model `Claim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3269[0m
[1;94m   | [0m
[1;94m3268 | [0m  updatedById           Int?
[1;94m3269 | [0m  [1;91mupdatedBy             User?               @relation("ClaimUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3270 | [0m  auditLogs             AuditLog[]          @relation("ClaimAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Claim`: The relation field `auditLogs` on model `Claim` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3270[0m
[1;94m   | [0m
[1;94m3269 | [0m  updatedBy             User?               @relation("ClaimUpdatedBy", fields: [updatedById], references: [id])
[1;94m3270 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClaimAuditLogs")[0m
[1;94m3271 | [0m  claimDocuments        ClaimDocument[]     @relation("ClaimDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referrals` in model `Claim`: The relation field `referrals` on model `Claim` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3281[0m
[1;94m   | [0m
[1;94m3280 | [0m  updatedAt           DateTime            @updatedAt
[1;94m3281 | [0m  [1;91mreferrals            Referral[]          @relation("Referral_claim_fkey")[0m
[1;94m3282 | [0m  emergencies          Emergency[]         @relation("EmergencyClaims")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `ClaimDocument`: The relation field `uploadedBy` on model `ClaimDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3293[0m
[1;94m   | [0m
[1;94m3292 | [0m  uploadedById          Int?
[1;94m3293 | [0m  [1;91muploadedBy            User?               @relation("ClaimDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m3294 | [0m  description           String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClaimDocument`: The relation field `auditLogs` on model `ClaimDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3297[0m
[1;94m   | [0m
[1;94m3296 | [0m  updatedAt           DateTime            @updatedAt
[1;94m3297 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClaimDocumentAuditLogs")[0m
[1;94m3298 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ClaimNotification`: The relation field `recipient` on model `ClaimNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3309[0m
[1;94m   | [0m
[1;94m3308 | [0m  recipientId           Int?
[1;94m3309 | [0m  [1;91mrecipient             User?               @relation("ClaimNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m3310 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ClaimAdjustment`: The relation field `createdBy` on model `ClaimAdjustment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3324[0m
[1;94m   | [0m
[1;94m3323 | [0m  createdById           Int?
[1;94m3324 | [0m  [1;91mcreatedBy             User?               @relation("ClaimAdjustmentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3325 | [0m  approvedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `ClaimAdjustment`: The relation field `approvedBy` on model `ClaimAdjustment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3326[0m
[1;94m   | [0m
[1;94m3325 | [0m  approvedById          Int?
[1;94m3326 | [0m  [1;91mapprovedBy            User?               @relation("ClaimAdjustmentApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3327 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClaimAdjustment`: The relation field `auditLogs` on model `ClaimAdjustment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3328[0m
[1;94m   | [0m
[1;94m3327 | [0m  notes                 String?
[1;94m3328 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClaimAdjustmentAuditLogs")[0m
[1;94m3329 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Insurance`: The relation field `auditLogs` on model `Insurance` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3346[0m
[1;94m   | [0m
[1;94m3345 | [0m  updatedAt           DateTime            @updatedAt
[1;94m3346 | [0m  [1;91mauditLogs             AuditLog[]          @relation("InsuranceAuditLogs")[0m
[1;94m3347 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3382[0m
[1;94m   | [0m
[1;94m3381 | [0m  invoiceId           Int?
[1;94m3382 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3383 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2717[0m
[1;94m   | [0m
[1;94m2716 | [0m  nhifClaimId           Int?
[1;94m2717 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2718 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3382[0m
[1;94m   | [0m
[1;94m3381 | [0m  invoiceId           Int?
[1;94m3382 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3383 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2717[0m
[1;94m   | [0m
[1;94m2716 | [0m  nhifClaimId           Int?
[1;94m2717 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2718 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3382[0m
[1;94m   | [0m
[1;94m3381 | [0m  invoiceId           Int?
[1;94m3382 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3383 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `NhifClaim`: The relation field `medicalRecord` on model `NhifClaim` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3390[0m
[1;94m   | [0m
[1;94m3389 | [0m  medicalRecordId     Int?
[1;94m3390 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("NhifClaimMedicalRecords", fields: [medicalRecordId], references: [id])[0m
[1;94m3391 | [0m  laboratoryId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `NhifClaim`: The relation field `operationTheatre` on model `NhifClaim` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3398[0m
[1;94m   | [0m
[1;94m3397 | [0m  operationTheatreId  Int?
[1;94m3398 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("NhifClaimOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m3399 | [0m  maternityId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `maternity` in model `NhifClaim`: The relation field `maternity` on model `NhifClaim` is missing an opposite relation field on the model `Maternity`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3400[0m
[1;94m   | [0m
[1;94m3399 | [0m  maternityId         Int?
[1;94m3400 | [0m  [1;91mmaternity           Maternity?            @relation("NhifClaimMaternity", fields: [maternityId], references: [id])[0m
[1;94m3401 | [0m  vaccinationId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `vaccination` in model `NhifClaim`: The relation field `vaccination` on model `NhifClaim` is missing an opposite relation field on the model `Vaccination`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3402[0m
[1;94m   | [0m
[1;94m3401 | [0m  vaccinationId       Int?
[1;94m3402 | [0m  [1;91mvaccination         Vaccination?          @relation("NhifClaimVaccination", fields: [vaccinationId], references: [id])[0m
[1;94m3403 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3418[0m
[1;94m   | [0m
[1;94m3417 | [0m  transactionId       Int?
[1;94m3418 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3419 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2961[0m
[1;94m   | [0m
[1;94m2960 | [0m  nhifClaimId       Int?
[1;94m2961 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2962 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3418[0m
[1;94m   | [0m
[1;94m3417 | [0m  transactionId       Int?
[1;94m3418 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3419 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2961[0m
[1;94m   | [0m
[1;94m2960 | [0m  nhifClaimId       Int?
[1;94m2961 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2962 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `transactionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3418[0m
[1;94m   | [0m
[1;94m3417 | [0m  transactionId       Int?
[1;94m3418 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3419 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referral` in model `NhifClaim`: The relation field `referral` on model `NhifClaim` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3422[0m
[1;94m   | [0m
[1;94m3421 | [0m  referralId          Int?
[1;94m3422 | [0m  [1;91mreferral            Referral?             @relation("NhifClaimReferrals", fields: [referralId], references: [id])[0m
[1;94m3423 | [0m  socialServiceCases  SocialServiceCase[]   @relation("SocialServiceCaseNhifClaims")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NhifClaim`: The relation field `createdBy` on model `NhifClaim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3426[0m
[1;94m   | [0m
[1;94m3425 | [0m  createdById         Int?
[1;94m3426 | [0m  [1;91mcreatedBy           User?                 @relation("NhifClaimCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3427 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NhifClaim`: The relation field `updatedBy` on model `NhifClaim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3428[0m
[1;94m   | [0m
[1;94m3427 | [0m  updatedById         Int?
[1;94m3428 | [0m  [1;91mupdatedBy           User?                 @relation("NhifClaimUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3429 | [0m  reviewedById        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reviewedBy` in model `NhifClaim`: The relation field `reviewedBy` on model `NhifClaim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3430[0m
[1;94m   | [0m
[1;94m3429 | [0m  reviewedById        Int?
[1;94m3430 | [0m  [1;91mreviewedBy          User?                 @relation("NhifClaimReviewedBy", fields: [reviewedById], references: [id])[0m
[1;94m3431 | [0m  auditLogs           AuditLog[]            @relation("NhifClaimAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NhifClaim`: The relation field `auditLogs` on model `NhifClaim` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3431[0m
[1;94m   | [0m
[1;94m3430 | [0m  reviewedBy          User?                 @relation("NhifClaimReviewedBy", fields: [reviewedById], references: [id])
[1;94m3431 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NhifClaimAuditLogs")[0m
[1;94m3432 | [0m  dashboardWidgets    DashboardWidget[]     @relation("DashboardWidgetNhifClaims")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `user` in model `Incentive`: The relation field `user` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3464[0m
[1;94m   | [0m
[1;94m3463 | [0m  userId                Int                 @unique
[1;94m3464 | [0m  [1;91muser                  User                @relation("IncentiveUser", fields: [userId], references: [id])[0m
[1;94m3465 | [0m  doctorId              Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `doctor` in model `Incentive`: The relation field `doctor` on model `Incentive` is missing an opposite relation field on the model `Doctor`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3466[0m
[1;94m   | [0m
[1;94m3465 | [0m  doctorId              Int?                @unique
[1;94m3466 | [0m  [1;91mdoctor                Doctor?             @relation("IncentiveDoctor", fields: [doctorId], references: [id])[0m
[1;94m3467 | [0m  departmentId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `transaction` in model `Incentive`: The relation field `transaction` on model `Incentive` is missing an opposite relation field on the model `Transaction`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3477[0m
[1;94m   | [0m
[1;94m3476 | [0m  transactionId         Int?                @unique
[1;94m3477 | [0m  [1;91mtransaction           Transaction?        @relation("IncentiveTransaction", fields: [transactionId], references: [id])[0m
[1;94m3478 | [0m  rejectionReason       String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Incentive`: The relation field `createdBy` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3480[0m
[1;94m   | [0m
[1;94m3479 | [0m  createdById           Int?                @unique
[1;94m3480 | [0m  [1;91mcreatedBy             User?               @relation("IncentiveCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3481 | [0m  approvedById          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `Incentive`: The relation field `approvedBy` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3482[0m
[1;94m   | [0m
[1;94m3481 | [0m  approvedById          Int?                @unique
[1;94m3482 | [0m  [1;91mapprovedBy            User?               @relation("IncentiveApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3483 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Incentive`: The relation field `updatedBy` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3484[0m
[1;94m   | [0m
[1;94m3483 | [0m  updatedById           Int?                @unique
[1;94m3484 | [0m  [1;91mupdatedBy             User?               @relation("IncentiveUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3485 | [0m  auditLogs             AuditLog[]          @relation("IncentiveAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Incentive`: The relation field `auditLogs` on model `Incentive` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3485[0m
[1;94m   | [0m
[1;94m3484 | [0m  updatedBy             User?               @relation("IncentiveUpdatedBy", fields: [updatedById], references: [id])
[1;94m3485 | [0m  [1;91mauditLogs             AuditLog[]          @relation("IncentiveAuditLogs")[0m
[1;94m3486 | [0m  incentiveNotifications IncentiveNotification[] @relation("IncentiveNotifications")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `IncentiveNotification`: The relation field `recipient` on model `IncentiveNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3500[0m
[1;94m   | [0m
[1;94m3499 | [0m  recipientId           Int?                @unique
[1;94m3500 | [0m  [1;91mrecipient             User?               @relation("IncentiveNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m3501 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Inventory`: The relation field `clinicalSetting` on model `Inventory` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3547[0m
[1;94m   | [0m
[1;94m3546 | [0m  clinicalSettingId     Int?                @unique
[1;94m3547 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("ClinicalSettingInventory", fields: [clinicalSettingId], references: [id])[0m
[1;94m3548 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `Inventory`: The relation field `pharmacy` on model `Inventory` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3549[0m
[1;94m   | [0m
[1;94m3548 | [0m  pharmacyId            Int?                @unique
[1;94m3549 | [0m  [1;91mpharmacy              Pharmacy?           @relation("PharmacyInventory", fields: [pharmacyId], references: [id])[0m
[1;94m3550 | [0m  storageLocation       String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Inventory`: The relation field `createdBy` on model `Inventory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3555[0m
[1;94m   | [0m
[1;94m3554 | [0m  createdById           Int?                @unique
[1;94m3555 | [0m  [1;91mcreatedBy             User?               @relation("InventoryCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3556 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Inventory`: The relation field `updatedBy` on model `Inventory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3557[0m
[1;94m   | [0m
[1;94m3556 | [0m  updatedById           Int?                @unique
[1;94m3557 | [0m  [1;91mupdatedBy             User?               @relation("InventoryUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3558 | [0m  auditLogs             AuditLog[]          @relation("InventoryAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Inventory`: The relation field `auditLogs` on model `Inventory` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3558[0m
[1;94m   | [0m
[1;94m3557 | [0m  updatedBy             User?               @relation("InventoryUpdatedBy", fields: [updatedById], references: [id])
[1;94m3558 | [0m  [1;91mauditLogs             AuditLog[]          @relation("InventoryAuditLogs")[0m
[1;94m3559 | [0m  inventoryTransactions InventoryTransaction[] @relation("InventoryTransactions")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `InventoryTransaction`: The relation field `performedBy` on model `InventoryTransaction` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3578[0m
[1;94m   | [0m
[1;94m3577 | [0m  performedById         Int?                @unique
[1;94m3578 | [0m  [1;91mperformedBy           User?               @relation("InventoryTransactionPerformedBy", fields: [performedById], references: [id])[0m
[1;94m3579 | [0m  createdById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `InventoryTransaction`: The relation field `createdBy` on model `InventoryTransaction` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3580[0m
[1;94m   | [0m
[1;94m3579 | [0m  createdById           Int?                @unique
[1;94m3580 | [0m  [1;91mcreatedBy             User?               @relation("InventoryTransactionCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3581 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `InventoryTransaction`: The relation field `updatedBy` on model `InventoryTransaction` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3582[0m
[1;94m   | [0m
[1;94m3581 | [0m  updatedById           Int?                @unique
[1;94m3582 | [0m  [1;91mupdatedBy             User?               @relation("InventoryTransactionUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3583 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `InventoryTransaction`: The relation field `auditLogs` on model `InventoryTransaction` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3584[0m
[1;94m   | [0m
[1;94m3583 | [0m  notes                 String?
[1;94m3584 | [0m  [1;91mauditLogs             AuditLog[]          @relation("InventoryTransactionAuditLogs")[0m
[1;94m3585 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `InventoryNotification`: The relation field `recipient` on model `InventoryNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3598[0m
[1;94m   | [0m
[1;94m3597 | [0m  recipientId           Int?                @unique
[1;94m3598 | [0m  [1;91mrecipient             User?               @relation("InventoryNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m3599 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `InventorySupplier`: The relation field `createdBy` on model `InventorySupplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3612[0m
[1;94m   | [0m
[1;94m3611 | [0m  createdById           Int?                @unique
[1;94m3612 | [0m  [1;91mcreatedBy             User?               @relation("InventorySupplierCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3613 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `InventorySupplier`: The relation field `updatedBy` on model `InventorySupplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3614[0m
[1;94m   | [0m
[1;94m3613 | [0m  updatedById           Int?                @unique
[1;94m3614 | [0m  [1;91mupdatedBy             User?               @relation("InventorySupplierUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3615 | [0m  inventory             Inventory[]         @relation("InventorySupplier")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `InventorySupplier`: The relation field `auditLogs` on model `InventorySupplier` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3616[0m
[1;94m   | [0m
[1;94m3615 | [0m  inventory             Inventory[]         @relation("InventorySupplier")
[1;94m3616 | [0m  [1;91mauditLogs             AuditLog[]          @relation("SupplierAuditLogs")[0m
[1;94m3617 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Procurement`: The relation field `department` on model `Procurement` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3662[0m
[1;94m   | [0m
[1;94m3661 | [0m  departmentId        Int?
[1;94m3662 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m3663 | [0m  requesterId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `requester` in model `Procurement`: The relation field `requester` on model `Procurement` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3664[0m
[1;94m   | [0m
[1;94m3663 | [0m  requesterId         Int?
[1;94m3664 | [0m  [1;91mrequester           User?                 @relation("ProcurementRequester", fields: [requesterId], references: [id])[0m
[1;94m3665 | [0m  status              ProcurementStatus     @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3673[0m
[1;94m   | [0m
[1;94m3672 | [0m  purchaseOrderId     Int?
[1;94m3673 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3674 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3739[0m
[1;94m   | [0m
[1;94m3738 | [0m  procurementId       Int?
[1;94m3739 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3740 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3673[0m
[1;94m   | [0m
[1;94m3672 | [0m  purchaseOrderId     Int?
[1;94m3673 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3674 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3739[0m
[1;94m   | [0m
[1;94m3738 | [0m  procurementId       Int?
[1;94m3739 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3740 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `purchaseOrderId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3673[0m
[1;94m   | [0m
[1;94m3672 | [0m  purchaseOrderId     Int?
[1;94m3673 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3674 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medication` in model `Procurement`: The relation field `medication` on model `Procurement` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3675[0m
[1;94m   | [0m
[1;94m3674 | [0m  medicationId        Int?
[1;94m3675 | [0m  [1;91mmedication          Medication?           @relation(fields: [medicationId], references: [id])[0m
[1;94m3676 | [0m  cssdInstrumentId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `Procurement`: The relation field `cssdInstrument` on model `Procurement` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3677[0m
[1;94m   | [0m
[1;94m3676 | [0m  cssdInstrumentId    Int?
[1;94m3677 | [0m  [1;91mcssdInstrument      CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])[0m
[1;94m3678 | [0m  inventoryItemId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventoryItem` in model `Procurement`: The relation field `inventoryItem` on model `Procurement` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3679[0m
[1;94m   | [0m
[1;94m3678 | [0m  inventoryItemId     Int?
[1;94m3679 | [0m  [1;91minventoryItem       Inventory?            @relation(fields: [inventoryItemId], references: [id])[0m
[1;94m3680 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Procurement`: The relation field `billing` on model `Procurement` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3681[0m
[1;94m   | [0m
[1;94m3680 | [0m  billingId           Int?
[1;94m3681 | [0m  [1;91mbilling             Billing?              @relation(fields: [billingId], references: [id])[0m
[1;94m3682 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Procurement`: The relation field `createdBy` on model `Procurement` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3685[0m
[1;94m   | [0m
[1;94m3684 | [0m  createdById         Int?
[1;94m3685 | [0m  [1;91mcreatedBy           User?                 @relation("ProcurementCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3686 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Procurement`: The relation field `updatedBy` on model `Procurement` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3687[0m
[1;94m   | [0m
[1;94m3686 | [0m  updatedById         Int?
[1;94m3687 | [0m  [1;91mupdatedBy           User?                 @relation("ProcurementUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3688 | [0m  auditLogs           AuditLog[]            @relation("ProcurementAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Procurement`: The relation field `auditLogs` on model `Procurement` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3688[0m
[1;94m   | [0m
[1;94m3687 | [0m  updatedBy           User?                 @relation("ProcurementUpdatedBy", fields: [updatedById], references: [id])
[1;94m3688 | [0m  [1;91mauditLogs           AuditLog[]            @relation("ProcurementAuditLogs")[0m
[1;94m3689 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Supplier`: The relation field `department` on model `Supplier` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3712[0m
[1;94m   | [0m
[1;94m3711 | [0m  departmentId        Int?
[1;94m3712 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m3713 | [0m  medications         Medication[]
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medications` in model `Supplier`: The relation field `medications` on model `Supplier` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3713[0m
[1;94m   | [0m
[1;94m3712 | [0m  department          Department?           @relation(fields: [departmentId], references: [id])
[1;94m3713 | [0m  [1;91mmedications         Medication[][0m
[1;94m3714 | [0m  purchaseOrders      PurchaseOrder[]
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstruments` in model `Supplier`: The relation field `cssdInstruments` on model `Supplier` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3715[0m
[1;94m   | [0m
[1;94m3714 | [0m  purchaseOrders      PurchaseOrder[]
[1;94m3715 | [0m  [1;91mcssdInstruments     CSSDInstrument[][0m
[1;94m3716 | [0m  inventoryItems      Inventory[]
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventoryItems` in model `Supplier`: The relation field `inventoryItems` on model `Supplier` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3716[0m
[1;94m   | [0m
[1;94m3715 | [0m  cssdInstruments     CSSDInstrument[]
[1;94m3716 | [0m  [1;91minventoryItems      Inventory[][0m
[1;94m3717 | [0m  performanceRating   Float?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Supplier`: The relation field `createdBy` on model `Supplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3722[0m
[1;94m   | [0m
[1;94m3721 | [0m  createdById         Int?
[1;94m3722 | [0m  [1;91mcreatedBy           User?                 @relation("SupplierCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3723 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Supplier`: The relation field `updatedBy` on model `Supplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3724[0m
[1;94m   | [0m
[1;94m3723 | [0m  updatedById         Int?
[1;94m3724 | [0m  [1;91mupdatedBy           User?                 @relation("SupplierUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3725 | [0m  auditLogs           AuditLog[]            @relation("SupplierAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Supplier`: The relation field `auditLogs` on model `Supplier` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3725[0m
[1;94m   | [0m
[1;94m3724 | [0m  updatedBy           User?                 @relation("SupplierUpdatedBy", fields: [updatedById], references: [id])
[1;94m3725 | [0m  [1;91mauditLogs           AuditLog[]            @relation("SupplierAuditLogs")[0m
[1;94m3726 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `PurchaseOrder`: The relation field `department` on model `PurchaseOrder` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3737[0m
[1;94m   | [0m
[1;94m3736 | [0m  departmentId        Int?
[1;94m3737 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m3738 | [0m  procurementId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3739[0m
[1;94m   | [0m
[1;94m3738 | [0m  procurementId       Int?
[1;94m3739 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3740 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3673[0m
[1;94m   | [0m
[1;94m3672 | [0m  purchaseOrderId     Int?
[1;94m3673 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3674 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3739[0m
[1;94m   | [0m
[1;94m3738 | [0m  procurementId       Int?
[1;94m3739 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3740 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3673[0m
[1;94m   | [0m
[1;94m3672 | [0m  purchaseOrderId     Int?
[1;94m3673 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3674 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `procurementId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3739[0m
[1;94m   | [0m
[1;94m3738 | [0m  procurementId       Int?
[1;94m3739 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3740 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `PurchaseOrder`: The relation field `inventory` on model `PurchaseOrder` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3752[0m
[1;94m   | [0m
[1;94m3751 | [0m  inventoryId         Int?
[1;94m3752 | [0m  [1;91minventory           Inventory?            @relation(fields: [inventoryId], references: [id])[0m
[1;94m3753 | [0m  cssdInstrumentId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `PurchaseOrder`: The relation field `cssdInstrument` on model `PurchaseOrder` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3754[0m
[1;94m   | [0m
[1;94m3753 | [0m  cssdInstrumentId    Int?
[1;94m3754 | [0m  [1;91mcssdInstrument      CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])[0m
[1;94m3755 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `PurchaseOrder`: The relation field `createdBy` on model `PurchaseOrder` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3759[0m
[1;94m   | [0m
[1;94m3758 | [0m  createdById         Int?
[1;94m3759 | [0m  [1;91mcreatedBy           User?                 @relation("PurchaseOrderCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3760 | [0m  approvedById        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `PurchaseOrder`: The relation field `approvedBy` on model `PurchaseOrder` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3761[0m
[1;94m   | [0m
[1;94m3760 | [0m  approvedById        Int?
[1;94m3761 | [0m  [1;91mapprovedBy          User?                 @relation("PurchaseOrderApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3762 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `PurchaseOrder`: The relation field `updatedBy` on model `PurchaseOrder` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3763[0m
[1;94m   | [0m
[1;94m3762 | [0m  updatedById         Int?
[1;94m3763 | [0m  [1;91mupdatedBy           User?                 @relation("PurchaseOrderUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3764 | [0m  auditLogs           AuditLog[]            @relation("PurchaseOrderAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `PurchaseOrder`: The relation field `auditLogs` on model `PurchaseOrder` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3764[0m
[1;94m   | [0m
[1;94m3763 | [0m  updatedBy           User?                 @relation("PurchaseOrderUpdatedBy", fields: [updatedById], references: [id])
[1;94m3764 | [0m  [1;91mauditLogs           AuditLog[]            @relation("PurchaseOrderAuditLogs")[0m
[1;94m3765 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medication` in model `PurchaseOrderItem`: The relation field `medication` on model `PurchaseOrderItem` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3775[0m
[1;94m   | [0m
[1;94m3774 | [0m  medicationId        Int?
[1;94m3775 | [0m  [1;91mmedication          Medication?           @relation(fields: [medicationId], references: [id])[0m
[1;94m3776 | [0m  cssdInstrumentId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `PurchaseOrderItem`: The relation field `cssdInstrument` on model `PurchaseOrderItem` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3777[0m
[1;94m   | [0m
[1;94m3776 | [0m  cssdInstrumentId    Int?
[1;94m3777 | [0m  [1;91mcssdInstrument      CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])[0m
[1;94m3778 | [0m  inventoryItemId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventoryItem` in model `PurchaseOrderItem`: The relation field `inventoryItem` on model `PurchaseOrderItem` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3779[0m
[1;94m   | [0m
[1;94m3778 | [0m  inventoryItemId     Int?
[1;94m3779 | [0m  [1;91minventoryItem       Inventory?            @relation(fields: [inventoryItemId], references: [id])[0m
[1;94m3780 | [0m  quantity            Int
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `PurchaseOrderItem`: The relation field `createdBy` on model `PurchaseOrderItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3790[0m
[1;94m   | [0m
[1;94m3789 | [0m  createdById         Int?
[1;94m3790 | [0m  [1;91mcreatedBy           User?                 @relation("PurchaseOrderItemCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3791 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `PurchaseOrderItem`: The relation field `updatedBy` on model `PurchaseOrderItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3792[0m
[1;94m   | [0m
[1;94m3791 | [0m  updatedById         Int?
[1;94m3792 | [0m  [1;91mupdatedBy           User?                 @relation("PurchaseOrderItemUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3793 | [0m  auditLogs           AuditLog[]            @relation("PurchaseOrderItemAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `PurchaseOrderItem`: The relation field `auditLogs` on model `PurchaseOrderItem` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3793[0m
[1;94m   | [0m
[1;94m3792 | [0m  updatedBy           User?                 @relation("PurchaseOrderItemUpdatedBy", fields: [updatedById], references: [id])
[1;94m3793 | [0m  [1;91mauditLogs           AuditLog[]            @relation("PurchaseOrderItemAuditLogs")[0m
[1;94m3794 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `FixedAsset`: The relation field `department` on model `FixedAsset` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3840[0m
[1;94m   | [0m
[1;94m3839 | [0m  departmentId          Int?
[1;94m3840 | [0m  [1;91mdepartment            Department?         @relation("DepartmentFixedAssets", fields: [departmentId], references: [id])[0m
[1;94m3841 | [0m  location              String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `FixedAsset`: The relation field `createdBy` on model `FixedAsset` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3853[0m
[1;94m   | [0m
[1;94m3852 | [0m  createdById           Int?                @unique
[1;94m3853 | [0m  [1;91mcreatedBy             User?               @relation("FixedAssetCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3854 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `FixedAsset`: The relation field `updatedBy` on model `FixedAsset` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3855[0m
[1;94m   | [0m
[1;94m3854 | [0m  updatedById           Int?                @unique
[1;94m3855 | [0m  [1;91mupdatedBy             User?               @relation("FixedAssetUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3856 | [0m  auditLogs             AuditLog[]          @relation("FixedAssetAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `FixedAsset`: The relation field `auditLogs` on model `FixedAsset` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3856[0m
[1;94m   | [0m
[1;94m3855 | [0m  updatedBy             User?               @relation("FixedAssetUpdatedBy", fields: [updatedById], references: [id])
[1;94m3856 | [0m  [1;91mauditLogs             AuditLog[]          @relation("FixedAssetAuditLogs")[0m
[1;94m3857 | [0m  maintenanceRecords    MaintenanceRecord[] @relation("AssetMaintenanceRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `MaintenanceRecord`: The relation field `performedBy` on model `MaintenanceRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3872[0m
[1;94m   | [0m
[1;94m3871 | [0m  performedById         Int?                @unique
[1;94m3872 | [0m  [1;91mperformedBy           User?               @relation("MaintenancePerformedBy", fields: [performedById], references: [id])[0m
[1;94m3873 | [0m  createdById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `MaintenanceRecord`: The relation field `createdBy` on model `MaintenanceRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3874[0m
[1;94m   | [0m
[1;94m3873 | [0m  createdById           Int?                @unique
[1;94m3874 | [0m  [1;91mcreatedBy             User?               @relation("MaintenanceCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3875 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `MaintenanceRecord`: The relation field `updatedBy` on model `MaintenanceRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3876[0m
[1;94m   | [0m
[1;94m3875 | [0m  updatedById           Int?                @unique
[1;94m3876 | [0m  [1;91mupdatedBy             User?               @relation("MaintenanceUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3877 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `MaintenanceRecord`: The relation field `auditLogs` on model `MaintenanceRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3878[0m
[1;94m   | [0m
[1;94m3877 | [0m  notes                 String?
[1;94m3878 | [0m  [1;91mauditLogs             AuditLog[]          @relation("MaintenanceRecordAuditLogs")[0m
[1;94m3879 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Report`: The relation field `clinicalSetting` on model `Report` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3933[0m
[1;94m   | [0m
[1;94m3932 | [0m  clinicalSettingId     Int?                @unique
[1;94m3933 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("ReportClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m3934 | [0m  dynamicReportId       Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Report`: The relation field `createdBy` on model `Report` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3937[0m
[1;94m   | [0m
[1;94m3936 | [0m  createdById           Int?                @unique
[1;94m3937 | [0m  [1;91mcreatedBy             User?               @relation("ReportGeneralCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3938 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Report`: The relation field `updatedBy` on model `Report` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3939[0m
[1;94m   | [0m
[1;94m3938 | [0m  updatedById           Int?                @unique
[1;94m3939 | [0m  [1;91mupdatedBy             User?               @relation("ReportGeneralUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3940 | [0m  auditLogs             AuditLog[]          @relation("ReportAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Report`: The relation field `auditLogs` on model `Report` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3940[0m
[1;94m   | [0m
[1;94m3939 | [0m  updatedBy             User?               @relation("ReportGeneralUpdatedBy", fields: [updatedById], references: [id])
[1;94m3940 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ReportAuditLogs")[0m
[1;94m3941 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `DynamicReport`: The relation field `department` on model `DynamicReport` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3958[0m
[1;94m   | [0m
[1;94m3957 | [0m  departmentId          Int?
[1;94m3958 | [0m  [1;91mdepartment            Department?         @relation("DepartmentDynamicReports", fields: [departmentId], references: [id])[0m
[1;94m3959 | [0m  clinicalSettingId     Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `DynamicReport`: The relation field `clinicalSetting` on model `DynamicReport` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3960[0m
[1;94m   | [0m
[1;94m3959 | [0m  clinicalSettingId     Int?                @unique
[1;94m3960 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("DynamicReportClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m3961 | [0m  createdById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `DynamicReport`: The relation field `createdBy` on model `DynamicReport` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3962[0m
[1;94m   | [0m
[1;94m3961 | [0m  createdById           Int?                @unique
[1;94m3962 | [0m  [1;91mcreatedBy             User?               @relation("ReportCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3963 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `DynamicReport`: The relation field `updatedBy` on model `DynamicReport` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3964[0m
[1;94m   | [0m
[1;94m3963 | [0m  updatedById           Int?                @unique
[1;94m3964 | [0m  [1;91mupdatedBy             User?               @relation("ReportUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3965 | [0m  scheduled             Boolean             @default(false)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `DynamicReport`: The relation field `auditLogs` on model `DynamicReport` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3974[0m
[1;94m   | [0m
[1;94m3973 | [0m  notifications         ReportNotification[] @relation("ReportNotifications")
[1;94m3974 | [0m  [1;91mauditLogs             AuditLog[]          @relation("DynamicReportAuditLogs")[0m
[1;94m3975 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ReportTemplate`: The relation field `createdBy` on model `ReportTemplate` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3988[0m
[1;94m   | [0m
[1;94m3987 | [0m  createdById           Int?                @unique
[1;94m3988 | [0m  [1;91mcreatedBy             User?               @relation("TemplateCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3989 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ReportTemplate`: The relation field `updatedBy` on model `ReportTemplate` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3990[0m
[1;94m   | [0m
[1;94m3989 | [0m  updatedById           Int?                @unique
[1;94m3990 | [0m  [1;91mupdatedBy             User?               @relation("TemplateUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3991 | [0m  reports               DynamicReport[]     @relation("DynamicReportTemplates")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ReportTemplate`: The relation field `auditLogs` on model `ReportTemplate` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3992[0m
[1;94m   | [0m
[1;94m3991 | [0m  reports               DynamicReport[]     @relation("DynamicReportTemplates")
[1;94m3992 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ReportTemplateAuditLogs")[0m
[1;94m3993 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ReportNotification`: The relation field `recipient` on model `ReportNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4006[0m
[1;94m   | [0m
[1;94m4005 | [0m  recipientId           Int?                @unique
[1;94m4006 | [0m  [1;91mrecipient             User?               @relation("ReportNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m4007 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `doctor` in model `MedicalRecord`: The relation field `doctor` on model `MedicalRecord` is missing an opposite relation field on the model `Doctor`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4031[0m
[1;94m   | [0m
[1;94m4030 | [0m  doctorId              Int?
[1;94m4031 | [0m  [1;91mdoctor                Doctor?               @relation("DoctorMedicalRecords", fields: [doctorId], references: [id])[0m
[1;94m4032 | [0m  appointmentId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `MedicalRecord`: The relation field `clinicalRecord` on model `MedicalRecord` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4037[0m
[1;94m   | [0m
[1;94m4036 | [0m  clinicalRecordId      Int?
[1;94m4037 | [0m  [1;91mclinicalRecord        ClinicalRecord?       @relation("MedicalRecordClinicalRecords", fields: [clinicalRecordId], references: [id])[0m
[1;94m4038 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `MedicalRecord`: The relation field `clinicalSetting` on model `MedicalRecord` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4041[0m
[1;94m   | [0m
[1;94m4040 | [0m  clinicalSettingId     Int?
[1;94m4041 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("MedicalRecordClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m4042 | [0m  status                MedicalRecordStatus   @default(DRAFT)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratoryTests` in model `MedicalRecord`: The relation field `laboratoryTests` on model `MedicalRecord` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4053[0m
[1;94m   | [0m
[1;94m4052 | [0m  prescriptions         Prescription[]        @relation("PrescriptionMedicalRecords")
[1;94m4053 | [0m  [1;91mlaboratoryTests       Laboratory[]          @relation("MedicalRecordLaboratoryTests")[0m
[1;94m4054 | [0m  radiologyTests        Radiology[]           @relation("MedicalRecordRadiology")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reportedBy` in model `Helpdesk`: The relation field `reportedBy` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4104[0m
[1;94m   | [0m
[1;94m4103 | [0m  reportedById          Int?                @unique
[1;94m4104 | [0m  [1;91mreportedBy            User?               @relation("ReportedBy", fields: [reportedById], references: [id])[0m
[1;94m4105 | [0m  assignedToId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `assignedTo` in model `Helpdesk`: The relation field `assignedTo` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4106[0m
[1;94m   | [0m
[1;94m4105 | [0m  assignedToId          Int?                @unique
[1;94m4106 | [0m  [1;91massignedTo            User?               @relation("AssignedTo", fields: [assignedToId], references: [id])[0m
[1;94m4107 | [0m  doctorId              Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Helpdesk`: The relation field `clinicalSetting` on model `Helpdesk` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4112[0m
[1;94m   | [0m
[1;94m4111 | [0m  clinicalSettingId     Int?                @unique
[1;94m4112 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("HelpdeskClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m4113 | [0m  patientId             Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Helpdesk`: The relation field `patient` on model `Helpdesk` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4114[0m
[1;94m   | [0m
[1;94m4113 | [0m  patientId             Int?                @unique
[1;94m4114 | [0m  [1;91mpatient               Patient?            @relation("PatientHelpdeskTickets", fields: [patientId], references: [id])[0m
[1;94m4115 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Helpdesk`: The relation field `admission` on model `Helpdesk` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4116[0m
[1;94m   | [0m
[1;94m4115 | [0m  admissionId           Int?                @unique
[1;94m4116 | [0m  [1;91madmission             Admission?          @relation("HelpdeskAdmissions", fields: [admissionId], references: [id])[0m
[1;94m4117 | [0m  appointmentId         Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `Helpdesk`: The relation field `appointment` on model `Helpdesk` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4118[0m
[1;94m   | [0m
[1;94m4117 | [0m  appointmentId         Int?                @unique
[1;94m4118 | [0m  [1;91mappointment           Appointment?        @relation("HelpdeskAppointments", fields: [appointmentId], references: [id])[0m
[1;94m4119 | [0m  invoiceId             Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `invoice` in model `Helpdesk`: The relation field `invoice` on model `Helpdesk` is missing an opposite relation field on the model `Invoice`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4120[0m
[1;94m   | [0m
[1;94m4119 | [0m  invoiceId             Int?                @unique
[1;94m4120 | [0m  [1;91minvoice               Invoice?            @relation("HelpdeskInvoices", fields: [invoiceId], references: [id])[0m
[1;94m4121 | [0m  fixedAssetId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `fixedAsset` in model `Helpdesk`: The relation field `fixedAsset` on model `Helpdesk` is missing an opposite relation field on the model `FixedAsset`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4122[0m
[1;94m   | [0m
[1;94m4121 | [0m  fixedAssetId          Int?                @unique
[1;94m4122 | [0m  [1;91mfixedAsset            FixedAsset?         @relation("HelpdeskFixedAssets", fields: [fixedAssetId], references: [id])[0m
[1;94m4123 | [0m  createdDate           DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Helpdesk`: The relation field `createdBy` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4129[0m
[1;94m   | [0m
[1;94m4128 | [0m  createdById           Int?                @unique
[1;94m4129 | [0m  [1;91mcreatedBy             User?               @relation("HelpdeskCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4130 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Helpdesk`: The relation field `updatedBy` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4131[0m
[1;94m   | [0m
[1;94m4130 | [0m  updatedById           Int?                @unique
[1;94m4131 | [0m  [1;91mupdatedBy             User?               @relation("HelpdeskUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4132 | [0m  auditLogs             AuditLog[]          @relation("HelpdeskAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Helpdesk`: The relation field `auditLogs` on model `Helpdesk` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4132[0m
[1;94m   | [0m
[1;94m4131 | [0m  updatedBy             User?               @relation("HelpdeskUpdatedBy", fields: [updatedById], references: [id])
[1;94m4132 | [0m  [1;91mauditLogs             AuditLog[]          @relation("HelpdeskAuditLogs")[0m
[1;94m4133 | [0m  ticketComments        TicketComment[]     @relation("TicketComments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `TicketComment`: The relation field `createdBy` on model `TicketComment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4147[0m
[1;94m   | [0m
[1;94m4146 | [0m  createdById           Int?                @unique
[1;94m4147 | [0m  [1;91mcreatedBy             User?               @relation("TicketCommentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4148 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `TicketComment`: The relation field `auditLogs` on model `TicketComment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4150[0m
[1;94m   | [0m
[1;94m4149 | [0m  updatedAt             DateTime            @updatedAt
[1;94m4150 | [0m  [1;91mauditLogs             AuditLog[]          @relation("TicketCommentAuditLogs")[0m
[1;94m4151 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `TicketAttachment`: The relation field `uploadedBy` on model `TicketAttachment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4162[0m
[1;94m   | [0m
[1;94m4161 | [0m  uploadedById          Int?                @unique
[1;94m4162 | [0m  [1;91muploadedBy            User?               @relation("TicketAttachmentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m4163 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `TicketAttachment`: The relation field `auditLogs` on model `TicketAttachment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4165[0m
[1;94m   | [0m
[1;94m4164 | [0m  updatedAt             DateTime            @updatedAt
[1;94m4165 | [0m  [1;91mauditLogs             AuditLog[]          @relation("TicketAttachmentAuditLogs")[0m
[1;94m4166 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `TicketNotification`: The relation field `recipient` on model `TicketNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4177[0m
[1;94m   | [0m
[1;94m4176 | [0m  recipientId           Int?                @unique
[1;94m4177 | [0m  [1;91mrecipient             User?               @relation("TicketNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m4178 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `ReferralProgram`: The relation field `department` on model `ReferralProgram` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4221[0m
[1;94m   | [0m
[1;94m4220 | [0m  departmentId        Int?
[1;94m4221 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id], map: "ReferralProgram_department_fkey")[0m
[1;94m4222 | [0m  targetAudience      String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Referral`: The relation field `patient` on model `Referral` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4250[0m
[1;94m   | [0m
[1;94m4249 | [0m  patientId           Int?
[1;94m4250 | [0m  [1;91mpatient             Patient?              @relation(fields: [patientId], references: [id], map: "Referral_patient_fkey")[0m
[1;94m4251 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `doctor` in model `Referral`: The relation field `doctor` on model `Referral` is missing an opposite relation field on the model `Doctor`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4252[0m
[1;94m   | [0m
[1;94m4251 | [0m  doctorId            Int?
[1;94m4252 | [0m  [1;91mdoctor              Doctor?               @relation(fields: [doctorId], references: [id], map: "Referral_doctor_fkey")[0m
[1;94m4253 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Referral`: The relation field `department` on model `Referral` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4254[0m
[1;94m   | [0m
[1;94m4253 | [0m  departmentId        Int?
[1;94m4254 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id], map: "Referral_department_fkey")[0m
[1;94m4255 | [0m  status              ReferralStatus        @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `Referral`: The relation field `medicalRecord` on model `Referral` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4261[0m
[1;94m   | [0m
[1;94m4260 | [0m  medicalRecordId     Int?
[1;94m4261 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation(fields: [medicalRecordId], references: [id], map: "Referral_medicalRecord_fkey")[0m
[1;94m4262 | [0m  claimId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `Referral`: The relation field `claim` on model `Referral` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4263[0m
[1;94m   | [0m
[1;94m4262 | [0m  claimId             Int?
[1;94m4263 | [0m  [1;91mclaim               Claim?                @relation(fields: [claimId], references: [id], map: "Referral_claim_fkey")[0m
[1;94m4264 | [0m  nhifClaimId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `Referral`: The relation field `nhifClaim` on model `Referral` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4265[0m
[1;94m   | [0m
[1;94m4264 | [0m  nhifClaimId         Int?
[1;94m4265 | [0m  [1;91mnhifClaim           NhifClaim?            @relation(fields: [nhifClaimId], references: [id], map: "Referral_nhifClaim_fkey")[0m
[1;94m4266 | [0m  rewardId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4287[0m
[1;94m   | [0m
[1;94m4286 | [0m  referralId          Int
[1;94m4287 | [0m  [1;91mreferral            Referral              @relation(fields: [referralId], references: [id], map: "ReferralReward_referral_fkey")[0m
[1;94m4288 | [0m  rewardType          RewardType
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4267[0m
[1;94m   | [0m
[1;94m4266 | [0m  rewardId            Int?
[1;94m4267 | [0m  [1;91mreward              ReferralReward?       @relation(fields: [rewardId], references: [id], map: "Referral_reward_fkey")[0m
[1;94m4268 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4287[0m
[1;94m   | [0m
[1;94m4286 | [0m  referralId          Int
[1;94m4287 | [0m  [1;91mreferral            Referral              @relation(fields: [referralId], references: [id], map: "ReferralReward_referral_fkey")[0m
[1;94m4288 | [0m  rewardType          RewardType
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4267[0m
[1;94m   | [0m
[1;94m4266 | [0m  rewardId            Int?
[1;94m4267 | [0m  [1;91mreward              ReferralReward?       @relation(fields: [rewardId], references: [id], map: "Referral_reward_fkey")[0m
[1;94m4268 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `referralId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4287[0m
[1;94m   | [0m
[1;94m4286 | [0m  referralId          Int
[1;94m4287 | [0m  [1;91mreferral            Referral              @relation(fields: [referralId], references: [id], map: "ReferralReward_referral_fkey")[0m
[1;94m4288 | [0m  rewardType          RewardType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `MarketingCampaign`: The relation field `auditLogs` on model `MarketingCampaign` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4328[0m
[1;94m   | [0m
[1;94m4327 | [0m  updatedBy           User?                 @relation("CampaignUpdatedBy", fields: [updatedById], references: [id], map: "MarketingCampaign_updatedBy_fkey")
[1;94m4328 | [0m  [1;91mauditLogs           AuditLog[]            @relation("MarketingCampaignAuditLogs")[0m
[1;94m4329 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `SocialService`: The relation field `billing` on model `SocialService` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4391[0m
[1;94m   | [0m
[1;94m4390 | [0m  billingId           Int?
[1;94m4391 | [0m  [1;91mbilling             Billing?              @relation("SocialServiceBilling", fields: [billingId], references: [id])[0m
[1;94m4392 | [0m  createdById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referral` in model `SocialServiceCase`: The relation field `referral` on model `SocialServiceCase` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4428[0m
[1;94m   | [0m
[1;94m4427 | [0m  referralId          Int?
[1;94m4428 | [0m  [1;91mreferral            Referral?             @relation("SocialServiceCaseReferrals", fields: [referralId], references: [id])[0m
[1;94m4429 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `SocialServiceCase`: The relation field `billing` on model `SocialServiceCase` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4432[0m
[1;94m   | [0m
[1;94m4431 | [0m  billingId           Int?
[1;94m4432 | [0m  [1;91mbilling             Billing?              @relation("SocialServiceCaseBilling", fields: [billingId], references: [id])[0m
[1;94m4433 | [0m  claimId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `SocialServiceCase`: The relation field `claim` on model `SocialServiceCase` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4434[0m
[1;94m   | [0m
[1;94m4433 | [0m  claimId             Int?
[1;94m4434 | [0m  [1;91mclaim               Claim?                @relation("SocialServiceCaseClaims", fields: [claimId], references: [id])[0m
[1;94m4435 | [0m  nhifClaimId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `SocialServiceCase`: The relation field `createdBy` on model `SocialServiceCase` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4443[0m
[1;94m   | [0m
[1;94m4442 | [0m  createdById         Int?
[1;94m4443 | [0m  [1;91mcreatedBy           User?               @relation("CaseCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4444 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `SocialServiceCase`: The relation field `updatedBy` on model `SocialServiceCase` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4445[0m
[1;94m   | [0m
[1;94m4444 | [0m  updatedById         Int?
[1;94m4445 | [0m  [1;91mupdatedBy           User?               @relation("CaseUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4446 | [0m  auditLogs           AuditLog[]            @relation("SocialServiceCaseAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ExternalAgency`: The relation field `createdBy` on model `ExternalAgency` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4468[0m
[1;94m   | [0m
[1;94m4467 | [0m  createdById         Int?
[1;94m4468 | [0m  [1;91mcreatedBy           User?               @relation("AgencyCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4469 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ExternalAgency`: The relation field `updatedBy` on model `ExternalAgency` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4470[0m
[1;94m   | [0m
[1;94m4469 | [0m  updatedById         Int?
[1;94m4470 | [0m  [1;91mupdatedBy           User?               @relation("AgencyUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4471 | [0m  auditLogs           AuditLog[]            @relation("ExternalAgencyAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patientRecords` in model `User`: The relation field `patientRecords` on model `User` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4558[0m
[1;94m   | [0m
[1;94m4557 | [0m  auditLogs             AuditLog[]            @relation("PerformedBy")
[1;94m4558 | [0m  [1;91mpatientRecords        Patient[]             @relation("PatientUser")[0m
[1;94m4559 | [0m  patientCreated        Patient[]             @relation("PatientCreatedBy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `auditLogs` on Model `EmergencyDocument` must not specify the `fields` or `references` argument in the @relation attribute. You must only specify it on the opposite field `emergencyDocument` on model `AuditLog`.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:779[0m
[1;94m   | [0m
[1;94m778 | [0m  updatedAt             DateTime            @updatedAt
[1;94m779 | [0m  [1;91mauditLogs             AuditLog[]          @relation("EmergencyDocumentAuditLogs", fields: [id], references: [entityId])[0m
[1;94m780 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Utility`: The relation field `billing` on model `Utility` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4864[0m
[1;94m   | [0m
[1;94m4863 | [0m  billingId           Int?
[1;94m4864 | [0m  [1;91mbilling             Billing?              @relation("UtilityBilling", fields: [billingId], references: [id])[0m
[1;94m4865 | [0m  createdById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Utility`: The relation field `createdBy` on model `Utility` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4866[0m
[1;94m   | [0m
[1;94m4865 | [0m  createdById         Int?
[1;94m4866 | [0m  [1;91mcreatedBy           User?                 @relation("UtilityCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4867 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Utility`: The relation field `updatedBy` on model `Utility` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4868[0m
[1;94m   | [0m
[1;94m4867 | [0m  updatedById         Int?
[1;94m4868 | [0m  [1;91mupdatedBy           User?                 @relation("UtilityUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4869 | [0m  auditLogs           AuditLog[]            @relation("UtilityAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Utility`: The relation field `auditLogs` on model `Utility` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4869[0m
[1;94m   | [0m
[1;94m4868 | [0m  updatedBy           User?                 @relation("UtilityUpdatedBy", fields: [updatedById], references: [id])
[1;94m4869 | [0m  [1;91mauditLogs           AuditLog[]            @relation("UtilityAuditLogs")[0m
[1;94m4870 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `UtilityProvider`: The relation field `createdBy` on model `UtilityProvider` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4891[0m
[1;94m   | [0m
[1;94m4890 | [0m  createdById         Int?
[1;94m4891 | [0m  [1;91mcreatedBy           User?                 @relation("ProviderCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4892 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `UtilityProvider`: The relation field `updatedBy` on model `UtilityProvider` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4893[0m
[1;94m   | [0m
[1;94m4892 | [0m  updatedById         Int?
[1;94m4893 | [0m  [1;91mupdatedBy           User?                 @relation("ProviderUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4894 | [0m  auditLogs           AuditLog[]            @relation("UtilityProviderAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `UtilityProvider`: The relation field `auditLogs` on model `UtilityProvider` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4894[0m
[1;94m   | [0m
[1;94m4893 | [0m  updatedBy           User?                 @relation("ProviderUpdatedBy", fields: [updatedById], references: [id])
[1;94m4894 | [0m  [1;91mauditLogs           AuditLog[]            @relation("UtilityProviderAuditLogs")[0m
[1;94m4895 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `UtilityMaintenance`: The relation field `performedBy` on model `UtilityMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4908[0m
[1;94m   | [0m
[1;94m4907 | [0m  performedById       Int?
[1;94m4908 | [0m  [1;91mperformedBy         User?                 @relation("MaintenancePerformedBy", fields: [performedById], references: [id])[0m
[1;94m4909 | [0m  cost                Float?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `UtilityMaintenance`: The relation field `createdBy` on model `UtilityMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4917[0m
[1;94m   | [0m
[1;94m4916 | [0m  createdById         Int?
[1;94m4917 | [0m  [1;91mcreatedBy           User?                 @relation("MaintenanceCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4918 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `UtilityMaintenance`: The relation field `updatedBy` on model `UtilityMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4919[0m
[1;94m   | [0m
[1;94m4918 | [0m  updatedById         Int?
[1;94m4919 | [0m  [1;91mupdatedBy           User?                 @relation("MaintenanceUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4920 | [0m  auditLogs           AuditLog[]            @relation("UtilityMaintenanceAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `UtilityMaintenance`: The relation field `auditLogs` on model `UtilityMaintenance` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4920[0m
[1;94m   | [0m
[1;94m4919 | [0m  updatedBy           User?                 @relation("MaintenanceUpdatedBy", fields: [updatedById], references: [id])
[1;94m4920 | [0m  [1;91mauditLogs           AuditLog[]            @relation("UtilityMaintenanceAuditLogs")[0m
[1;94m4921 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Verification`: The relation field `patient` on model `Verification` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4962[0m
[1;94m   | [0m
[1;94m4961 | [0m  patientId           Int?
[1;94m4962 | [0m  [1;91mpatient             Patient?              @relation(fields: [patientId], references: [id])[0m
[1;94m4963 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Verification`: The relation field `department` on model `Verification` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4978[0m
[1;94m   | [0m
[1;94m4977 | [0m  departmentId        Int?
[1;94m4978 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m4979 | [0m  verifiedById        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `VerificationConfiguration`: The relation field `department` on model `VerificationConfiguration` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:5004[0m
[1;94m   | [0m
[1;94m5003 | [0m  departmentId        Int?
[1;94m5004 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m5005 | [0m  notes               String?
[1;94m   | [0m

Validation Error Count: 512
[Context: validate]

Prisma CLI Version : 5.22.0
