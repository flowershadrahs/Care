enum PrescriptionStatus {
  PENDING
  DISPENSED
  PARTIALLY_DISPENSED
  CANCELLED
  ON_HOLD
  EXPIRED
}

enum PatientType {
  INPATIENT
  OUTPATIENT
}

enum StockAdjustmentType {
  INCREASE
  DECREASE
  DAMAGED
  EXPIRED
  TRANSFER
}

model Prescription {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  patientId           Int
  patient             Patient               @relation("Prescriptions", fields: [patientId], references: [id])
  doctorId            Int
  doctor              Doctor                @relation("Prescriptions", fields: [doctorId], references: [id])
  appointmentId       Int?                  @unique
  appointment         Appointment?          @relation("PrescriptionAppointments", fields: [appointmentId], references: [id])
  admissionId         Int?                  @unique
  admission           Admission?            @relation("PrescriptionAdmissions", fields: [admissionId], references: [id])
  clinicalRecordId    Int?                  @unique
  clinicalRecord      ClinicalRecord?       @relation("PrescriptionClinicalRecords", fields: [clinicalRecordId], references: [id])
  pharmacyId          Int?                  @unique
  pharmacy            Pharmacy?             @relation("PrescriptionPharmacy", fields: [pharmacyId], references: [id])
  status              PrescriptionStatus    @default(PENDING)
  prescriptionDate    DateTime              @default(now())
  expiryDate          DateTime?
  notes               String?
  priority            String?
  items               PrescriptionItem[]    @relation("PrescriptionItems")
  dispensingRecords   DispensingRecord[]    @relation("PrescriptionDispensingRecords")
  invoiceId           Int?                  @unique
  invoice             Invoice?              @relation("InvoicePrescription", fields: [invoiceId], references: [id])
  claimId             Int?                  @unique
  claim               Claim?                @relation("PrescriptionClaims", fields: [claimId], references: [id])
  nhifClaimId         Int?                  @unique
  nhifClaim           NhifClaim?            @relation("PrescriptionNhifClaims", fields: [nhifClaimId], references: [id])
  createdById         Int?                  @unique
  createdBy           User?                 @relation("PrescriptionCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?                  @unique
  updatedBy           User?                 @relation("PrescriptionUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("PrescriptionAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model PrescriptionItem {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  prescriptionId      Int
  prescription        Prescription          @relation("PrescriptionItems", fields: [prescriptionId], references: [id])
  medicationId        Int
  medication          Medication            @relation("PrescriptionItemMedication", fields: [medicationId], references: [id])
  dosage              String
  quantity            Int
  frequency           String
  duration            String
  route               String?
  instructions        String?
  refillCount         Int?                  @default(0)
  createdById         Int?                  @unique
  createdBy           User?                 @relation("PrescriptionItemCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?                  @unique
  updatedBy           User?                 @relation("PrescriptionItemUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("PrescriptionItemAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model DispensingRecord {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  prescriptionId      Int
  prescription        Prescription          @relation("PrescriptionDispensingRecords", fields: [prescriptionId], references: [id])
  medicationId        Int
  medication          Medication            @relation("DispensingRecordMedication", fields: [medicationId], references: [id])
  patientType         PatientType
  quantity            Int
  dispensedDate       DateTime              @default(now())
  dispensedById       Int
  dispensedBy         User                  @relation("DispensedBy", fields: [dispensedById], references: [id])
  pharmacyId          Int?                  @unique
  pharmacy            Pharmacy?             @relation("DispensingRecordPharmacy", fields: [pharmacyId], references: [id])
  invoiceId           Int?                  @unique
  invoice             Invoice?              @relation("InvoiceDispensingRecords", fields: [invoiceId], references: [id])
  batchNumber         String?
  expiryDate          DateTime?
  notes               String?
  status              String                @default("DISPENSED")
  createdById         Int?                  @unique
  createdBy           User?                 @relation("DispensingRecordCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?                  @unique
  updatedBy           User?                 @relation("DispensingRecordUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("DispensingRecordAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model StockAdjustment {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  medicationId        Int
  medication          Medication            @relation("StockAdjustmentMedication", fields: [medicationId], references: [id])
  pharmacyId          Int?                  @unique
  pharmacy            Pharmacy?             @relation("StockAdjustmentPharmacy", fields: [pharmacyId], references: [id])
  quantity            Int
  adjustmentType      StockAdjustmentType
  reason              String
  adjustedById        Int
  adjustedBy          User                  @relation("AdjustedBy", fields: [adjustedById], references: [id])
  approvedById        Int?                  @unique
  approvedBy          User?                 @relation("AdjustmentApprovedBy", fields: [approvedById], references: [id])
  adjustmentDate      DateTime              @default(now())
  batchNumber         String?
  expiryDate          DateTime?
  procurementId       Int?                  @unique
  procurement         Procurement?          @relation("StockAdjustmentProcurement", fields: [procurementId], references: [id])
  inventoryId         Int?                  @unique
  inventory           Inventory?            @relation("StockAdjustmentInventory", fields: [inventoryId], references: [id])
  notes               String?
  auditLogs           AuditLog[]            @relation("StockAdjustmentAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}