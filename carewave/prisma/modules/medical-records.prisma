// Represents a patient's medical record
model MedicalRecord {
  id            String       @id @default(uuid())
  patientId     String
  patient       Patient      @relation("PatientMedicalRecords", fields: [patientId], references: [id], onDelete: Cascade)
  recordDate    DateTime
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  allergies     Allergy[]    @relation("MedicalRecordAllergies")
  diagnoses     Diagnosis[]  @relation("MedicalRecordDiagnoses")
  vitalSigns    VitalSign[]  @relation("MedicalRecordVitalSigns")
}

// Represents a patient's allergies
model Allergy {
  id              String        @id @default(uuid())
  medicalRecordId String
  medicalRecord   MedicalRecord @relation("MedicalRecordAllergies", fields: [medicalRecordId], references: [id], onDelete: Cascade)
  name            String
  severity        String
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

// Represents a diagnosis in a medical record
model Diagnosis {
  id              String        @id @default(uuid())
  medicalRecordId String
  medicalRecord   MedicalRecord @relation("MedicalRecordDiagnoses", fields: [medicalRecordId], references: [id], onDelete: Cascade)
  code            String
  description     String
  diagnosedAt     DateTime
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

// Represents vital signs recorded for a patient
model VitalSign {
  id              String        @id @default(uuid())
  medicalRecordId String
  medicalRecord   MedicalRecord @relation("MedicalRecordVitalSigns", fields: [medicalRecordId], references: [id], onDelete: Cascade)
  bloodPressure   String?
  heartRate       Int?
  temperature     Float?
  recordedAt      DateTime
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}