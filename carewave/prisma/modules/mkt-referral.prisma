enum ReferralType {
  PATIENT_TO_PATIENT
  DOCTOR_TO_DOCTOR
  STAFF_TO_PATIENT
  EXTERNAL_PARTNER
}

enum ReferralStatus {
  PENDING
  ACCEPTED
  COMPLETED
  REJECTED
  EXPIRED
}

enum RewardType {
  DISCOUNT
  GIFT_CARD
  CASH
  RAFFLE_ENTRY
  FREE_CONSULTATION
  SERVICE_CREDIT
}

model ReferralProgram {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  name                String
  description         String?
  type                ReferralType
  status              String                @default("ACTIVE")
  startDate           DateTime              @default(now())
  endDate             DateTime?
  departmentId        Int?
  department          Department?           @relation(fields: [departmentId], references: [id])
  targetAudience      String?
  rewardType          RewardType?
  rewardValue         Float?
  rewardDescription    String?
  eligibilityCriteria  String?
  maxReferrals        Int?
  termsConditions     String?
  createdById         Int?
  createdBy           User?                 @relation("ReferralProgramCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?
  updatedBy           User?                 @relation("ReferralProgramUpdatedBy", fields: [updatedById], references: [id])
  referrals           Referral[]
  campaigns           MarketingCampaign[]
  auditLogs           AuditLog[]            @relation("ReferralProgramAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model Referral {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  referralProgramId   Int
  referralProgram     ReferralProgram       @relation(fields: [referralProgramId], references: [id])
  referrerId          Int?
  referrer            User?                 @relation("Referrer", fields: [referrerId], references: [id])
  refereeId           Int?
  referee             User?                 @relation("Referee", fields: [refereeId], references: [id])
  patientId           Int?
  patient             Patient?              @relation(fields: [patientId], references: [id])
  doctorId            Int?
  doctor              Doctor?               @relation(fields: [doctorId], references: [id])
  departmentId        Int?
  department          Department?           @relation(fields: [departmentId], references: [id])
  status              ReferralStatus        @default(PENDING)
  referralDate        DateTime              @default(now())
  completionDate      DateTime?
  appointmentId       Int?
  appointment         Appointment?          @relation(fields: [appointmentId], references: [id])
  medicalRecordId     Int?
  medicalRecord       MedicalRecord?        @relation(fields: [medicalRecordId], references: [id])
  claimId             Int?
  claim               Claim?                @relation(fields: [claimId], references: [id])
  nhifClaimId         Int?
  nhifClaim           NhifClaim?            @relation(fields: [nhifClaimId], references: [id])
  rewardId            Int?
  reward              ReferralReward?       @relation(fields: [rewardId], references: [id])
  notes              String?
  referralCode        String?               @unique
  source              String?
  campaignId          Int?
  campaign            MarketingCampaign?    @relation(fields: [campaignId], references: [id])
  createdById         Int?
  createdBy           User?                 @relation("ReferralCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?
  updatedBy           User?                 @relation("ReferralUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("ReferralAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model ReferralReward {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  referralId          Int
  referral            Referral              @relation(fields: [referralId], references: [id], map: "ReferralReward_referral_fkey")
  rewardType          RewardType
  rewardValue         Float
  issuedDate          DateTime              @default(now())
  expiryDate          DateTime?
  redeemedDate        DateTime?
  redeemedById        Int?
  redeemedBy          User?                 @relation("RewardRedeemedBy", fields: [redeemedById], references: [id], map: "ReferralReward_redeemedBy_fkey")
  status              String                @default("PENDING")
  transactionId       Int?
  transaction         Transaction?          @relation("TransactionReferralRewards", fields: [transactionId], references: [id], map: "ReferralReward_transaction_fkey")
  notes               String?
  createdById         Int?
  createdBy           User?                 @relation("RewardCreatedBy", fields: [createdById], references: [id], map: "ReferralReward_createdBy_fkey")
  updatedById         Int?
  updatedBy           User?                 @relation("RewardUpdatedBy", fields: [updatedById], references: [id], map: "ReferralReward_updatedBy_fkey")
  auditLogs           AuditLog[]            @relation("ReferralRewardAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}
model MarketingCampaign {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  name                String
  description         String?
  referralProgramId   Int?
  referralProgram     ReferralProgram?      @relation(fields: [referralProgramId], references: [id])
  startDate           DateTime              @default(now())
  endDate             DateTime?
  targetAudience      String?
  channel             String?
  budget              Float?
  actualCost          Float?
  k各地

System: kpis                String?               // JSON or text for key performance indicators
  status              String                @default("DRAFT")
  referrals           Referral[]
  createdById         Int?
  createdBy           User?                 @relation("CampaignCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?
  updatedBy           User?                 @relation("CampaignUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("MarketingCampaignAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}