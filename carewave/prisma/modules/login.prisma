
model UserLogin {
  id            String         @id @default(uuid())
  email         String         @unique
  passwordHash  String
  lastLoginAt   DateTime?      // Added to track last successful login
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  loginAttempts LoginAttempt[] @relation("UserLoginAttempts")
  sessions      Session[]      @relation("UserSessions")
  userRegistration UserRegistration? @relation("UserRegistrationToUserLogin")
}

model LoginAttempt {
  id            String     @id @default(uuid())
  userLoginId   String
  userLogin     UserLogin  @relation("UserLoginAttempts", fields: [userLoginId], references: [id], onDelete: Cascade)
  ipAddress     String?
  userAgent     String?    // Added to track user agent for security
  success       Boolean
  attemptedAt   DateTime   @default(now())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Session {
  id            String     @id @default(uuid())
  userLoginId   String
  userLogin     UserLogin  @relation("UserSessions", fields: [userLoginId], references: [id], onDelete: Cascade)
  token         String     @unique
  expiresAt     DateTime
  isActive      Boolean    @default(true) // Added to track active sessions
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}