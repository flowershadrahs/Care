enum ReportStatus {
  DRAFT
  GENERATED
  SCHEDULED
  FAILED
  COMPLETED
  ARCHIVED
}

enum ReportType {
  FINANCIAL
  CLINICAL
  OPERATIONAL
  PATIENT
  INVENTORY
  COMPLIANCE
  PERFORMANCE
}

enum ReportFormat {
  PDF
  CSV
  EXCEL
  JSON
  HTML
}

enum ScheduleFrequency {
  ONCE
  DAILY
  WEEKLY
  MONTHLY
  QUARTERLY
  ANNUALLY
}

model DynamicReport {
  id                    Int                 @id @default(autoincrement())
  uuid                  String              @unique @default(uuid())
  name                  String              // e.g., "Monthly Patient Admissions"
  description           String?             // Report description
  type                  ReportType          // Type of report
  status                ReportStatus        @default(DRAFT)
  format                ReportFormat        // Output format
  query                 String              // SQL or query string for report data
  parameters            String?             // JSON for report parameters (e.g., date range, department)
  departmentId          Int?                // Link to department
  department            Department?         @relation(fields: [departmentId], references: [id])
  clinicalSettingId     Int?                // Link to clinical setting
  clinicalSetting       ClinicalSetting?    @relation(fields: [clinicalSettingId], references: [id])
  createdById           Int?                // User who created the report
  createdBy             User?               @relation("ReportCreatedBy", fields: [createdById], references: [id])
  updatedById           Int?                // User who last updated
  updatedBy             User?               @relation("ReportUpdatedBy", fields: [updatedById], references: [id])
  scheduled             Boolean             @default(false) // Is report scheduled?
  scheduleFrequency     ScheduleFrequency?  // Frequency for scheduled reports
  scheduleStartDate     DateTime?           // Start date for scheduled reports
  scheduleEndDate       DateTime?           // End date for recurring schedule
  lastGenerated         DateTime?           // Last time report was generated
  outputPath            String?             // Path to generated report file
  reportTemplateId      Int?                // Link to report template
  reportTemplate        ReportTemplate?     @relation(fields: [reportTemplateId], references: [id])
  notifications         ReportNotification[] @relation("ReportNotifications")
  auditLogs             AuditLog[]          @relation("DynamicReportAuditLogs")
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
}

model ReportTemplate {
  id                    Int                 @id @default(autoincrement())
  uuid                  String              @unique @default(uuid())
  name                  String              // e.g., "Patient Summary Template"
  description           String?             // Template description
  type                  ReportType          // Type of report template
  templateContent       String              // JSON or HTML for template structure
  defaultParameters     String?             // JSON for default parameters
  createdById           Int?                // User who created the template
  createdBy             User?               @relation("TemplateCreatedBy", fields: [createdById], references: [id])
  updatedById           Int?                // User who last updated
  updatedBy             User?               @relation("TemplateUpdatedBy", fields: [updatedById], references: [id])
  reports               DynamicReport[]     @relation
  auditLogs             AuditLog[]          @relation("ReportTemplateAuditLogs")
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
}

model ReportNotification {
  id                    Int                 @id @default(autoincrement())
  uuid                  String              @unique @default(uuid())
  reportId              Int
  report                DynamicReport       @relation("ReportNotifications", fields: [reportId], references: [id])
  notificationType      String              // e.g., "SMS", "Email", "App Push"
  status                String              @default("PENDING") // PENDING, SENT, FAILED, READ
  sentAt                DateTime?
  recipientId           Int?                // User receiving notification
  recipient             User?               @relation(fields: [recipientId], references: [id])
  message               String?             // Notification content
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
}