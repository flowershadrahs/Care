enum CSSDInstrumentStatus {
  AVAILABLE
  IN_USE
  UNDER_MAINTENANCE
  STERILIZATION_IN_PROGRESS
  OUT_OF_SERVICE
  RESERVED
}

enum CSSDSterilizationMethod {
  STEAM
  ETHYLENE_OXIDE
  PLASMA
  DRY_HEAT
  CHEMICAL
}

enum CSSDRecordStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  FAILED
  CANCELLED
}

enum CSSDRequisitionStatus {
  PENDING
  APPROVED
  DISPATCHED
  REJECTED
  RETURNED
}

enum CSSDStatus {
  ACTIVE
  INACTIVE
  MAINTENANCE
}

model Cssd {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  departmentId        Int?
  department          Department?           @relation("DepartmentCssd", fields: [departmentId], references: [id])
  clinicalSettingId   Int?                  @unique
  clinicalSetting     ClinicalSetting?      @relation("ClinicalSettingCssd", fields: [clinicalSettingId], references: [id])
  name                String
  status              CSSDStatus            @default(ACTIVE)
  location            String?
  capacity            Int?
  createdById         Int?                  @unique
  createdBy           User?                 @relation("CssdCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?                  @unique
  updatedBy           User?                 @relation("CssdUpdatedBy", fields: [updatedById], references: [id])
  instruments         CSSDInstrument[]      @relation("CssdInstruments")
  records             CSSDRecord[]          @relation("CssdRecords")
  requisitions        CSSDRequisition[]     @relation("CssdRequisitions")
  auditLogs           AuditLog[]            @relation("CssdAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model CSSDInstrument {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  cssdId              Int
  cssd                Cssd                  @relation("CssdInstruments", fields: [cssdId], references: [id])
  clinicalSettingId   Int?
  clinicalSetting     ClinicalSetting?      @relation("ClinicalSettingCSSDInstruments", fields: [clinicalSettingId], references: [id])
  name                String
  code                String                @unique
  status              CSSDInstrumentStatus  @default(AVAILABLE)
  lastSterilized      DateTime?
  sterilizationMethod  CSSDSterilizationMethod?
  maintenanceSchedule String?
  usageCount          Int                   @default(0)
  procurementId       Int?
  procurement         Procurement?          @relation("CSSDInstrumentProcurement", fields: [procurementId], references: [id])
  createdById         Int?                  @unique
  createdBy           User?                 @relation("CSSDInstrumentCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?                  @unique
  updatedBy           User?                 @relation("CSSDInstrumentUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("CSSDInstrumentAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model CSSDRecord {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  cssdId              Int
  cssd                Cssd                  @relation("CssdRecords", fields: [cssdId], references: [id])
  clinicalSettingId   Int?
  clinicalSetting     ClinicalSetting?      @relation("ClinicalSettingCSSDRecords", fields: [clinicalSettingId], references: [id])
  instrumentId        Int?
  instrument          CSSDInstrument?       @relation("CSSDRecordInstrument", fields: [instrumentId], references: [id])
  sterilizationDate   DateTime              @default(now())
  status              CSSDRecordStatus      @default(PENDING)
  sterilizationMethod  CSSDSterilizationMethod
  operatorId          Int?
  operator            User?                 @relation("CSSDRecordOperator", fields: [operatorId], references: [id])
  notes               String?
  createdById         Int?                  @unique
  createdBy           User?                 @relation("CSSDRecordCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?                  @unique
  updatedBy           User?                 @relation("CSSDRecordUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("CSSDRecordAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model CSSDRequisition {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  cssdId              Int
  cssd                Cssd                  @relation("CssdRequisitions", fields: [cssdId], references: [id])
  clinicalSettingId   Int?
  clinicalSetting     ClinicalSetting?      @relation("ClinicalSettingCSSDRequisitions", fields: [clinicalSettingId], references: [id])
  instrumentId        Int?
  instrument          CSSDInstrument?       @relation("CSSDRequisitionInstrument", fields: [instrumentId], references: [id])
  departmentId        Int?
  department          Department?           @relation("DepartmentCSSDRequisitions", fields: [departmentId], references: [id])
  status              CSSDRequisitionStatus @default(PENDING)
  requestDate         DateTime              @default(now())
  dispatchDate        DateTime?
  returnDate          DateTime?
  quantity            Int                   @default(1)
  requestedById       Int?
  requestedBy         User?                 @relation("CSSDRequisitionRequestedBy", fields: [requestedById], references: [id])
  approvedById        Int?
  approvedBy          User?                 @relation("CSSDRequisitionApprovedBy", fields: [approvedById], references: [id])
  notes               String?
  createdById         Int?                  @unique
  createdBy           User?                 @relation("CSSDRequisitionCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?                  @unique
  updatedBy           User?                 @relation("CSSDRequisitionUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("CSSDRequisitionAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}