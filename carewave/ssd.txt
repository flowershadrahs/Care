Environment variables loaded from .env
Prisma schema loaded from prisma/schema.prisma
Datasource "db": PostgreSQL database "postgres", schema "public" at "aws-0-us-east-1.pooler.supabase.com:5432"


Error: Prisma schema validation - (validate wasm)
Error code: P1012
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `DashboardWidget` and `dashboardWidget` on Model `Appointment` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:72[0m
[1;94m   | [0m
[1;94m71 | [0m  appointmentId       Int?                  @unique
[1;94m72 | [0m  [1;91mappointment         Appointment?          @relation("DashboardWidgetAppointments", fields: [appointmentId], references: [id])[0m
[1;94m73 | [0m  admissionId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `DashboardWidget` and `dashboardWidget` on Model `Appointment` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:430[0m
[1;94m   | [0m
[1;94m429 | [0m  recurringAppointment   RecurringAppointment? @relation("RecurringAppointmentAppointments", fields: [recurringAppointmentId], references: [id])
[1;94m430 | [0m  [1;91mdashboardWidget        DashboardWidget?     @relation("DashboardWidgetAppointments", fields: [dashboardWidgetId], references: [id])[0m
[1;94m431 | [0m  doctorAvailability    DoctorAvailability?   @relation("DoctorAvailabilityAppointments", fields: [doctorAvailabilityId], references: [id])
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `DashboardWidget` and `dashboardWidget` on Model `Appointment` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:72[0m
[1;94m   | [0m
[1;94m71 | [0m  appointmentId       Int?                  @unique
[1;94m72 | [0m  [1;91mappointment         Appointment?          @relation("DashboardWidgetAppointments", fields: [appointmentId], references: [id])[0m
[1;94m73 | [0m  admissionId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `DashboardWidget` and `dashboardWidget` on Model `Appointment` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:430[0m
[1;94m   | [0m
[1;94m429 | [0m  recurringAppointment   RecurringAppointment? @relation("RecurringAppointmentAppointments", fields: [recurringAppointmentId], references: [id])
[1;94m430 | [0m  [1;91mdashboardWidget        DashboardWidget?     @relation("DashboardWidgetAppointments", fields: [dashboardWidgetId], references: [id])[0m
[1;94m431 | [0m  doctorAvailability    DoctorAvailability?   @relation("DoctorAvailabilityAppointments", fields: [doctorAvailabilityId], references: [id])
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `Appointment` and `appointment` on Model `DashboardWidget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:430[0m
[1;94m   | [0m
[1;94m429 | [0m  recurringAppointment   RecurringAppointment? @relation("RecurringAppointmentAppointments", fields: [recurringAppointmentId], references: [id])
[1;94m430 | [0m  [1;91mdashboardWidget        DashboardWidget?     @relation("DashboardWidgetAppointments", fields: [dashboardWidgetId], references: [id])[0m
[1;94m431 | [0m  doctorAvailability    DoctorAvailability?   @relation("DoctorAvailabilityAppointments", fields: [doctorAvailabilityId], references: [id])
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `Appointment` and `appointment` on Model `DashboardWidget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:72[0m
[1;94m   | [0m
[1;94m71 | [0m  appointmentId       Int?                  @unique
[1;94m72 | [0m  [1;91mappointment         Appointment?          @relation("DashboardWidgetAppointments", fields: [appointmentId], references: [id])[0m
[1;94m73 | [0m  admissionId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `Appointment` and `appointment` on Model `DashboardWidget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:430[0m
[1;94m   | [0m
[1;94m429 | [0m  recurringAppointment   RecurringAppointment? @relation("RecurringAppointmentAppointments", fields: [recurringAppointmentId], references: [id])
[1;94m430 | [0m  [1;91mdashboardWidget        DashboardWidget?     @relation("DashboardWidgetAppointments", fields: [dashboardWidgetId], references: [id])[0m
[1;94m431 | [0m  doctorAvailability    DoctorAvailability?   @relation("DoctorAvailabilityAppointments", fields: [doctorAvailabilityId], references: [id])
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `Appointment` and `appointment` on Model `DashboardWidget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:72[0m
[1;94m   | [0m
[1;94m71 | [0m  appointmentId       Int?                  @unique
[1;94m72 | [0m  [1;91mappointment         Appointment?          @relation("DashboardWidgetAppointments", fields: [appointmentId], references: [id])[0m
[1;94m73 | [0m  admissionId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `emergency` in model `Admission`: The relation field `emergency` on model `Admission` is missing an opposite relation field on the model `Emergency`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:546[0m
[1;94m   | [0m
[1;94m545 | [0m  emergencyId          Int?                @unique
[1;94m546 | [0m  [1;91memergency            Emergency?          @relation("AdmissionEmergency", fields: [emergencyId], references: [id])[0m
[1;94m547 | [0m  billingId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `Admission`: The relation field `medicalRecord` on model `Admission` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:550[0m
[1;94m   | [0m
[1;94m549 | [0m  medicalRecordId      Int?                @unique
[1;94m550 | [0m  [1;91mmedicalRecord        MedicalRecord?      @relation("AdmissionMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m551 | [0m  queueId              Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referral` in model `Admission`: The relation field `referral` on model `Admission` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:557[0m
[1;94m   | [0m
[1;94m556 | [0m  referralId           Int?                @unique
[1;94m557 | [0m  [1;91mreferral             Referral?           @relation("AdmissionReferral", fields: [referralId], references: [id])[0m
[1;94m558 | [0m  insuranceId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Emergency`: The relation field `admission` on model `Emergency` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:721[0m
[1;94m   | [0m
[1;94m720 | [0m  admissionId           Int?                @unique
[1;94m721 | [0m  [1;91madmission             Admission?          @relation("EmergencyAdmissions", fields: [admissionId], references: [id])[0m
[1;94m722 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Emergency`: The relation field `department` on model `Emergency` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:723[0m
[1;94m   | [0m
[1;94m722 | [0m  departmentId          Int?
[1;94m723 | [0m  [1;91mdepartment            Department?         @relation("DepartmentEmergencies", fields: [departmentId], references: [id])[0m
[1;94m724 | [0m  clinicalSettingId     Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratory` in model `Emergency`: The relation field `laboratory` on model `Emergency` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:735[0m
[1;94m   | [0m
[1;94m734 | [0m  laboratoryId          Int?                @unique
[1;94m735 | [0m  [1;91mlaboratory            Laboratory?         @relation("EmergencyLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m736 | [0m  radiologyId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `radiology` in model `Emergency`: The relation field `radiology` on model `Emergency` is missing an opposite relation field on the model `Radiology`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:737[0m
[1;94m   | [0m
[1;94m736 | [0m  radiologyId           Int?                @unique
[1;94m737 | [0m  [1;91mradiology             Radiology?          @relation("EmergencyRadiology", fields: [radiologyId], references: [id])[0m
[1;94m738 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `Emergency`: The relation field `operationTheatre` on model `Emergency` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:741[0m
[1;94m   | [0m
[1;94m740 | [0m  operationTheatreId    Int?                @unique
[1;94m741 | [0m  [1;91moperationTheatre      OperationTheatre?   @relation("EmergencyOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m742 | [0m  billingId             Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Emergency`: The relation field `billing` on model `Emergency` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:743[0m
[1;94m   | [0m
[1;94m742 | [0m  billingId             Int?                @unique
[1;94m743 | [0m  [1;91mbilling               Billing?            @relation("EmergencyBilling", fields: [billingId], references: [id])[0m
[1;94m744 | [0m  claimId               Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `Emergency`: The relation field `claim` on model `Emergency` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:745[0m
[1;94m   | [0m
[1;94m744 | [0m  claimId               Int?                @unique
[1;94m745 | [0m  [1;91mclaim                 Claim?              @relation("EmergencyClaims", fields: [claimId], references: [id])[0m
[1;94m746 | [0m  wardId                Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Emergency`: The relation field `createdBy` on model `Emergency` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:755[0m
[1;94m   | [0m
[1;94m754 | [0m  createdById           Int?                @unique
[1;94m755 | [0m  [1;91mcreatedBy             User?               @relation("EmergencyCreatedBy", fields: [createdById], references: [id])[0m
[1;94m756 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Emergency`: The relation field `updatedBy` on model `Emergency` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:757[0m
[1;94m   | [0m
[1;94m756 | [0m  updatedById           Int?                @unique
[1;94m757 | [0m  [1;91mupdatedBy             User?               @relation("EmergencyUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m758 | [0m  auditLogs             AuditLog[]          @relation("EmergencyAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Emergency`: The relation field `auditLogs` on model `Emergency` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:758[0m
[1;94m   | [0m
[1;94m757 | [0m  updatedBy             User?               @relation("EmergencyUpdatedBy", fields: [updatedById], references: [id])
[1;94m758 | [0m  [1;91mauditLogs             AuditLog[]          @relation("EmergencyAuditLogs")[0m
[1;94m759 | [0m  emergencyDocuments    EmergencyDocument[] @relation("EmergencyDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `EmergencyDocument`: The relation field `uploadedBy` on model `EmergencyDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:774[0m
[1;94m   | [0m
[1;94m773 | [0m  uploadedById          Int?                @unique
[1;94m774 | [0m  [1;91muploadedBy            User?               @relation("EmergencyDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m775 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `EmergencyDocument`: The relation field `auditLogs` on model `EmergencyDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:777[0m
[1;94m   | [0m
[1;94m776 | [0m  updatedAt             DateTime            @updatedAt
[1;94m777 | [0m  [1;91mauditLogs             AuditLog[]          @relation("EmergencyDocumentAuditLogs")[0m
[1;94m778 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `EmergencyNotification`: The relation field `recipient` on model `EmergencyNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:789[0m
[1;94m   | [0m
[1;94m788 | [0m  recipientId           Int?                @unique
[1;94m789 | [0m  [1;91mrecipient             User?               @relation("EmergencyNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m790 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Queue`: The relation field `patient` on model `Queue` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:825[0m
[1;94m   | [0m
[1;94m824 | [0m  patientId           Int?
[1;94m825 | [0m  [1;91mpatient             Patient?              @relation("PatientQueue", fields: [patientId], references: [id])[0m
[1;94m826 | [0m  appointmentId       Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Queue`: The relation field `clinicalSetting` on model `Queue` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:835[0m
[1;94m   | [0m
[1;94m834 | [0m  clinicalSettingId   Int?
[1;94m835 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m836 | [0m  wardId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Queue`: The relation field `createdBy` on model `Queue` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:844[0m
[1;94m   | [0m
[1;94m843 | [0m  createdById         Int?
[1;94m844 | [0m  [1;91mcreatedBy           User?                 @relation("QueueCreatedBy", fields: [createdById], references: [id])[0m
[1;94m845 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Queue`: The relation field `updatedBy` on model `Queue` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:846[0m
[1;94m   | [0m
[1;94m845 | [0m  updatedById         Int?
[1;94m846 | [0m  [1;91mupdatedBy           User?                 @relation("QueueUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m847 | [0m  queueLogs           QueueLog[]            @relation("QueueLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Queue`: The relation field `auditLogs` on model `Queue` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:849[0m
[1;94m   | [0m
[1;94m848 | [0m  notifications       QueueNotification[]   @relation("QueueNotifications")
[1;94m849 | [0m  [1;91mauditLogs           AuditLog[]            @relation("QueueAuditLogs")[0m
[1;94m850 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `actionBy` in model `QueueLog`: The relation field `actionBy` on model `QueueLog` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:862[0m
[1;94m   | [0m
[1;94m861 | [0m  actionById          Int?
[1;94m862 | [0m  [1;91mactionBy            User?                 @relation(fields: [actionById], references: [id])[0m
[1;94m863 | [0m  actionDate          DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `QueueNotification`: The relation field `recipient` on model `QueueNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:878[0m
[1;94m   | [0m
[1;94m877 | [0m  recipientId         Int?
[1;94m878 | [0m  [1;91mrecipient           User?                 @relation(fields: [recipientId], references: [id])[0m
[1;94m879 | [0m  message             String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `QueueConfiguration`: The relation field `clinicalSetting` on model `QueueConfiguration` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:890[0m
[1;94m   | [0m
[1;94m889 | [0m  clinicalSettingId    Int?
[1;94m890 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m891 | [0m  name                String
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `QueueConfiguration`: The relation field `createdBy` on model `QueueConfiguration` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:900[0m
[1;94m   | [0m
[1;94m899 | [0m  createdById         Int?
[1;94m900 | [0m  [1;91mcreatedBy           User?                 @relation("QueueConfigCreatedBy", fields: [createdById], references: [id])[0m
[1;94m901 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `QueueConfiguration`: The relation field `updatedBy` on model `QueueConfiguration` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:902[0m
[1;94m   | [0m
[1;94m901 | [0m  updatedById         Int?
[1;94m902 | [0m  [1;91mupdatedBy           User?                 @relation("QueueConfigUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m903 | [0m  auditLogs           AuditLog[]            @relation("QueueConfigAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `QueueConfiguration`: The relation field `auditLogs` on model `QueueConfiguration` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:903[0m
[1;94m   | [0m
[1;94m902 | [0m  updatedBy           User?                 @relation("QueueConfigUpdatedBy", fields: [updatedById], references: [id])
[1;94m903 | [0m  [1;91mauditLogs           AuditLog[]            @relation("QueueConfigAuditLogs")[0m
[1;94m904 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `ClinicalRecord`: The relation field `appointment` on model `ClinicalRecord` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:941[0m
[1;94m   | [0m
[1;94m940 | [0m  appointmentId         Int?
[1;94m941 | [0m  [1;91mappointment           Appointment?        @relation("ClinicalRecordAppointments", fields: [appointmentId], references: [id])[0m
[1;94m942 | [0m  admissionId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `ClinicalRecord`: The relation field `admission` on model `ClinicalRecord` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:943[0m
[1;94m   | [0m
[1;94m942 | [0m  admissionId           Int?
[1;94m943 | [0m  [1;91madmission             Admission?          @relation("ClinicalRecordAdmissions", fields: [admissionId], references: [id])[0m
[1;94m944 | [0m  medicalRecordId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `ClinicalRecord`: The relation field `medicalRecord` on model `ClinicalRecord` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:945[0m
[1;94m   | [0m
[1;94m944 | [0m  medicalRecordId       Int?
[1;94m945 | [0m  [1;91mmedicalRecord         MedicalRecord?      @relation("ClinicalRecordMedicalRecords", fields: [medicalRecordId], references: [id])[0m
[1;94m946 | [0m  clinicalSettingId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:960[0m
[1;94m   | [0m
[1;94m959 | [0m  laboratoryId          Int?
[1;94m960 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m961 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1056[0m
[1;94m   | [0m
[1;94m1055 | [0m  clinicalRecordId      Int?
[1;94m1056 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1057 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:960[0m
[1;94m   | [0m
[1;94m959 | [0m  laboratoryId          Int?
[1;94m960 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m961 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1056[0m
[1;94m   | [0m
[1;94m1055 | [0m  clinicalRecordId      Int?
[1;94m1056 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1057 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `laboratoryId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:960[0m
[1;94m   | [0m
[1;94m959 | [0m  laboratoryId          Int?
[1;94m960 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m961 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `ClinicalRecord`: The relation field `operationTheatre` on model `ClinicalRecord` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:966[0m
[1;94m   | [0m
[1;94m965 | [0m  operationTheatreId    Int?
[1;94m966 | [0m  [1;91moperationTheatre      OperationTheatre?   @relation("ClinicalRecordOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m967 | [0m  nursingId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursing` in model `ClinicalRecord`: The relation field `nursing` on model `ClinicalRecord` is missing an opposite relation field on the model `Nursing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:968[0m
[1;94m   | [0m
[1;94m967 | [0m  nursingId             Int?
[1;94m968 | [0m  [1;91mnursing               Nursing?            @relation("ClinicalRecordNursing", fields: [nursingId], references: [id])[0m
[1;94m969 | [0m  billingId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `ClinicalRecord`: The relation field `billing` on model `ClinicalRecord` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:970[0m
[1;94m   | [0m
[1;94m969 | [0m  billingId             Int?
[1;94m970 | [0m  [1;91mbilling               Billing?            @relation("ClinicalRecordBilling", fields: [billingId], references: [id])[0m
[1;94m971 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `ClinicalRecord`: The relation field `claim` on model `ClinicalRecord` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:972[0m
[1;94m   | [0m
[1;94m971 | [0m  claimId               Int?
[1;94m972 | [0m  [1;91mclaim                 Claim?              @relation("ClinicalRecordClaims", fields: [claimId], references: [id])[0m
[1;94m973 | [0m  encounterDate         DateTime?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ClinicalRecord`: The relation field `createdBy` on model `ClinicalRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:977[0m
[1;94m   | [0m
[1;94m976 | [0m  createdById           Int?
[1;94m977 | [0m  [1;91mcreatedBy             User?               @relation("ClinicalRecordCreatedBy", fields: [createdById], references: [id])[0m
[1;94m978 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ClinicalRecord`: The relation field `updatedBy` on model `ClinicalRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:979[0m
[1;94m   | [0m
[1;94m978 | [0m  updatedById           Int?
[1;94m979 | [0m  [1;91mupdatedBy             User?               @relation("ClinicalRecordUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m980 | [0m  reviewedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reviewedBy` in model `ClinicalRecord`: The relation field `reviewedBy` on model `ClinicalRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:981[0m
[1;94m   | [0m
[1;94m980 | [0m  reviewedById          Int?
[1;94m981 | [0m  [1;91mreviewedBy            User?               @relation("ClinicalRecordReviewedBy", fields: [reviewedById], references: [id])[0m
[1;94m982 | [0m  auditLogs             AuditLog[]          @relation("ClinicalRecordAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalRecord`: The relation field `auditLogs` on model `ClinicalRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:982[0m
[1;94m   | [0m
[1;94m981 | [0m  reviewedBy            User?               @relation("ClinicalRecordReviewedBy", fields: [reviewedById], references: [id])
[1;94m982 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClinicalRecordAuditLogs")[0m
[1;94m983 | [0m  clinicalDocuments     ClinicalDocument[]  @relation("ClinicalRecordDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `ClinicalDocument`: The relation field `uploadedBy` on model `ClinicalDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1000[0m
[1;94m   | [0m
[1;94m999 | [0m  uploadedById          Int?
[1;94m1000 | [0m  [1;91muploadedBy            User?               @relation("ClinicalDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m1001 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalDocument`: The relation field `auditLogs` on model `ClinicalDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1003[0m
[1;94m   | [0m
[1;94m1002 | [0m  updatedAt             DateTime            @updatedAt
[1;94m1003 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClinicalDocumentAuditLogs")[0m
[1;94m1004 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ClinicalNotification`: The relation field `recipient` on model `ClinicalNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1015[0m
[1;94m   | [0m
[1;94m1014 | [0m  recipientId           Int?
[1;94m1015 | [0m  [1;91mrecipient             User?               @relation("ClinicalNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m1016 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1056[0m
[1;94m   | [0m
[1;94m1055 | [0m  clinicalRecordId      Int?
[1;94m1056 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1057 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:960[0m
[1;94m   | [0m
[1;94m959 | [0m  laboratoryId          Int?
[1;94m960 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m961 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1056[0m
[1;94m   | [0m
[1;94m1055 | [0m  clinicalRecordId      Int?
[1;94m1056 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1057 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:960[0m
[1;94m   | [0m
[1;94m959 | [0m  laboratoryId          Int?
[1;94m960 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m961 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `clinicalRecordId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1056[0m
[1;94m   | [0m
[1;94m1055 | [0m  clinicalRecordId      Int?
[1;94m1056 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1057 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Laboratory`: The relation field `billing` on model `Laboratory` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1071[0m
[1;94m   | [0m
[1;94m1070 | [0m  billingId             Int?
[1;94m1071 | [0m  [1;91mbilling               Billing?            @relation("LaboratoryBilling", fields: [billingId], references: [id])[0m
[1;94m1072 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1073[0m
[1;94m   | [0m
[1;94m1072 | [0m  claimId               Int?
[1;94m1073 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1074 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3225[0m
[1;94m   | [0m
[1;94m3224 | [0m  laboratoryId          Int?
[1;94m3225 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3226 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1073[0m
[1;94m   | [0m
[1;94m1072 | [0m  claimId               Int?
[1;94m1073 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1074 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3225[0m
[1;94m   | [0m
[1;94m3224 | [0m  laboratoryId          Int?
[1;94m3225 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3226 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `claimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1073[0m
[1;94m   | [0m
[1;94m1072 | [0m  claimId               Int?
[1;94m1073 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1074 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `Laboratory`: The relation field `performedBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1076[0m
[1;94m   | [0m
[1;94m1075 | [0m  performedById         Int?
[1;94m1076 | [0m  [1;91mperformedBy           User?               @relation("PerformedBy", fields: [performedById], references: [id])[0m
[1;94m1077 | [0m  reviewedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reviewedBy` in model `Laboratory`: The relation field `reviewedBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1078[0m
[1;94m   | [0m
[1;94m1077 | [0m  reviewedById          Int?
[1;94m1078 | [0m  [1;91mreviewedBy            User?               @relation("ReviewedBy", fields: [reviewedById], references: [id])[0m
[1;94m1079 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Laboratory`: The relation field `createdBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1081[0m
[1;94m   | [0m
[1;94m1080 | [0m  createdById           Int?
[1;94m1081 | [0m  [1;91mcreatedBy             User?               @relation("LaboratoryCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1082 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Laboratory`: The relation field `updatedBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1083[0m
[1;94m   | [0m
[1;94m1082 | [0m  updatedById           Int?
[1;94m1083 | [0m  [1;91mupdatedBy             User?               @relation("LaboratoryUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1084 | [0m  auditLogs             AuditLog[]          @relation("LaboratoryAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Laboratory`: The relation field `auditLogs` on model `Laboratory` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1084[0m
[1;94m   | [0m
[1;94m1083 | [0m  updatedBy             User?               @relation("LaboratoryUpdatedBy", fields: [updatedById], references: [id])
[1;94m1084 | [0m  [1;91mauditLogs             AuditLog[]          @relation("LaboratoryAuditLogs")[0m
[1;94m1085 | [0m  labDocuments          LabDocument[]       @relation("LaboratoryDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `LabDocument`: The relation field `uploadedBy` on model `LabDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1103[0m
[1;94m   | [0m
[1;94m1102 | [0m  uploadedById          Int?
[1;94m1103 | [0m  [1;91muploadedBy            User?               @relation("LabDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m1104 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `LabDocument`: The relation field `auditLogs` on model `LabDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1106[0m
[1;94m   | [0m
[1;94m1105 | [0m  updatedAt             DateTime            @updatedAt
[1;94m1106 | [0m  [1;91mauditLogs             AuditLog[]          @relation("LabDocumentAuditLogs")[0m
[1;94m1107 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `LabNotification`: The relation field `recipient` on model `LabNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1118[0m
[1;94m   | [0m
[1;94m1117 | [0m  recipientId           Int?
[1;94m1118 | [0m  [1;91mrecipient             User?               @relation("LabNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m1119 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Radiology`: The relation field `patient` on model `Radiology` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1159[0m
[1;94m   | [0m
[1;94m1158 | [0m  patientId           Int?
[1;94m1159 | [0m  [1;91mpatient             Patient?              @relation("PatientRadiology", fields: [patientId], references: [id])[0m
[1;94m1160 | [0m  appointmentId       Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `emergency` in model `Radiology`: The relation field `emergency` on model `Radiology` is missing an opposite relation field on the model `Emergency`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1163[0m
[1;94m   | [0m
[1;94m1162 | [0m  emergencyId         Int?
[1;94m1163 | [0m  [1;91memergency           Emergency?            @relation("RadiologyEmergency", fields: [emergencyId], references: [id])[0m
[1;94m1164 | [0m  invoiceId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1165[0m
[1;94m   | [0m
[1;94m1164 | [0m  invoiceId           Int?
[1;94m1165 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1166 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2690[0m
[1;94m   | [0m
[1;94m2689 | [0m  radiologyId           Int?
[1;94m2690 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2691 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1165[0m
[1;94m   | [0m
[1;94m1164 | [0m  invoiceId           Int?
[1;94m1165 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1166 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2690[0m
[1;94m   | [0m
[1;94m2689 | [0m  radiologyId           Int?
[1;94m2690 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2691 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1165[0m
[1;94m   | [0m
[1;94m1164 | [0m  invoiceId           Int?
[1;94m1165 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1166 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1179[0m
[1;94m   | [0m
[1;94m1178 | [0m  maternityId         Int?
[1;94m1179 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1180 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2022[0m
[1;94m   | [0m
[1;94m2021 | [0m  radiologyId             Int?
[1;94m2022 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2023 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1179[0m
[1;94m   | [0m
[1;94m1178 | [0m  maternityId         Int?
[1;94m1179 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1180 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2022[0m
[1;94m   | [0m
[1;94m2021 | [0m  radiologyId             Int?
[1;94m2022 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2023 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `maternityId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1179[0m
[1;94m   | [0m
[1;94m1178 | [0m  maternityId         Int?
[1;94m1179 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1180 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `RadiologyTest`: The relation field `clinicalRecord` on model `RadiologyTest` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1207[0m
[1;94m   | [0m
[1;94m1206 | [0m  clinicalRecordId    Int?
[1;94m1207 | [0m  [1;91mclinicalRecord      ClinicalRecord?       @relation("ClinicalRecordRadiologyTests", fields: [clinicalRecordId], references: [id])[0m
[1;94m1208 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `RadiologyTest`: The relation field `medicalRecord` on model `RadiologyTest` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1209[0m
[1;94m   | [0m
[1;94m1208 | [0m  medicalRecordId     Int?
[1;94m1209 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("RadiologyTestMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m1210 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `RadiologyTest`: The relation field `billing` on model `RadiologyTest` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1223[0m
[1;94m   | [0m
[1;94m1222 | [0m  billingId           Int?
[1;94m1223 | [0m  [1;91mbilling             Billing?              @relation("RadiologyTestBilling", fields: [billingId], references: [id])[0m
[1;94m1224 | [0m  claimId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `RadiologyTest`: The relation field `claim` on model `RadiologyTest` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1225[0m
[1;94m   | [0m
[1;94m1224 | [0m  claimId             Int?
[1;94m1225 | [0m  [1;91mclaim               Claim?                @relation("RadiologyTestClaim", fields: [claimId], references: [id])[0m
[1;94m1226 | [0m  nhifClaimId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `RadiologyTest`: The relation field `nhifClaim` on model `RadiologyTest` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1227[0m
[1;94m   | [0m
[1;94m1226 | [0m  nhifClaimId         Int?
[1;94m1227 | [0m  [1;91mnhifClaim           NhifClaim?            @relation("RadiologyTestNhifClaim", fields: [nhifClaimId], references: [id])[0m
[1;94m1228 | [0m  testCode            String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `RadiologyEquipment`: The relation field `clinicalSetting` on model `RadiologyEquipment` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1259[0m
[1;94m   | [0m
[1;94m1258 | [0m  clinicalSettingId   Int?
[1;94m1259 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("RadiologyEquipmentClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m1260 | [0m  location            String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `fixedAsset` in model `RadiologyEquipment`: The relation field `fixedAsset` on model `RadiologyEquipment` is missing an opposite relation field on the model `FixedAsset`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1273[0m
[1;94m   | [0m
[1;94m1272 | [0m  fixedAssetId        Int?
[1;94m1273 | [0m  [1;91mfixedAsset          FixedAsset?           @relation("RadiologyEquipmentFixedAsset", fields: [fixedAssetId], references: [id])[0m
[1;94m1274 | [0m  procurementId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `RadiologyEquipment`: The relation field `procurement` on model `RadiologyEquipment` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1275[0m
[1;94m   | [0m
[1;94m1274 | [0m  procurementId       Int?
[1;94m1275 | [0m  [1;91mprocurement         Procurement?          @relation("RadiologyEquipmentProcurement", fields: [procurementId], references: [id])[0m
[1;94m1276 | [0m  radiologyTests      RadiologyTest[]       @relation("RadiologyTestEquipment")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `OperationTheatre`: The relation field `clinicalSetting` on model `OperationTheatre` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1325[0m
[1;94m   | [0m
[1;94m1324 | [0m  clinicalSettingId     Int?
[1;94m1325 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m1326 | [0m  location              String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `OperationTheatre`: The relation field `cssdInstrument` on model `OperationTheatre` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1330[0m
[1;94m   | [0m
[1;94m1329 | [0m  cssdInstrumentId      Int?
[1;94m1330 | [0m  [1;91mcssdInstrument        CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])[0m
[1;94m1331 | [0m  procedures            SurgicalProcedure[]   @relation("OperationTheatreProcedures")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `OperationTheatre`: The relation field `createdBy` on model `OperationTheatre` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1333[0m
[1;94m   | [0m
[1;94m1332 | [0m  createdById           Int?
[1;94m1333 | [0m  [1;91mcreatedBy             User?                 @relation("TheatreCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1334 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `OperationTheatre`: The relation field `updatedBy` on model `OperationTheatre` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1335[0m
[1;94m   | [0m
[1;94m1334 | [0m  updatedById           Int?
[1;94m1335 | [0m  [1;91mupdatedBy             User?                 @relation("TheatreUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1336 | [0m  auditLogs             AuditLog[]            @relation("OperationTheatreAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `OperationTheatre`: The relation field `auditLogs` on model `OperationTheatre` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1336[0m
[1;94m   | [0m
[1;94m1335 | [0m  updatedBy             User?                 @relation("TheatreUpdatedBy", fields: [updatedById], references: [id])
[1;94m1336 | [0m  [1;91mauditLogs             AuditLog[]            @relation("OperationTheatreAuditLogs")[0m
[1;94m1337 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `SurgicalProcedure`: The relation field `patient` on model `SurgicalProcedure` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1351[0m
[1;94m   | [0m
[1;94m1350 | [0m  patientId             Int
[1;94m1351 | [0m  [1;91mpatient               Patient               @relation("PatientSurgicalProcedures", fields: [patientId], references: [id])[0m
[1;94m1352 | [0m  doctorId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `SurgicalProcedure`: The relation field `appointment` on model `SurgicalProcedure` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1357[0m
[1;94m   | [0m
[1;94m1356 | [0m  appointmentId         Int?                  @unique
[1;94m1357 | [0m  [1;91mappointment           Appointment?          @relation("ProcedureAppointment", fields: [appointmentId], references: [id])[0m
[1;94m1358 | [0m  admissionId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `SurgicalProcedure`: The relation field `clinicalRecord` on model `SurgicalProcedure` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1361[0m
[1;94m   | [0m
[1;94m1360 | [0m  clinicalRecordId      Int?
[1;94m1361 | [0m  [1;91mclinicalRecord        ClinicalRecord?       @relation(fields: [clinicalRecordId], references: [id])[0m
[1;94m1362 | [0m  medicalRecordId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `SurgicalProcedure`: The relation field `medicalRecord` on model `SurgicalProcedure` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1363[0m
[1;94m   | [0m
[1;94m1362 | [0m  medicalRecordId       Int?
[1;94m1363 | [0m  [1;91mmedicalRecord         MedicalRecord?        @relation("ProcedureMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m1364 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `SurgicalProcedure`: The relation field `clinicalSetting` on model `SurgicalProcedure` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1367[0m
[1;94m   | [0m
[1;94m1366 | [0m  clinicalSettingId     Int?
[1;94m1367 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m1368 | [0m  type                  ProcedureType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdRequisition` in model `SurgicalProcedure`: The relation field `cssdRequisition` on model `SurgicalProcedure` is missing an opposite relation field on the model `CSSDRequisition`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1380[0m
[1;94m   | [0m
[1;94m1379 | [0m  cssdRequisitionId     Int?
[1;94m1380 | [0m  [1;91mcssdRequisition       CSSDRequisition?      @relation(fields: [cssdRequisitionId], references: [id])[0m
[1;94m1381 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `SurgicalProcedure`: The relation field `pharmacy` on model `SurgicalProcedure` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1382[0m
[1;94m   | [0m
[1;94m1381 | [0m  pharmacyId            Int?
[1;94m1382 | [0m  [1;91mpharmacy              Pharmacy?             @relation("ProcedurePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m1383 | [0m  nursingId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `nursingId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1384[0m
[1;94m   | [0m
[1;94m1383 | [0m  nursingId             Int?
[1;94m1384 | [0m  [1;91mnursing               Nursing?              @relation("ProcedureNursing", fields: [nursingId], references: [id])[0m
[1;94m1385 | [0m  billingId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `SurgicalProcedure`: The relation field `billing` on model `SurgicalProcedure` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1386[0m
[1;94m   | [0m
[1;94m1385 | [0m  billingId             Int?
[1;94m1386 | [0m  [1;91mbilling               Billing?              @relation("ProcedureBilling", fields: [billingId], references: [id])[0m
[1;94m1387 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `claimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1388[0m
[1;94m   | [0m
[1;94m1387 | [0m  claimId               Int?
[1;94m1388 | [0m  [1;91mclaim                 Claim?                @relation("ProcedureClaim", fields: [claimId], references: [id])[0m
[1;94m1389 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `SurgicalProcedure`: The relation field `nhifClaim` on model `SurgicalProcedure` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1390[0m
[1;94m   | [0m
[1;94m1389 | [0m  nhifClaimId           Int?
[1;94m1390 | [0m  [1;91mnhifClaim             NhifClaim?            @relation("ProcedureNhifClaim", fields: [nhifClaimId], references: [id])[0m
[1;94m1391 | [0m  staffAssignments      SurgicalStaff[]       @relation("ProcedureStaffAssignments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `SurgicalProcedure`: The relation field `createdBy` on model `SurgicalProcedure` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1394[0m
[1;94m   | [0m
[1;94m1393 | [0m  createdById           Int?
[1;94m1394 | [0m  [1;91mcreatedBy             User?                 @relation("ProcedureCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1395 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `SurgicalProcedure`: The relation field `updatedBy` on model `SurgicalProcedure` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1396[0m
[1;94m   | [0m
[1;94m1395 | [0m  updatedById           Int?
[1;94m1396 | [0m  [1;91mupdatedBy             User?                 @relation("ProcedureUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1397 | [0m  auditLogs             AuditLog[]            @relation("SurgicalProcedureAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `SurgicalProcedure`: The relation field `auditLogs` on model `SurgicalProcedure` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1397[0m
[1;94m   | [0m
[1;94m1396 | [0m  updatedBy             User?                 @relation("ProcedureUpdatedBy", fields: [updatedById], references: [id])
[1;94m1397 | [0m  [1;91mauditLogs             AuditLog[]            @relation("SurgicalProcedureAuditLogs")[0m
[1;94m1398 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `SurgicalStaff`: The relation field `createdBy` on model `SurgicalStaff` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1412[0m
[1;94m   | [0m
[1;94m1411 | [0m  createdById           Int?
[1;94m1412 | [0m  [1;91mcreatedBy             User?                 @relation("StaffAssignmentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1413 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `SurgicalStaff`: The relation field `updatedBy` on model `SurgicalStaff` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1414[0m
[1;94m   | [0m
[1;94m1413 | [0m  updatedById           Int?
[1;94m1414 | [0m  [1;91mupdatedBy             User?                 @relation("StaffAssignmentUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1415 | [0m  auditLogs             AuditLog[]            @relation("SurgicalStaffAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `SurgicalStaff`: The relation field `auditLogs` on model `SurgicalStaff` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1415[0m
[1;94m   | [0m
[1;94m1414 | [0m  updatedBy             User?                 @relation("StaffAssignmentUpdatedBy", fields: [updatedById], references: [id])
[1;94m1415 | [0m  [1;91mauditLogs             AuditLog[]            @relation("SurgicalStaffAuditLogs")[0m
[1;94m1416 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `defaultRoom` on Model `ClinicalSetting` and `clinicalSetting` on Model `Room` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1461[0m
[1;94m   | [0m
[1;94m1460 | [0m  defaultRoomId         Int?                  @unique
[1;94m1461 | [0m  [1;91mdefaultRoom           Room?                 @relation("ClinicalSettingDefaultRoom", fields: [defaultRoomId], references: [id])[0m
[1;94m1462 | [0m  equipmentList         String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `defaultRoom` on Model `ClinicalSetting` and `clinicalSetting` on Model `Room` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1519[0m
[1;94m   | [0m
[1;94m1518 | [0m  clinicalSettingId     Int?                  @unique
[1;94m1519 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("ClinicalSettingDefaultRoom", fields: [clinicalSettingId], references: [id])[0m
[1;94m1520 | [0m  status                RoomStatus            @default(AVAILABLE)
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `defaultRoom` on Model `ClinicalSetting` and `clinicalSetting` on Model `Room` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1461[0m
[1;94m   | [0m
[1;94m1460 | [0m  defaultRoomId         Int?                  @unique
[1;94m1461 | [0m  [1;91mdefaultRoom           Room?                 @relation("ClinicalSettingDefaultRoom", fields: [defaultRoomId], references: [id])[0m
[1;94m1462 | [0m  equipmentList         String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `defaultRoom` on Model `ClinicalSetting` and `clinicalSetting` on Model `Room` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1519[0m
[1;94m   | [0m
[1;94m1518 | [0m  clinicalSettingId     Int?                  @unique
[1;94m1519 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("ClinicalSettingDefaultRoom", fields: [clinicalSettingId], references: [id])[0m
[1;94m1520 | [0m  status                RoomStatus            @default(AVAILABLE)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratory` in model `ClinicalSetting`: The relation field `laboratory` on model `ClinicalSetting` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1469[0m
[1;94m   | [0m
[1;94m1468 | [0m  laboratoryId          Int?                  @unique
[1;94m1469 | [0m  [1;91mlaboratory            Laboratory?           @relation("ClinicalSettingLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m1470 | [0m  radiologyId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `radiology` in model `ClinicalSetting`: The relation field `radiology` on model `ClinicalSetting` is missing an opposite relation field on the model `Radiology`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1471[0m
[1;94m   | [0m
[1;94m1470 | [0m  radiologyId           Int?                  @unique
[1;94m1471 | [0m  [1;91mradiology             Radiology?            @relation("ClinicalSettingRadiology", fields: [radiologyId], references: [id])[0m
[1;94m1472 | [0m  pharmacyId            Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `ClinicalSetting`: The relation field `pharmacy` on model `ClinicalSetting` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1473[0m
[1;94m   | [0m
[1;94m1472 | [0m  pharmacyId            Int?                  @unique
[1;94m1473 | [0m  [1;91mpharmacy              Pharmacy?             @relation("ClinicalSettingPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m1474 | [0m  operationTheatreId    Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `ClinicalSetting`: The relation field `operationTheatre` on model `ClinicalSetting` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1475[0m
[1;94m   | [0m
[1;94m1474 | [0m  operationTheatreId    Int?                  @unique
[1;94m1475 | [0m  [1;91moperationTheatre      OperationTheatre?     @relation("ClinicalSettingOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m1476 | [0m  nursingId             Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursing` in model `ClinicalSetting`: The relation field `nursing` on model `ClinicalSetting` is missing an opposite relation field on the model `Nursing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1477[0m
[1;94m   | [0m
[1;94m1476 | [0m  nursingId             Int?                  @unique
[1;94m1477 | [0m  [1;91mnursing               Nursing?              @relation("ClinicalSettingNursing", fields: [nursingId], references: [id])[0m
[1;94m1478 | [0m  cssdId                Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `cssd` on Model `ClinicalSetting` and `clinicalSetting` on Model `Cssd` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1479[0m
[1;94m   | [0m
[1;94m1478 | [0m  cssdId                Int?                  @unique
[1;94m1479 | [0m  [1;91mcssd                  Cssd?                 @relation("ClinicalSettingCssd", fields: [cssdId], references: [id])[0m
[1;94m1480 | [0m  wardId                Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `cssd` on Model `ClinicalSetting` and `clinicalSetting` on Model `Cssd` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1636[0m
[1;94m   | [0m
[1;94m1635 | [0m  clinicalSettingId   Int?                  @unique
[1;94m1636 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("ClinicalSettingCssd", fields: [clinicalSettingId], references: [id])[0m
[1;94m1637 | [0m  name                String
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `cssd` on Model `ClinicalSetting` and `clinicalSetting` on Model `Cssd` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1479[0m
[1;94m   | [0m
[1;94m1478 | [0m  cssdId                Int?                  @unique
[1;94m1479 | [0m  [1;91mcssd                  Cssd?                 @relation("ClinicalSettingCssd", fields: [cssdId], references: [id])[0m
[1;94m1480 | [0m  wardId                Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `cssd` on Model `ClinicalSetting` and `clinicalSetting` on Model `Cssd` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1636[0m
[1;94m   | [0m
[1;94m1635 | [0m  clinicalSettingId   Int?                  @unique
[1;94m1636 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("ClinicalSettingCssd", fields: [clinicalSettingId], references: [id])[0m
[1;94m1637 | [0m  name                String
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ClinicalSetting`: The relation field `createdBy` on model `ClinicalSetting` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1487[0m
[1;94m   | [0m
[1;94m1486 | [0m  createdById           Int?                  @unique
[1;94m1487 | [0m  [1;91mcreatedBy             User?                 @relation("ClinicalSettingCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1488 | [0m  updatedById           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ClinicalSetting`: The relation field `updatedBy` on model `ClinicalSetting` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1489[0m
[1;94m   | [0m
[1;94m1488 | [0m  updatedById           Int?                  @unique
[1;94m1489 | [0m  [1;91mupdatedBy             User?                 @relation("ClinicalSettingUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1490 | [0m  auditLogs             AuditLog[]            @relation("ClinicalSettingAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalSetting`: The relation field `auditLogs` on model `ClinicalSetting` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1490[0m
[1;94m   | [0m
[1;94m1489 | [0m  updatedBy             User?                 @relation("ClinicalSettingUpdatedBy", fields: [updatedById], references: [id])
[1;94m1490 | [0m  [1;91mauditLogs             AuditLog[]            @relation("ClinicalSettingAuditLogs")[0m
[1;94m1491 | [0m  clinicalSettingDocuments ClinicalSettingDocument[] @relation("ClinicalSettingDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursingCares` in model `ClinicalSetting`: The relation field `nursingCares` on model `ClinicalSetting` is missing an opposite relation field on the model `NursingCare`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1508[0m
[1;94m   | [0m
[1;94m1507 | [0m  cssdRequisitions      CSSDRequisition[]     @relation("ClinicalSettingCSSDRequisitions")
[1;94m1508 | [0m  [1;91mnursingCares          NursingCare[]         @relation("NursingCareClinicalSettings")[0m
[1;94m1509 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Room` and `defaultRoom` on Model `ClinicalSetting` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1519[0m
[1;94m   | [0m
[1;94m1518 | [0m  clinicalSettingId     Int?                  @unique
[1;94m1519 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("ClinicalSettingDefaultRoom", fields: [clinicalSettingId], references: [id])[0m
[1;94m1520 | [0m  status                RoomStatus            @default(AVAILABLE)
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Room` and `defaultRoom` on Model `ClinicalSetting` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1461[0m
[1;94m   | [0m
[1;94m1460 | [0m  defaultRoomId         Int?                  @unique
[1;94m1461 | [0m  [1;91mdefaultRoom           Room?                 @relation("ClinicalSettingDefaultRoom", fields: [defaultRoomId], references: [id])[0m
[1;94m1462 | [0m  equipmentList         String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Room` and `defaultRoom` on Model `ClinicalSetting` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1519[0m
[1;94m   | [0m
[1;94m1518 | [0m  clinicalSettingId     Int?                  @unique
[1;94m1519 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("ClinicalSettingDefaultRoom", fields: [clinicalSettingId], references: [id])[0m
[1;94m1520 | [0m  status                RoomStatus            @default(AVAILABLE)
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Room` and `defaultRoom` on Model `ClinicalSetting` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1461[0m
[1;94m   | [0m
[1;94m1460 | [0m  defaultRoomId         Int?                  @unique
[1;94m1461 | [0m  [1;91mdefaultRoom           Room?                 @relation("ClinicalSettingDefaultRoom", fields: [defaultRoomId], references: [id])[0m
[1;94m1462 | [0m  equipmentList         String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Room`: The relation field `createdBy` on model `Room` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1528[0m
[1;94m   | [0m
[1;94m1527 | [0m  createdById           Int?                  @unique
[1;94m1528 | [0m  [1;91mcreatedBy             User?                 @relation("RoomCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1529 | [0m  updatedById           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Room`: The relation field `updatedBy` on model `Room` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1530[0m
[1;94m   | [0m
[1;94m1529 | [0m  updatedById           Int?                  @unique
[1;94m1530 | [0m  [1;91mupdatedBy             User?                 @relation("RoomUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1531 | [0m  auditLogs             AuditLog[]            @relation("RoomAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Room`: The relation field `auditLogs` on model `Room` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1531[0m
[1;94m   | [0m
[1;94m1530 | [0m  updatedBy             User?                 @relation("RoomUpdatedBy", fields: [updatedById], references: [id])
[1;94m1531 | [0m  [1;91mauditLogs             AuditLog[]            @relation("RoomAuditLogs")[0m
[1;94m1532 | [0m  roomSchedules         RoomSchedule[]        @relation("RoomSchedules")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `RoomSchedule`: The relation field `appointment` on model `RoomSchedule` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1545[0m
[1;94m   | [0m
[1;94m1544 | [0m  appointmentId         Int?                  @unique
[1;94m1545 | [0m  [1;91mappointment           Appointment?          @relation("RoomScheduleAppointment", fields: [appointmentId], references: [id])[0m
[1;94m1546 | [0m  status                String                @default("AVAILABLE")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `RoomSchedule`: The relation field `createdBy` on model `RoomSchedule` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1549[0m
[1;94m   | [0m
[1;94m1548 | [0m  createdById           Int?                  @unique
[1;94m1549 | [0m  [1;91mcreatedBy             User?                 @relation("RoomScheduleCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1550 | [0m  updatedById           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `RoomSchedule`: The relation field `updatedBy` on model `RoomSchedule` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1551[0m
[1;94m   | [0m
[1;94m1550 | [0m  updatedById           Int?                  @unique
[1;94m1551 | [0m  [1;91mupdatedBy             User?                 @relation("RoomScheduleUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1552 | [0m  auditLogs             AuditLog[]            @relation("RoomScheduleAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `RoomSchedule`: The relation field `auditLogs` on model `RoomSchedule` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1552[0m
[1;94m   | [0m
[1;94m1551 | [0m  updatedBy             User?                 @relation("RoomScheduleUpdatedBy", fields: [updatedById], references: [id])
[1;94m1552 | [0m  [1;91mauditLogs             AuditLog[]            @relation("RoomScheduleAuditLogs")[0m
[1;94m1553 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `ClinicalSettingDocument`: The relation field `uploadedBy` on model `ClinicalSettingDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1566[0m
[1;94m   | [0m
[1;94m1565 | [0m  uploadedById          Int?                  @unique
[1;94m1566 | [0m  [1;91muploadedBy            User?                 @relation("ClinicalSettingDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m1567 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalSettingDocument`: The relation field `auditLogs` on model `ClinicalSettingDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1569[0m
[1;94m   | [0m
[1;94m1568 | [0m  updatedAt             DateTime              @updatedAt
[1;94m1569 | [0m  [1;91mauditLogs             AuditLog[]            @relation("ClinicalSettingDocumentAuditLogs")[0m
[1;94m1570 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ClinicalSettingNotification`: The relation field `recipient` on model `ClinicalSettingNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1581[0m
[1;94m   | [0m
[1;94m1580 | [0m  recipientId           Int?                  @unique
[1;94m1581 | [0m  [1;91mrecipient             User?                 @relation("ClinicalSettingNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m1582 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Cssd`: The relation field `department` on model `Cssd` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1634[0m
[1;94m   | [0m
[1;94m1633 | [0m  departmentId        Int?
[1;94m1634 | [0m  [1;91mdepartment          Department?           @relation("DepartmentCssd", fields: [departmentId], references: [id])[0m
[1;94m1635 | [0m  clinicalSettingId   Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Cssd` and `cssd` on Model `ClinicalSetting` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1636[0m
[1;94m   | [0m
[1;94m1635 | [0m  clinicalSettingId   Int?                  @unique
[1;94m1636 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("ClinicalSettingCssd", fields: [clinicalSettingId], references: [id])[0m
[1;94m1637 | [0m  name                String
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Cssd` and `cssd` on Model `ClinicalSetting` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1479[0m
[1;94m   | [0m
[1;94m1478 | [0m  cssdId                Int?                  @unique
[1;94m1479 | [0m  [1;91mcssd                  Cssd?                 @relation("ClinicalSettingCssd", fields: [cssdId], references: [id])[0m
[1;94m1480 | [0m  wardId                Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Cssd` and `cssd` on Model `ClinicalSetting` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1636[0m
[1;94m   | [0m
[1;94m1635 | [0m  clinicalSettingId   Int?                  @unique
[1;94m1636 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("ClinicalSettingCssd", fields: [clinicalSettingId], references: [id])[0m
[1;94m1637 | [0m  name                String
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Cssd` and `cssd` on Model `ClinicalSetting` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1479[0m
[1;94m   | [0m
[1;94m1478 | [0m  cssdId                Int?                  @unique
[1;94m1479 | [0m  [1;91mcssd                  Cssd?                 @relation("ClinicalSettingCssd", fields: [cssdId], references: [id])[0m
[1;94m1480 | [0m  wardId                Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Cssd`: The relation field `createdBy` on model `Cssd` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1647[0m
[1;94m   | [0m
[1;94m1646 | [0m  createdById         Int?                  @unique
[1;94m1647 | [0m  [1;91mcreatedBy           User?                 @relation("CssdCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1648 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Cssd`: The relation field `updatedBy` on model `Cssd` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1649[0m
[1;94m   | [0m
[1;94m1648 | [0m  updatedById         Int?                  @unique
[1;94m1649 | [0m  [1;91mupdatedBy           User?                 @relation("CssdUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1650 | [0m  auditLogs           AuditLog[]            @relation("CssdAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Cssd`: The relation field `auditLogs` on model `Cssd` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1650[0m
[1;94m   | [0m
[1;94m1649 | [0m  updatedBy           User?                 @relation("CssdUpdatedBy", fields: [updatedById], references: [id])
[1;94m1650 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CssdAuditLogs")[0m
[1;94m1651 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `CSSDInstrument`: The relation field `department` on model `CSSDInstrument` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1675[0m
[1;94m   | [0m
[1;94m1674 | [0m  departmentId        Int?
[1;94m1675 | [0m  [1;91mdepartment          Department?           @relation("DepartmentCSSDInstruments", fields: [departmentId], references: [id])[0m
[1;94m1676 | [0m  operationTheatreId  Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `CSSDInstrument`: The relation field `operationTheatre` on model `CSSDInstrument` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1677[0m
[1;94m   | [0m
[1;94m1676 | [0m  operationTheatreId  Int?                  @unique
[1;94m1677 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("OperationTheatreCSSDInstruments", fields: [operationTheatreId], references: [id])[0m
[1;94m1678 | [0m  clinicalSettingId   Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `CSSDInstrument`: The relation field `procurement` on model `CSSDInstrument` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1681[0m
[1;94m   | [0m
[1;94m1680 | [0m  procurementId       Int?                  @unique
[1;94m1681 | [0m  [1;91mprocurement         Procurement?          @relation("CSSDInstrumentProcurement", fields: [procurementId], references: [id])[0m
[1;94m1682 | [0m  fixedAssetId        Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `CSSDInstrument`: The relation field `createdBy` on model `CSSDInstrument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1689[0m
[1;94m   | [0m
[1;94m1688 | [0m  createdById         Int?                  @unique
[1;94m1689 | [0m  [1;91mcreatedBy           User?                 @relation("InstrumentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1690 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `CSSDInstrument`: The relation field `updatedBy` on model `CSSDInstrument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1691[0m
[1;94m   | [0m
[1;94m1690 | [0m  updatedById         Int?                  @unique
[1;94m1691 | [0m  [1;91mupdatedBy           User?                 @relation("InstrumentUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1692 | [0m  auditLogs           AuditLog[]            @relation("CSSDInstrumentAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDInstrument`: The relation field `auditLogs` on model `CSSDInstrument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1692[0m
[1;94m   | [0m
[1;94m1691 | [0m  updatedBy           User?                 @relation("InstrumentUpdatedBy", fields: [updatedById], references: [id])
[1;94m1692 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDInstrumentAuditLogs")[0m
[1;94m1693 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `CSSDRecord`: The relation field `operationTheatre` on model `CSSDRecord` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1715[0m
[1;94m   | [0m
[1;94m1714 | [0m  operationTheatreId  Int?                  @unique
[1;94m1715 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("OperationTheatreCSSDRecords", fields: [operationTheatreId], references: [id])[0m
[1;94m1716 | [0m  clinicalSettingId   Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `CSSDRecord`: The relation field `createdBy` on model `CSSDRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1719[0m
[1;94m   | [0m
[1;94m1718 | [0m  createdById         Int?                  @unique
[1;94m1719 | [0m  [1;91mcreatedBy           User?                 @relation("RecordCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1720 | [0m  qualityCheckedById  Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `qualityCheckedBy` in model `CSSDRecord`: The relation field `qualityCheckedBy` on model `CSSDRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1721[0m
[1;94m   | [0m
[1;94m1720 | [0m  qualityCheckedById  Int?                  @unique
[1;94m1721 | [0m  [1;91mqualityCheckedBy    User?                 @relation("RecordQualityCheckedBy", fields: [qualityCheckedById], references: [id])[0m
[1;94m1722 | [0m  logs                CSSDLog[]             @relation("RecordLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDRecord`: The relation field `auditLogs` on model `CSSDRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1723[0m
[1;94m   | [0m
[1;94m1722 | [0m  logs                CSSDLog[]             @relation("RecordLogs")
[1;94m1723 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDRecordAuditLogs")[0m
[1;94m1724 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `CSSDRequisition`: The relation field `operationTheatre` on model `CSSDRequisition` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1738[0m
[1;94m   | [0m
[1;94m1737 | [0m  operationTheatreId  Int?                  @unique
[1;94m1738 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("OperationTheatreCSSDRequisitions", fields: [operationTheatreId], references: [id])[0m
[1;94m1739 | [0m  requestedById       Int
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `CSSDRequisition`: The relation field `approvedBy` on model `CSSDRequisition` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1742[0m
[1;94m   | [0m
[1;94m1741 | [0m  approvedById        Int?                  @unique
[1;94m1742 | [0m  [1;91mapprovedBy          User?                 @relation("RequisitionApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m1743 | [0m  quantity            Int
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `CSSDRequisition`: The relation field `procurement` on model `CSSDRequisition` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1752[0m
[1;94m   | [0m
[1;94m1751 | [0m  procurementId       Int?                  @unique
[1;94m1752 | [0m  [1;91mprocurement         Procurement?          @relation("CSSDRequisitionProcurement", fields: [procurementId], references: [id])[0m
[1;94m1753 | [0m  logs                CSSDLog[]             @relation("RequisitionLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDRequisition`: The relation field `auditLogs` on model `CSSDRequisition` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1754[0m
[1;94m   | [0m
[1;94m1753 | [0m  logs                CSSDLog[]             @relation("RequisitionLogs")
[1;94m1754 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDRequisitionAuditLogs")[0m
[1;94m1755 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `CSSDMaintenance`: The relation field `performedBy` on model `CSSDMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1770[0m
[1;94m   | [0m
[1;94m1769 | [0m  performedById       Int?                  @unique
[1;94m1770 | [0m  [1;91mperformedBy         User?                 @relation("MaintenancePerformedBy", fields: [performedById], references: [id])[0m
[1;94m1771 | [0m  cost                Float?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `CSSDMaintenance`: The relation field `procurement` on model `CSSDMaintenance` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1775[0m
[1;94m   | [0m
[1;94m1774 | [0m  procurementId       Int?                  @unique
[1;94m1775 | [0m  [1;91mprocurement         Procurement?          @relation("CSSDMaintenanceProcurement", fields: [procurementId], references: [id])[0m
[1;94m1776 | [0m  logs                CSSDLog[]             @relation("MaintenanceLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDMaintenance`: The relation field `auditLogs` on model `CSSDMaintenance` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1777[0m
[1;94m   | [0m
[1;94m1776 | [0m  logs                CSSDLog[]             @relation("MaintenanceLogs")
[1;94m1777 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDMaintenanceAuditLogs")[0m
[1;94m1778 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssd` in model `CSSDLog`: The relation field `cssd` on model `CSSDLog` is missing an opposite relation field on the model `Cssd`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1786[0m
[1;94m   | [0m
[1;94m1785 | [0m  cssdId              Int?
[1;94m1786 | [0m  [1;91mcssd                Cssd?                 @relation("CssdLogs", fields: [cssdId], references: [id])[0m
[1;94m1787 | [0m  instrumentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Nursing`: The relation field `patient` on model `Nursing` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1841[0m
[1;94m   | [0m
[1;94m1840 | [0m  patientId           Int?
[1;94m1841 | [0m  [1;91mpatient             Patient?              @relation("PatientNursingRecords", fields: [patientId], references: [id])[0m
[1;94m1842 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Nursing`: The relation field `clinicalRecord` on model `Nursing` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1847[0m
[1;94m   | [0m
[1;94m1846 | [0m  clinicalRecordId    Int?
[1;94m1847 | [0m  [1;91mclinicalRecord      ClinicalRecord?       @relation(fields: [clinicalRecordId], references: [id])[0m
[1;94m1848 | [0m  admissionId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `ward` in model `Nursing`: The relation field `ward` on model `Nursing` is missing an opposite relation field on the model `Ward`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1851[0m
[1;94m   | [0m
[1;94m1850 | [0m  wardId              Int?
[1;94m1851 | [0m  [1;91mward                Ward?                 @relation("WardNursing", fields: [wardId], references: [id])[0m
[1;94m1852 | [0m  clinicalSettingId   Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Nursing`: The relation field `clinicalSetting` on model `Nursing` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1853[0m
[1;94m   | [0m
[1;94m1852 | [0m  clinicalSettingId   Int?
[1;94m1853 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m1854 | [0m  status              NursingStatus         @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Nursing`: The relation field `billing` on model `Nursing` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1860[0m
[1;94m   | [0m
[1;94m1859 | [0m  billingId           Int?
[1;94m1860 | [0m  [1;91mbilling             Billing?              @relation("NursingBilling", fields: [billingId], references: [id])[0m
[1;94m1861 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Nursing`: The relation field `createdBy` on model `Nursing` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1863[0m
[1;94m   | [0m
[1;94m1862 | [0m  createdById         Int?
[1;94m1863 | [0m  [1;91mcreatedBy           User?                 @relation("NursingCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1864 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Nursing`: The relation field `updatedBy` on model `Nursing` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1865[0m
[1;94m   | [0m
[1;94m1864 | [0m  updatedById         Int?
[1;94m1865 | [0m  [1;91mupdatedBy           User?                 @relation("NursingUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1866 | [0m  auditLogs           AuditLog[]            @relation("NursingAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Nursing`: The relation field `auditLogs` on model `Nursing` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1866[0m
[1;94m   | [0m
[1;94m1865 | [0m  updatedBy           User?                 @relation("NursingUpdatedBy", fields: [updatedById], references: [id])
[1;94m1866 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingAuditLogs")[0m
[1;94m1867 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `NursingCare`: The relation field `patient` on model `NursingCare` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1876[0m
[1;94m   | [0m
[1;94m1875 | [0m  patientId           Int
[1;94m1876 | [0m  [1;91mpatient             Patient               @relation("PatientNursingCare", fields: [patientId], references: [id])[0m
[1;94m1877 | [0m  nurseId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `NursingCare`: The relation field `clinicalRecord` on model `NursingCare` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1882[0m
[1;94m   | [0m
[1;94m1881 | [0m  clinicalRecordId    Int?
[1;94m1882 | [0m  [1;91mclinicalRecord      ClinicalRecord?       @relation(fields: [clinicalRecordId], references: [id])[0m
[1;94m1883 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `NursingCare`: The relation field `medicalRecord` on model `NursingCare` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1884[0m
[1;94m   | [0m
[1;94m1883 | [0m  medicalRecordId     Int?
[1;94m1884 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("NursingCareMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m1885 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `NursingCare`: The relation field `clinicalSetting` on model `NursingCare` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1890[0m
[1;94m   | [0m
[1;94m1889 | [0m  clinicalSettingId   Int?
[1;94m1890 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m1891 | [0m  type                NursingCareType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `prescription` in model `NursingCare`: The relation field `prescription` on model `NursingCare` is missing an opposite relation field on the model `Prescription`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1902[0m
[1;94m   | [0m
[1;94m1901 | [0m  prescriptionId      Int?
[1;94m1902 | [0m  [1;91mprescription        Prescription?         @relation(fields: [prescriptionId], references: [id])[0m
[1;94m1903 | [0m  pharmacyId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `NursingCare`: The relation field `billing` on model `NursingCare` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1906[0m
[1;94m   | [0m
[1;94m1905 | [0m  billingId           Int?
[1;94m1906 | [0m  [1;91mbilling             Billing?              @relation("NursingCareBilling", fields: [billingId], references: [id])[0m
[1;94m1907 | [0m  nursing             Nursing[]             @relation("NursingCareRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NursingCare`: The relation field `createdBy` on model `NursingCare` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1911[0m
[1;94m   | [0m
[1;94m1910 | [0m  createdById         Int?
[1;94m1911 | [0m  [1;91mcreatedBy           User?                 @relation("NursingCareCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1912 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NursingCare`: The relation field `updatedBy` on model `NursingCare` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1913[0m
[1;94m   | [0m
[1;94m1912 | [0m  updatedById         Int?
[1;94m1913 | [0m  [1;91mupdatedBy           User?                 @relation("NursingCareUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1914 | [0m  auditLogs           AuditLog[]            @relation("NursingCareAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NursingCare`: The relation field `auditLogs` on model `NursingCare` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1914[0m
[1;94m   | [0m
[1;94m1913 | [0m  updatedBy           User?                 @relation("NursingCareUpdatedBy", fields: [updatedById], references: [id])
[1;94m1914 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingCareAuditLogs")[0m
[1;94m1915 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `prescription` in model `NursingTask`: The relation field `prescription` on model `NursingTask` is missing an opposite relation field on the model `Prescription`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1934[0m
[1;94m   | [0m
[1;94m1933 | [0m  prescriptionId      Int?
[1;94m1934 | [0m  [1;91mprescription        Prescription?         @relation(fields: [prescriptionId], references: [id])[0m
[1;94m1935 | [0m  shiftId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NursingTask`: The relation field `createdBy` on model `NursingTask` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1938[0m
[1;94m   | [0m
[1;94m1937 | [0m  createdById         Int?
[1;94m1938 | [0m  [1;91mcreatedBy           User?                 @relation("TaskCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1939 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NursingTask`: The relation field `updatedBy` on model `NursingTask` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1940[0m
[1;94m   | [0m
[1;94m1939 | [0m  updatedById         Int?
[1;94m1940 | [0m  [1;91mupdatedBy           User?                 @relation("TaskUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1941 | [0m  auditLogs           AuditLog[]            @relation("NursingTaskAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NursingTask`: The relation field `auditLogs` on model `NursingTask` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1941[0m
[1;94m   | [0m
[1;94m1940 | [0m  updatedBy           User?                 @relation("TaskUpdatedBy", fields: [updatedById], references: [id])
[1;94m1941 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingTaskAuditLogs")[0m
[1;94m1942 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NursingShift`: The relation field `createdBy` on model `NursingShift` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1962[0m
[1;94m   | [0m
[1;94m1961 | [0m  createdById         Int?
[1;94m1962 | [0m  [1;91mcreatedBy           User?                 @relation("ShiftCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1963 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NursingShift`: The relation field `updatedBy` on model `NursingShift` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1964[0m
[1;94m   | [0m
[1;94m1963 | [0m  updatedById         Int?
[1;94m1964 | [0m  [1;91mupdatedBy           User?                 @relation("ShiftUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1965 | [0m  auditLogs           AuditLog[]            @relation("NursingShiftAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NursingShift`: The relation field `auditLogs` on model `NursingShift` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1965[0m
[1;94m   | [0m
[1;94m1964 | [0m  updatedBy           User?                 @relation("ShiftUpdatedBy", fields: [updatedById], references: [id])
[1;94m1965 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingShiftAuditLogs")[0m
[1;94m1966 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Maternity`: The relation field `patient` on model `Maternity` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1992[0m
[1;94m   | [0m
[1;94m1991 | [0m  patientId               Int
[1;94m1992 | [0m  [1;91mpatient                 Patient                 @relation("PatientMaternityRecords", fields: [patientId], references: [id])[0m
[1;94m1993 | [0m  doctorId                Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Maternity`: The relation field `admission` on model `Maternity` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1996[0m
[1;94m   | [0m
[1;94m1995 | [0m  admissionId             Int?
[1;94m1996 | [0m  [1;91madmission               Admission?              @relation("AdmissionMaternity", fields: [admissionId], references: [id])[0m
[1;94m1997 | [0m  departmentId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Maternity`: The relation field `clinicalSetting` on model `Maternity` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2000[0m
[1;94m   | [0m
[1;94m1999 | [0m  clinicalSettingId       Int?
[1;94m2000 | [0m  [1;91mclinicalSetting         ClinicalSetting?        @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m2001 | [0m  status                  MaternityStatus         @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Maternity`: The relation field `clinicalRecord` on model `Maternity` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2010[0m
[1;94m   | [0m
[1;94m2009 | [0m  clinicalRecordId        Int?
[1;94m2010 | [0m  [1;91mclinicalRecord          ClinicalRecord?         @relation(fields: [clinicalRecordId], references: [id])[0m
[1;94m2011 | [0m  billingId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Maternity`: The relation field `billing` on model `Maternity` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2012[0m
[1;94m   | [0m
[1;94m2011 | [0m  billingId               Int?
[1;94m2012 | [0m  [1;91mbilling                 Billing?                @relation(fields: [billingId], references: [id])[0m
[1;94m2013 | [0m  claimId                 Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `Maternity`: The relation field `claim` on model `Maternity` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2014[0m
[1;94m   | [0m
[1;94m2013 | [0m  claimId                 Int?
[1;94m2014 | [0m  [1;91mclaim                   Claim?                  @relation(fields: [claimId], references: [id])[0m
[1;94m2015 | [0m  wardId                  Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `ward` in model `Maternity`: The relation field `ward` on model `Maternity` is missing an opposite relation field on the model `Ward`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2016[0m
[1;94m   | [0m
[1;94m2015 | [0m  wardId                  Int?
[1;94m2016 | [0m  [1;91mward                    Ward?                   @relation(fields: [wardId], references: [id])[0m
[1;94m2017 | [0m  bedId                   Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `bed` in model `Maternity`: The relation field `bed` on model `Maternity` is missing an opposite relation field on the model `Bed`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2018[0m
[1;94m   | [0m
[1;94m2017 | [0m  bedId                   Int?
[1;94m2018 | [0m  [1;91mbed                     Bed?                    @relation(fields: [bedId], references: [id])[0m
[1;94m2019 | [0m  laboratoryId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratory` in model `Maternity`: The relation field `laboratory` on model `Maternity` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2020[0m
[1;94m   | [0m
[1;94m2019 | [0m  laboratoryId            Int?
[1;94m2020 | [0m  [1;91mlaboratory              Laboratory?             @relation(fields: [laboratoryId], references: [id])[0m
[1;94m2021 | [0m  radiologyId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2022[0m
[1;94m   | [0m
[1;94m2021 | [0m  radiologyId             Int?
[1;94m2022 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2023 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1179[0m
[1;94m   | [0m
[1;94m1178 | [0m  maternityId         Int?
[1;94m1179 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1180 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2022[0m
[1;94m   | [0m
[1;94m2021 | [0m  radiologyId             Int?
[1;94m2022 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2023 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1179[0m
[1;94m   | [0m
[1;94m1178 | [0m  maternityId         Int?
[1;94m1179 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1180 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `radiologyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2022[0m
[1;94m   | [0m
[1;94m2021 | [0m  radiologyId             Int?
[1;94m2022 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2023 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2024[0m
[1;94m   | [0m
[1;94m2023 | [0m  pharmacyId              Int?
[1;94m2024 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2025 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2241[0m
[1;94m   | [0m
[1;94m2240 | [0m  maternityId           Int?
[1;94m2241 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2242 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2024[0m
[1;94m   | [0m
[1;94m2023 | [0m  pharmacyId              Int?
[1;94m2024 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2025 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2241[0m
[1;94m   | [0m
[1;94m2240 | [0m  maternityId           Int?
[1;94m2241 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2242 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `pharmacyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2024[0m
[1;94m   | [0m
[1;94m2023 | [0m  pharmacyId              Int?
[1;94m2024 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2025 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `medicalRecordId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2028[0m
[1;94m   | [0m
[1;94m2027 | [0m  medicalRecordId         Int?
[1;94m2028 | [0m  [1;91mmedicalRecord           MedicalRecord?          @relation("MedicalRecordMaternity", fields: [medicalRecordId], references: [id])[0m
[1;94m2029 | [0m  notes                   String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Vaccination`: The relation field `patient` on model `Vaccination` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2108[0m
[1;94m   | [0m
[1;94m2107 | [0m  patientId           Int
[1;94m2108 | [0m  [1;91mpatient             Patient               @relation("PatientVaccinationRecords", fields: [patientId], references: [id])[0m
[1;94m2109 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `Vaccination`: The relation field `appointment` on model `Vaccination` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2114[0m
[1;94m   | [0m
[1;94m2113 | [0m  appointmentId       Int?
[1;94m2114 | [0m  [1;91mappointment         Appointment?          @relation("VaccinationAppointment", fields: [appointmentId], references: [id])[0m
[1;94m2115 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `Vaccination`: The relation field `medicalRecord` on model `Vaccination` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2116[0m
[1;94m   | [0m
[1;94m2115 | [0m  medicalRecordId     Int?
[1;94m2116 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("VaccinationMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m2117 | [0m  clinicalRecordId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Vaccination`: The relation field `clinicalRecord` on model `Vaccination` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2118[0m
[1;94m   | [0m
[1;94m2117 | [0m  clinicalRecordId    Int?
[1;94m2118 | [0m  [1;91mclinicalRecord      ClinicalRecord?       @relation("VaccinationClinicalRecord", fields: [clinicalRecordId], references: [id])[0m
[1;94m2119 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Vaccination`: The relation field `clinicalSetting` on model `Vaccination` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2122[0m
[1;94m   | [0m
[1;94m2121 | [0m  clinicalSettingId   Int?
[1;94m2122 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("VaccinationClinicalSetting", fields: [clinicalSettingId], references: [id])[0m
[1;94m2123 | [0m  vaccineId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `vaccine` in model `Vaccination`: The relation field `vaccine` on model `Vaccination` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2124[0m
[1;94m   | [0m
[1;94m2123 | [0m  vaccineId           Int?
[1;94m2124 | [0m  [1;91mvaccine             Medication?           @relation("VaccinationMedication", fields: [vaccineId], references: [id])[0m
[1;94m2125 | [0m  type                VaccineType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `Vaccination`: The relation field `nhifClaim` on model `Vaccination` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2145[0m
[1;94m   | [0m
[1;94m2144 | [0m  nhifClaimId         Int?
[1;94m2145 | [0m  [1;91mnhifClaim           NhifClaim?            @relation("VaccinationNhifClaim", fields: [nhifClaimId], references: [id])[0m
[1;94m2146 | [0m  pharmacyId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `Vaccination`: The relation field `pharmacy` on model `Vaccination` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2147[0m
[1;94m   | [0m
[1;94m2146 | [0m  pharmacyId          Int?
[1;94m2147 | [0m  [1;91mpharmacy            Pharmacy?             @relation("VaccinationPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2148 | [0m  inventoryId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `Vaccination`: The relation field `inventory` on model `Vaccination` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2149[0m
[1;94m   | [0m
[1;94m2148 | [0m  inventoryId         Int?
[1;94m2149 | [0m  [1;91minventory           Inventory?            @relation("VaccinationInventory", fields: [inventoryId], references: [id])[0m
[1;94m2150 | [0m  documents           String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `vaccinationCampaign` on Model `Vaccination` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2158[0m
[1;94m   | [0m
[1;94m2157 | [0m  updatedAt           DateTime              @updatedAt
[1;94m2158 | [0m  [1;91mvaccinationCampaign  VaccinationCampaign?  @relation("CampaignVaccinations")[0m
[1;94m2159 | [0m  vaccinationRecords  Doctor[]              @relation("DoctorVaccinationRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `vaccinationCampaign` on Model `Vaccination` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2158[0m
[1;94m   | [0m
[1;94m2157 | [0m  updatedAt           DateTime              @updatedAt
[1;94m2158 | [0m  [1;91mvaccinationCampaign  VaccinationCampaign?  @relation("CampaignVaccinations")[0m
[1;94m2159 | [0m  vaccinationRecords  Doctor[]              @relation("DoctorVaccinationRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Pharmacy`: The relation field `admission` on model `Pharmacy` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2224[0m
[1;94m   | [0m
[1;94m2223 | [0m  admissionId           Int?
[1;94m2224 | [0m  [1;91madmission             Admission?            @relation("PharmacyAdmissions", fields: [admissionId], references: [id])[0m
[1;94m2225 | [0m  prescriptionId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2228[0m
[1;94m   | [0m
[1;94m2227 | [0m  invoiceId             Int?
[1;94m2228 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2229 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2692[0m
[1;94m   | [0m
[1;94m2691 | [0m  pharmacyId            Int?
[1;94m2692 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2693 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2228[0m
[1;94m   | [0m
[1;94m2227 | [0m  invoiceId             Int?
[1;94m2228 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2229 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2692[0m
[1;94m   | [0m
[1;94m2691 | [0m  pharmacyId            Int?
[1;94m2692 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2693 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2228[0m
[1;94m   | [0m
[1;94m2227 | [0m  invoiceId             Int?
[1;94m2228 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2229 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Pharmacy`: The relation field `clinicalSetting` on model `Pharmacy` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2232[0m
[1;94m   | [0m
[1;94m2231 | [0m  clinicalSettingId     Int?
[1;94m2232 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("PharmacyClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m2233 | [0m  dispensingRecords     DispensingRecord[]    @relation("PharmacyDispensingRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `dispensingRecords` in model `Pharmacy`: The relation field `dispensingRecords` on model `Pharmacy` is missing an opposite relation field on the model `DispensingRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2233[0m
[1;94m   | [0m
[1;94m2232 | [0m  clinicalSetting       ClinicalSetting?      @relation("PharmacyClinicalSettings", fields: [clinicalSettingId], references: [id])
[1;94m2233 | [0m  [1;91mdispensingRecords     DispensingRecord[]    @relation("PharmacyDispensingRecords")[0m
[1;94m2234 | [0m  createdById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2241[0m
[1;94m   | [0m
[1;94m2240 | [0m  maternityId           Int?
[1;94m2241 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2242 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2024[0m
[1;94m   | [0m
[1;94m2023 | [0m  pharmacyId              Int?
[1;94m2024 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2025 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2241[0m
[1;94m   | [0m
[1;94m2240 | [0m  maternityId           Int?
[1;94m2241 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2242 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2024[0m
[1;94m   | [0m
[1;94m2023 | [0m  pharmacyId              Int?
[1;94m2024 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2025 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `maternityId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2241[0m
[1;94m   | [0m
[1;94m2240 | [0m  maternityId           Int?
[1;94m2241 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2242 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `Medication`: The relation field `inventory` on model `Medication` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2270[0m
[1;94m   | [0m
[1;94m2269 | [0m  inventoryId           Int?
[1;94m2270 | [0m  [1;91minventory             Inventory?            @relation("MedicationInventory", fields: [inventoryId], references: [id])[0m
[1;94m2271 | [0m  prescriptions         Prescription[]        @relation("MedicationPrescriptions")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `dispensingRecords` in model `Medication`: The relation field `dispensingRecords` on model `Medication` is missing an opposite relation field on the model `DispensingRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2272[0m
[1;94m   | [0m
[1;94m2271 | [0m  prescriptions         Prescription[]        @relation("MedicationPrescriptions")
[1;94m2272 | [0m  [1;91mdispensingRecords     DispensingRecord[]    @relation("MedicationDispensingRecords")[0m
[1;94m2273 | [0m  adverseReactions      AdverseReaction[]     @relation("MedicationAdverseReactions")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Prescription`: The relation field `clinicalRecord` on model `Prescription` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2303[0m
[1;94m   | [0m
[1;94m2302 | [0m  clinicalRecordId      Int?
[1;94m2303 | [0m  [1;91mclinicalRecord        ClinicalRecord?       @relation("PrescriptionClinicalRecords", fields: [clinicalRecordId], references: [id])[0m
[1;94m2304 | [0m  medicalRecordId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Prescription`: The relation field `createdBy` on model `Prescription` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2318[0m
[1;94m   | [0m
[1;94m2317 | [0m  createdById           Int?
[1;94m2318 | [0m  [1;91mcreatedBy             User?                 @relation("PrescriptionCreatedBy", fields: [createdById], references: [id])[0m
[1;94m2319 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Prescription`: The relation field `updatedBy` on model `Prescription` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2320[0m
[1;94m   | [0m
[1;94m2319 | [0m  updatedById           Int?
[1;94m2320 | [0m  [1;91mupdatedBy             User?                 @relation("PrescriptionUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m2321 | [0m  auditLogs             AuditLog[]            @relation("PrescriptionAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Prescription`: The relation field `auditLogs` on model `Prescription` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2321[0m
[1;94m   | [0m
[1;94m2320 | [0m  updatedBy             User?                 @relation("PrescriptionUpdatedBy", fields: [updatedById], references: [id])
[1;94m2321 | [0m  [1;91mauditLogs             AuditLog[]            @relation("PrescriptionAuditLogs")[0m
[1;94m2322 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursingCares` in model `Prescription`: The relation field `nursingCares` on model `Prescription` is missing an opposite relation field on the model `NursingCare`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2325[0m
[1;94m   | [0m
[1;94m2324 | [0m  prescription_ITEMS    PrescriptionItem[]    @relation("PrescriptionItems")
[1;94m2325 | [0m  [1;91mnursingCares          NursingCare[]         @relation("NursingCarePrescription")[0m
[1;94m2326 | [0m  nursingTasks          NursingTask[]         @relation("NursingTaskPrescription")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursingTasks` in model `Prescription`: The relation field `nursingTasks` on model `Prescription` is missing an opposite relation field on the model `NursingTask`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2326[0m
[1;94m   | [0m
[1;94m2325 | [0m  nursingCares          NursingCare[]         @relation("NursingCarePrescription")
[1;94m2326 | [0m  [1;91mnursingTasks          NursingTask[]         @relation("NursingTaskPrescription")[0m
[1;94m2327 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurements` in model `Department`: The relation field `procurements` on model `Department` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2415[0m
[1;94m   | [0m
[1;94m2414 | [0m  inventoryItems        Inventory[]           @relation("DepartmentInventory")
[1;94m2415 | [0m  [1;91mprocurements          Procurement[]         @relation("DepartmentProcurements")[0m
[1;94m2416 | [0m  costCenters           CostCenter[]          @relation("DepartmentCostCenters")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `verifications` in model `Department`: The relation field `verifications` on model `Department` is missing an opposite relation field on the model `Verification`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2458[0m
[1;94m   | [0m
[1;94m2457 | [0m  vaccinationCampaigns  VaccinationCampaign[] @relation("VaccinationCampaignDepartment")
[1;94m2458 | [0m  [1;91mverifications         Verification[]        @relation("DepartmentVerification")[0m
[1;94m2459 | [0m  verificationConfigs   VerificationConfiguration[] @relation("DepartmentVerificationConfig")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `verificationConfigs` in model `Department`: The relation field `verificationConfigs` on model `Department` is missing an opposite relation field on the model `VerificationConfiguration`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2459[0m
[1;94m   | [0m
[1;94m2458 | [0m  verifications         Verification[]        @relation("DepartmentVerification")
[1;94m2459 | [0m  [1;91mverificationConfigs   VerificationConfiguration[] @relation("DepartmentVerificationConfig")[0m
[1;94m2460 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `PrescriptionItem`: The relation field `createdBy` on model `PrescriptionItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2497[0m
[1;94m   | [0m
[1;94m2496 | [0m  createdById         Int?                  @unique
[1;94m2497 | [0m  [1;91mcreatedBy           User?                 @relation("PrescriptionItemCreatedBy", fields: [createdById], references: [id])[0m
[1;94m2498 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `PrescriptionItem`: The relation field `updatedBy` on model `PrescriptionItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2499[0m
[1;94m   | [0m
[1;94m2498 | [0m  updatedById         Int?                  @unique
[1;94m2499 | [0m  [1;91mupdatedBy           User?                 @relation("PrescriptionItemUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m2500 | [0m  auditLogs           AuditLog[]            @relation("PrescriptionItemAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `PrescriptionItem`: The relation field `auditLogs` on model `PrescriptionItem` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2500[0m
[1;94m   | [0m
[1;94m2499 | [0m  updatedBy           User?                 @relation("PrescriptionItemUpdatedBy", fields: [updatedById], references: [id])
[1;94m2500 | [0m  [1;91mauditLogs           AuditLog[]            @relation("PrescriptionItemAuditLogs")[0m
[1;94m2501 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medication` in model `DispensingRecord`: The relation field `medication` on model `DispensingRecord` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2511[0m
[1;94m   | [0m
[1;94m2510 | [0m  medicationId        Int
[1;94m2511 | [0m  [1;91mmedication          Medication            @relation("DispensingRecordMedication", fields: [medicationId], references: [id])[0m
[1;94m2512 | [0m  patientType         PatientType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `DispensingRecord`: The relation field `pharmacy` on model `DispensingRecord` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2518[0m
[1;94m   | [0m
[1;94m2517 | [0m  pharmacyId          Int?                  @unique
[1;94m2518 | [0m  [1;91mpharmacy            Pharmacy?             @relation("DispensingRecordPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2519 | [0m  invoiceId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `DispensingRecord`: The relation field `createdBy` on model `DispensingRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2526[0m
[1;94m   | [0m
[1;94m2525 | [0m  createdById         Int?                  @unique
[1;94m2526 | [0m  [1;91mcreatedBy           User?                 @relation("DispensingRecordCreatedBy", fields: [createdById], references: [id])[0m
[1;94m2527 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `DispensingRecord`: The relation field `updatedBy` on model `DispensingRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2528[0m
[1;94m   | [0m
[1;94m2527 | [0m  updatedById         Int?                  @unique
[1;94m2528 | [0m  [1;91mupdatedBy           User?                 @relation("DispensingRecordUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m2529 | [0m  auditLogs           AuditLog[]            @relation("DispensingRecordAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `DispensingRecord`: The relation field `auditLogs` on model `DispensingRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2529[0m
[1;94m   | [0m
[1;94m2528 | [0m  updatedBy           User?                 @relation("DispensingRecordUpdatedBy", fields: [updatedById], references: [id])
[1;94m2529 | [0m  [1;91mauditLogs           AuditLog[]            @relation("DispensingRecordAuditLogs")[0m
[1;94m2530 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `StockAdjustment`: The relation field `approvedBy` on model `StockAdjustment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2547[0m
[1;94m   | [0m
[1;94m2546 | [0m  approvedById        Int?                  @unique
[1;94m2547 | [0m  [1;91mapprovedBy          User?                 @relation("AdjustmentApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m2548 | [0m  adjustmentDate      DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `StockAdjustment`: The relation field `procurement` on model `StockAdjustment` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2552[0m
[1;94m   | [0m
[1;94m2551 | [0m  procurementId       Int?                  @unique
[1;94m2552 | [0m  [1;91mprocurement         Procurement?          @relation("StockAdjustmentProcurement", fields: [procurementId], references: [id])[0m
[1;94m2553 | [0m  inventoryId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `StockAdjustment`: The relation field `inventory` on model `StockAdjustment` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2554[0m
[1;94m   | [0m
[1;94m2553 | [0m  inventoryId         Int?                  @unique
[1;94m2554 | [0m  [1;91minventory           Inventory?            @relation("StockAdjustmentInventory", fields: [inventoryId], references: [id])[0m
[1;94m2555 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `StockAdjustment`: The relation field `auditLogs` on model `StockAdjustment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2556[0m
[1;94m   | [0m
[1;94m2555 | [0m  notes               String?
[1;94m2556 | [0m  [1;91mauditLogs           AuditLog[]            @relation("StockAdjustmentAuditLogs")[0m
[1;94m2557 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `notifications` in model `Billing`: The relation field `notifications` on model `Billing` is missing an opposite relation field on the model `BillingNotification`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2665[0m
[1;94m   | [0m
[1;94m2664 | [0m  auditLogs             AuditLog[]          @relation("BillingAuditLogs")
[1;94m2665 | [0m  [1;91mnotifications         BillingNotification[] @relation("BillingNotifications")[0m
[1;94m2666 | [0m  admissions            Admission[]         @relation("AdmissionBilling")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `prescriptionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2682[0m
[1;94m   | [0m
[1;94m2681 | [0m  prescriptionId        Int?
[1;94m2682 | [0m  [1;91mprescription          Prescription?       @relation("InvoicePrescription", fields: [prescriptionId], references: [id])[0m
[1;94m2683 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `appointmentId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2684[0m
[1;94m   | [0m
[1;94m2683 | [0m  appointmentId         Int?
[1;94m2684 | [0m  [1;91mappointment           Appointment?        @relation("AppointmentInvoices", fields: [appointmentId], references: [id])[0m
[1;94m2685 | [0m  admissionId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Invoice`: The relation field `admission` on model `Invoice` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2686[0m
[1;94m   | [0m
[1;94m2685 | [0m  admissionId           Int?
[1;94m2686 | [0m  [1;91madmission             Admission?          @relation("AdmissionInvoices", fields: [admissionId], references: [id])[0m
[1;94m2687 | [0m  laboratoryId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratory` in model `Invoice`: The relation field `laboratory` on model `Invoice` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2688[0m
[1;94m   | [0m
[1;94m2687 | [0m  laboratoryId          Int?
[1;94m2688 | [0m  [1;91mlaboratory            Laboratory?         @relation("InvoiceLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m2689 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2690[0m
[1;94m   | [0m
[1;94m2689 | [0m  radiologyId           Int?
[1;94m2690 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2691 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1165[0m
[1;94m   | [0m
[1;94m1164 | [0m  invoiceId           Int?
[1;94m1165 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1166 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2690[0m
[1;94m   | [0m
[1;94m2689 | [0m  radiologyId           Int?
[1;94m2690 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2691 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1165[0m
[1;94m   | [0m
[1;94m1164 | [0m  invoiceId           Int?
[1;94m1165 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1166 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `radiologyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2690[0m
[1;94m   | [0m
[1;94m2689 | [0m  radiologyId           Int?
[1;94m2690 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2691 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2692[0m
[1;94m   | [0m
[1;94m2691 | [0m  pharmacyId            Int?
[1;94m2692 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2693 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2228[0m
[1;94m   | [0m
[1;94m2227 | [0m  invoiceId             Int?
[1;94m2228 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2229 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2692[0m
[1;94m   | [0m
[1;94m2691 | [0m  pharmacyId            Int?
[1;94m2692 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2693 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2228[0m
[1;94m   | [0m
[1;94m2227 | [0m  invoiceId             Int?
[1;94m2228 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2229 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `pharmacyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2692[0m
[1;94m   | [0m
[1;94m2691 | [0m  pharmacyId            Int?
[1;94m2692 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2693 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `Invoice`: The relation field `operationTheatre` on model `Invoice` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2694[0m
[1;94m   | [0m
[1;94m2693 | [0m  operationTheatreId    Int?
[1;94m2694 | [0m  [1;91moperationTheatre      OperationTheatre?   @relation("InvoiceOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m2695 | [0m  totalAmount           Float
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2701[0m
[1;94m   | [0m
[1;94m2700 | [0m  transactionId         Int?
[1;94m2701 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2702 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2945[0m
[1;94m   | [0m
[1;94m2944 | [0m  invoiceId         Int?
[1;94m2945 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2946 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2701[0m
[1;94m   | [0m
[1;94m2700 | [0m  transactionId         Int?
[1;94m2701 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2702 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2945[0m
[1;94m   | [0m
[1;94m2944 | [0m  invoiceId         Int?
[1;94m2945 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2946 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `transactionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2701[0m
[1;94m   | [0m
[1;94m2700 | [0m  transactionId         Int?
[1;94m2701 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2702 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2703[0m
[1;94m   | [0m
[1;94m2702 | [0m  claimId               Int?
[1;94m2703 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2704 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3217[0m
[1;94m   | [0m
[1;94m3216 | [0m  invoiceId             Int?
[1;94m3217 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3218 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2703[0m
[1;94m   | [0m
[1;94m2702 | [0m  claimId               Int?
[1;94m2703 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2704 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3217[0m
[1;94m   | [0m
[1;94m3216 | [0m  invoiceId             Int?
[1;94m3217 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3218 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `claimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2703[0m
[1;94m   | [0m
[1;94m2702 | [0m  claimId               Int?
[1;94m2703 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2704 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2705[0m
[1;94m   | [0m
[1;94m2704 | [0m  nhifClaimId           Int?
[1;94m2705 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2706 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3368[0m
[1;94m   | [0m
[1;94m3367 | [0m  invoiceId           Int?
[1;94m3368 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3369 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2705[0m
[1;94m   | [0m
[1;94m2704 | [0m  nhifClaimId           Int?
[1;94m2705 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2706 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3368[0m
[1;94m   | [0m
[1;94m3367 | [0m  invoiceId           Int?
[1;94m3368 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3369 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `nhifClaimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2705[0m
[1;94m   | [0m
[1;94m2704 | [0m  nhifClaimId           Int?
[1;94m2705 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2706 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaims` in model `Invoice`: The relation field `nhifClaims` on model `Invoice` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2729[0m
[1;94m   | [0m
[1;94m2728 | [0m  payments              Payment[]           @relation("PaymentInvoices")
[1;94m2729 | [0m  [1;91mnhifClaims            NhifClaim[]         @relation("NhifClaimInvoice")[0m
[1;94m2730 | [0m  patients              Patient[]           @relation("PatientInsurances")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patients` in model `Invoice`: The relation field `patients` on model `Invoice` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2730[0m
[1;94m   | [0m
[1;94m2729 | [0m  nhifClaims            NhifClaim[]         @relation("NhifClaimInvoice")
[1;94m2730 | [0m  [1;91mpatients              Patient[]           @relation("PatientInsurances")[0m
[1;94m2731 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2945[0m
[1;94m   | [0m
[1;94m2944 | [0m  invoiceId         Int?
[1;94m2945 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2946 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2701[0m
[1;94m   | [0m
[1;94m2700 | [0m  transactionId         Int?
[1;94m2701 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2702 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2945[0m
[1;94m   | [0m
[1;94m2944 | [0m  invoiceId         Int?
[1;94m2945 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2946 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2701[0m
[1;94m   | [0m
[1;94m2700 | [0m  transactionId         Int?
[1;94m2701 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2702 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2945[0m
[1;94m   | [0m
[1;94m2944 | [0m  invoiceId         Int?
[1;94m2945 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2946 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2947[0m
[1;94m   | [0m
[1;94m2946 | [0m  claimId           Int?
[1;94m2947 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2948 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3233[0m
[1;94m   | [0m
[1;94m3232 | [0m  transactionId         Int?
[1;94m3233 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3234 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2947[0m
[1;94m   | [0m
[1;94m2946 | [0m  claimId           Int?
[1;94m2947 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2948 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3233[0m
[1;94m   | [0m
[1;94m3232 | [0m  transactionId         Int?
[1;94m3233 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3234 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `claimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2947[0m
[1;94m   | [0m
[1;94m2946 | [0m  claimId           Int?
[1;94m2947 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2948 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2949[0m
[1;94m   | [0m
[1;94m2948 | [0m  nhifClaimId       Int?
[1;94m2949 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2950 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3404[0m
[1;94m   | [0m
[1;94m3403 | [0m  transactionId       Int?
[1;94m3404 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3405 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2949[0m
[1;94m   | [0m
[1;94m2948 | [0m  nhifClaimId       Int?
[1;94m2949 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2950 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3404[0m
[1;94m   | [0m
[1;94m3403 | [0m  transactionId       Int?
[1;94m3404 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3405 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `nhifClaimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2949[0m
[1;94m   | [0m
[1;94m2948 | [0m  nhifClaimId       Int?
[1;94m2949 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2950 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `fixedAsset` in model `Transaction`: The relation field `fixedAsset` on model `Transaction` is missing an opposite relation field on the model `FixedAsset`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2955[0m
[1;94m   | [0m
[1;94m2954 | [0m  fixedAssetId      Int?
[1;94m2955 | [0m  [1;91mfixedAsset        FixedAsset?         @relation("TransactionFixedAssets", fields: [fixedAssetId], references: [id])[0m
[1;94m2956 | [0m  createdById       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2994[0m
[1;94m   | [0m
[1;94m2993 | [0m  budgetId          Int?
[1;94m2994 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m2995 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3019[0m
[1;94m   | [0m
[1;94m3018 | [0m  costCenterId      Int?
[1;94m3019 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3020 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2994[0m
[1;94m   | [0m
[1;94m2993 | [0m  budgetId          Int?
[1;94m2994 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m2995 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3019[0m
[1;94m   | [0m
[1;94m3018 | [0m  costCenterId      Int?
[1;94m3019 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3020 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `budgetId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2994[0m
[1;94m   | [0m
[1;94m2993 | [0m  budgetId          Int?
[1;94m2994 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m2995 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3019[0m
[1;94m   | [0m
[1;94m3018 | [0m  costCenterId      Int?
[1;94m3019 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3020 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2994[0m
[1;94m   | [0m
[1;94m2993 | [0m  budgetId          Int?
[1;94m2994 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m2995 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3019[0m
[1;94m   | [0m
[1;94m3018 | [0m  costCenterId      Int?
[1;94m3019 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3020 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2994[0m
[1;94m   | [0m
[1;94m2993 | [0m  budgetId          Int?
[1;94m2994 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m2995 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `costCenterId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3019[0m
[1;94m   | [0m
[1;94m3018 | [0m  costCenterId      Int?
[1;94m3019 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3020 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `BankStatement`: The relation field `auditLogs` on model `BankStatement` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3082[0m
[1;94m   | [0m
[1;94m3081 | [0m  updatedAt        DateTime             @updatedAt
[1;94m3082 | [0m  [1;91mauditLogs        AuditLog[]           @relation("BankStatementAuditLogs")[0m
[1;94m3083 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3217[0m
[1;94m   | [0m
[1;94m3216 | [0m  invoiceId             Int?
[1;94m3217 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3218 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2703[0m
[1;94m   | [0m
[1;94m2702 | [0m  claimId               Int?
[1;94m2703 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2704 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3217[0m
[1;94m   | [0m
[1;94m3216 | [0m  invoiceId             Int?
[1;94m3217 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3218 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2703[0m
[1;94m   | [0m
[1;94m2702 | [0m  claimId               Int?
[1;94m2703 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2704 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3217[0m
[1;94m   | [0m
[1;94m3216 | [0m  invoiceId             Int?
[1;94m3217 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3218 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `Claim`: The relation field `appointment` on model `Claim` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3219[0m
[1;94m   | [0m
[1;94m3218 | [0m  appointmentId         Int?
[1;94m3219 | [0m  [1;91mappointment           Appointment?        @relation("ClaimAppointments", fields: [appointmentId], references: [id])[0m
[1;94m3220 | [0m  admissionId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `Claim`: The relation field `pharmacy` on model `Claim` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3223[0m
[1;94m   | [0m
[1;94m3222 | [0m  pharmacyId            Int?
[1;94m3223 | [0m  [1;91mpharmacy              Pharmacy?           @relation("ClaimPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m3224 | [0m  laboratoryId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3225[0m
[1;94m   | [0m
[1;94m3224 | [0m  laboratoryId          Int?
[1;94m3225 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3226 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1073[0m
[1;94m   | [0m
[1;94m1072 | [0m  claimId               Int?
[1;94m1073 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1074 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3225[0m
[1;94m   | [0m
[1;94m3224 | [0m  laboratoryId          Int?
[1;94m3225 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3226 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1073[0m
[1;94m   | [0m
[1;94m1072 | [0m  claimId               Int?
[1;94m1073 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1074 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `laboratoryId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3225[0m
[1;94m   | [0m
[1;94m3224 | [0m  laboratoryId          Int?
[1;94m3225 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3226 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `Claim`: The relation field `nhifClaim` on model `Claim` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3231[0m
[1;94m   | [0m
[1;94m3230 | [0m  nhifClaimId           Int?
[1;94m3231 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("ClaimNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m3232 | [0m  transactionId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3233[0m
[1;94m   | [0m
[1;94m3232 | [0m  transactionId         Int?
[1;94m3233 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3234 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2947[0m
[1;94m   | [0m
[1;94m2946 | [0m  claimId           Int?
[1;94m2947 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2948 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3233[0m
[1;94m   | [0m
[1;94m3232 | [0m  transactionId         Int?
[1;94m3233 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3234 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2947[0m
[1;94m   | [0m
[1;94m2946 | [0m  claimId           Int?
[1;94m2947 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2948 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `transactionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3233[0m
[1;94m   | [0m
[1;94m3232 | [0m  transactionId         Int?
[1;94m3233 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3234 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Claim`: The relation field `createdBy` on model `Claim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3253[0m
[1;94m   | [0m
[1;94m3252 | [0m  createdById           Int?
[1;94m3253 | [0m  [1;91mcreatedBy             User?               @relation("ClaimCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3254 | [0m  approvedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `Claim`: The relation field `approvedBy` on model `Claim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3255[0m
[1;94m   | [0m
[1;94m3254 | [0m  approvedById          Int?
[1;94m3255 | [0m  [1;91mapprovedBy            User?               @relation("ClaimApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3256 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Claim`: The relation field `updatedBy` on model `Claim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3257[0m
[1;94m   | [0m
[1;94m3256 | [0m  updatedById           Int?
[1;94m3257 | [0m  [1;91mupdatedBy             User?               @relation("ClaimUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3258 | [0m  auditLogs             AuditLog[]          @relation("ClaimAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Claim`: The relation field `auditLogs` on model `Claim` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3258[0m
[1;94m   | [0m
[1;94m3257 | [0m  updatedBy             User?               @relation("ClaimUpdatedBy", fields: [updatedById], references: [id])
[1;94m3258 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClaimAuditLogs")[0m
[1;94m3259 | [0m  claimDocuments        ClaimDocument[]     @relation("ClaimDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `ClaimDocument`: The relation field `uploadedBy` on model `ClaimDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3279[0m
[1;94m   | [0m
[1;94m3278 | [0m  uploadedById          Int?
[1;94m3279 | [0m  [1;91muploadedBy            User?               @relation("ClaimDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m3280 | [0m  description           String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClaimDocument`: The relation field `auditLogs` on model `ClaimDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3283[0m
[1;94m   | [0m
[1;94m3282 | [0m  updatedAt           DateTime            @updatedAt
[1;94m3283 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClaimDocumentAuditLogs")[0m
[1;94m3284 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ClaimNotification`: The relation field `recipient` on model `ClaimNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3295[0m
[1;94m   | [0m
[1;94m3294 | [0m  recipientId           Int?
[1;94m3295 | [0m  [1;91mrecipient             User?               @relation("ClaimNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m3296 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ClaimAdjustment`: The relation field `createdBy` on model `ClaimAdjustment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3310[0m
[1;94m   | [0m
[1;94m3309 | [0m  createdById           Int?
[1;94m3310 | [0m  [1;91mcreatedBy             User?               @relation("ClaimAdjustmentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3311 | [0m  approvedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `ClaimAdjustment`: The relation field `approvedBy` on model `ClaimAdjustment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3312[0m
[1;94m   | [0m
[1;94m3311 | [0m  approvedById          Int?
[1;94m3312 | [0m  [1;91mapprovedBy            User?               @relation("ClaimAdjustmentApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3313 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClaimAdjustment`: The relation field `auditLogs` on model `ClaimAdjustment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3314[0m
[1;94m   | [0m
[1;94m3313 | [0m  notes                 String?
[1;94m3314 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClaimAdjustmentAuditLogs")[0m
[1;94m3315 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Insurance`: The relation field `auditLogs` on model `Insurance` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3332[0m
[1;94m   | [0m
[1;94m3331 | [0m  updatedAt           DateTime            @updatedAt
[1;94m3332 | [0m  [1;91mauditLogs             AuditLog[]          @relation("InsuranceAuditLogs")[0m
[1;94m3333 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3368[0m
[1;94m   | [0m
[1;94m3367 | [0m  invoiceId           Int?
[1;94m3368 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3369 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2705[0m
[1;94m   | [0m
[1;94m2704 | [0m  nhifClaimId           Int?
[1;94m2705 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2706 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3368[0m
[1;94m   | [0m
[1;94m3367 | [0m  invoiceId           Int?
[1;94m3368 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3369 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2705[0m
[1;94m   | [0m
[1;94m2704 | [0m  nhifClaimId           Int?
[1;94m2705 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2706 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3368[0m
[1;94m   | [0m
[1;94m3367 | [0m  invoiceId           Int?
[1;94m3368 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3369 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `NhifClaim`: The relation field `medicalRecord` on model `NhifClaim` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3376[0m
[1;94m   | [0m
[1;94m3375 | [0m  medicalRecordId     Int?
[1;94m3376 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("NhifClaimMedicalRecords", fields: [medicalRecordId], references: [id])[0m
[1;94m3377 | [0m  laboratoryId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `NhifClaim`: The relation field `operationTheatre` on model `NhifClaim` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3384[0m
[1;94m   | [0m
[1;94m3383 | [0m  operationTheatreId  Int?
[1;94m3384 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("NhifClaimOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m3385 | [0m  maternityId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `maternity` in model `NhifClaim`: The relation field `maternity` on model `NhifClaim` is missing an opposite relation field on the model `Maternity`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3386[0m
[1;94m   | [0m
[1;94m3385 | [0m  maternityId         Int?
[1;94m3386 | [0m  [1;91mmaternity           Maternity?            @relation("NhifClaimMaternity", fields: [maternityId], references: [id])[0m
[1;94m3387 | [0m  vaccinationId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `vaccination` in model `NhifClaim`: The relation field `vaccination` on model `NhifClaim` is missing an opposite relation field on the model `Vaccination`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3388[0m
[1;94m   | [0m
[1;94m3387 | [0m  vaccinationId       Int?
[1;94m3388 | [0m  [1;91mvaccination         Vaccination?          @relation("NhifClaimVaccination", fields: [vaccinationId], references: [id])[0m
[1;94m3389 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3404[0m
[1;94m   | [0m
[1;94m3403 | [0m  transactionId       Int?
[1;94m3404 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3405 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2949[0m
[1;94m   | [0m
[1;94m2948 | [0m  nhifClaimId       Int?
[1;94m2949 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2950 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3404[0m
[1;94m   | [0m
[1;94m3403 | [0m  transactionId       Int?
[1;94m3404 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3405 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2949[0m
[1;94m   | [0m
[1;94m2948 | [0m  nhifClaimId       Int?
[1;94m2949 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2950 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `transactionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3404[0m
[1;94m   | [0m
[1;94m3403 | [0m  transactionId       Int?
[1;94m3404 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3405 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referral` in model `NhifClaim`: The relation field `referral` on model `NhifClaim` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3408[0m
[1;94m   | [0m
[1;94m3407 | [0m  referralId          Int?
[1;94m3408 | [0m  [1;91mreferral            Referral?             @relation("NhifClaimReferrals", fields: [referralId], references: [id])[0m
[1;94m3409 | [0m  socialServiceCases  SocialServiceCase[]   @relation("SocialServiceCaseNhifClaims")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NhifClaim`: The relation field `createdBy` on model `NhifClaim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3412[0m
[1;94m   | [0m
[1;94m3411 | [0m  createdById         Int?
[1;94m3412 | [0m  [1;91mcreatedBy           User?                 @relation("NhifClaimCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3413 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NhifClaim`: The relation field `updatedBy` on model `NhifClaim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3414[0m
[1;94m   | [0m
[1;94m3413 | [0m  updatedById         Int?
[1;94m3414 | [0m  [1;91mupdatedBy           User?                 @relation("NhifClaimUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3415 | [0m  reviewedById        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reviewedBy` in model `NhifClaim`: The relation field `reviewedBy` on model `NhifClaim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3416[0m
[1;94m   | [0m
[1;94m3415 | [0m  reviewedById        Int?
[1;94m3416 | [0m  [1;91mreviewedBy          User?                 @relation("NhifClaimReviewedBy", fields: [reviewedById], references: [id])[0m
[1;94m3417 | [0m  auditLogs           AuditLog[]            @relation("NhifClaimAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NhifClaim`: The relation field `auditLogs` on model `NhifClaim` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3417[0m
[1;94m   | [0m
[1;94m3416 | [0m  reviewedBy          User?                 @relation("NhifClaimReviewedBy", fields: [reviewedById], references: [id])
[1;94m3417 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NhifClaimAuditLogs")[0m
[1;94m3418 | [0m  dashboardWidgets    DashboardWidget[]     @relation("DashboardWidgetNhifClaims")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `user` in model `Incentive`: The relation field `user` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3450[0m
[1;94m   | [0m
[1;94m3449 | [0m  userId                Int                 @unique
[1;94m3450 | [0m  [1;91muser                  User                @relation("IncentiveUser", fields: [userId], references: [id])[0m
[1;94m3451 | [0m  doctorId              Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `doctor` in model `Incentive`: The relation field `doctor` on model `Incentive` is missing an opposite relation field on the model `Doctor`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3452[0m
[1;94m   | [0m
[1;94m3451 | [0m  doctorId              Int?                @unique
[1;94m3452 | [0m  [1;91mdoctor                Doctor?             @relation("IncentiveDoctor", fields: [doctorId], references: [id])[0m
[1;94m3453 | [0m  departmentId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `transaction` in model `Incentive`: The relation field `transaction` on model `Incentive` is missing an opposite relation field on the model `Transaction`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3463[0m
[1;94m   | [0m
[1;94m3462 | [0m  transactionId         Int?                @unique
[1;94m3463 | [0m  [1;91mtransaction           Transaction?        @relation("IncentiveTransaction", fields: [transactionId], references: [id])[0m
[1;94m3464 | [0m  rejectionReason       String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Incentive`: The relation field `createdBy` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3466[0m
[1;94m   | [0m
[1;94m3465 | [0m  createdById           Int?                @unique
[1;94m3466 | [0m  [1;91mcreatedBy             User?               @relation("IncentiveCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3467 | [0m  approvedById          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `Incentive`: The relation field `approvedBy` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3468[0m
[1;94m   | [0m
[1;94m3467 | [0m  approvedById          Int?                @unique
[1;94m3468 | [0m  [1;91mapprovedBy            User?               @relation("IncentiveApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3469 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Incentive`: The relation field `updatedBy` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3470[0m
[1;94m   | [0m
[1;94m3469 | [0m  updatedById           Int?                @unique
[1;94m3470 | [0m  [1;91mupdatedBy             User?               @relation("IncentiveUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3471 | [0m  auditLogs             AuditLog[]          @relation("IncentiveAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Incentive`: The relation field `auditLogs` on model `Incentive` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3471[0m
[1;94m   | [0m
[1;94m3470 | [0m  updatedBy             User?               @relation("IncentiveUpdatedBy", fields: [updatedById], references: [id])
[1;94m3471 | [0m  [1;91mauditLogs             AuditLog[]          @relation("IncentiveAuditLogs")[0m
[1;94m3472 | [0m  incentiveNotifications IncentiveNotification[] @relation("IncentiveNotifications")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `IncentiveNotification`: The relation field `recipient` on model `IncentiveNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3486[0m
[1;94m   | [0m
[1;94m3485 | [0m  recipientId           Int?                @unique
[1;94m3486 | [0m  [1;91mrecipient             User?               @relation("IncentiveNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m3487 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Inventory`: The relation field `clinicalSetting` on model `Inventory` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3533[0m
[1;94m   | [0m
[1;94m3532 | [0m  clinicalSettingId     Int?                @unique
[1;94m3533 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("ClinicalSettingInventory", fields: [clinicalSettingId], references: [id])[0m
[1;94m3534 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `Inventory`: The relation field `pharmacy` on model `Inventory` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3535[0m
[1;94m   | [0m
[1;94m3534 | [0m  pharmacyId            Int?                @unique
[1;94m3535 | [0m  [1;91mpharmacy              Pharmacy?           @relation("PharmacyInventory", fields: [pharmacyId], references: [id])[0m
[1;94m3536 | [0m  storageLocation       String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Inventory`: The relation field `createdBy` on model `Inventory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3541[0m
[1;94m   | [0m
[1;94m3540 | [0m  createdById           Int?                @unique
[1;94m3541 | [0m  [1;91mcreatedBy             User?               @relation("InventoryCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3542 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Inventory`: The relation field `updatedBy` on model `Inventory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3543[0m
[1;94m   | [0m
[1;94m3542 | [0m  updatedById           Int?                @unique
[1;94m3543 | [0m  [1;91mupdatedBy             User?               @relation("InventoryUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3544 | [0m  auditLogs             AuditLog[]          @relation("InventoryAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Inventory`: The relation field `auditLogs` on model `Inventory` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3544[0m
[1;94m   | [0m
[1;94m3543 | [0m  updatedBy             User?               @relation("InventoryUpdatedBy", fields: [updatedById], references: [id])
[1;94m3544 | [0m  [1;91mauditLogs             AuditLog[]          @relation("InventoryAuditLogs")[0m
[1;94m3545 | [0m  inventoryTransactions InventoryTransaction[] @relation("InventoryTransactions")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `InventoryTransaction`: The relation field `performedBy` on model `InventoryTransaction` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3564[0m
[1;94m   | [0m
[1;94m3563 | [0m  performedById         Int?                @unique
[1;94m3564 | [0m  [1;91mperformedBy           User?               @relation("InventoryTransactionPerformedBy", fields: [performedById], references: [id])[0m
[1;94m3565 | [0m  createdById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `InventoryTransaction`: The relation field `createdBy` on model `InventoryTransaction` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3566[0m
[1;94m   | [0m
[1;94m3565 | [0m  createdById           Int?                @unique
[1;94m3566 | [0m  [1;91mcreatedBy             User?               @relation("InventoryTransactionCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3567 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `InventoryTransaction`: The relation field `updatedBy` on model `InventoryTransaction` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3568[0m
[1;94m   | [0m
[1;94m3567 | [0m  updatedById           Int?                @unique
[1;94m3568 | [0m  [1;91mupdatedBy             User?               @relation("InventoryTransactionUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3569 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `InventoryTransaction`: The relation field `auditLogs` on model `InventoryTransaction` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3570[0m
[1;94m   | [0m
[1;94m3569 | [0m  notes                 String?
[1;94m3570 | [0m  [1;91mauditLogs             AuditLog[]          @relation("InventoryTransactionAuditLogs")[0m
[1;94m3571 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `InventoryNotification`: The relation field `recipient` on model `InventoryNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3584[0m
[1;94m   | [0m
[1;94m3583 | [0m  recipientId           Int?                @unique
[1;94m3584 | [0m  [1;91mrecipient             User?               @relation("InventoryNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m3585 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `InventorySupplier`: The relation field `createdBy` on model `InventorySupplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3598[0m
[1;94m   | [0m
[1;94m3597 | [0m  createdById           Int?                @unique
[1;94m3598 | [0m  [1;91mcreatedBy             User?               @relation("InventorySupplierCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3599 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `InventorySupplier`: The relation field `updatedBy` on model `InventorySupplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3600[0m
[1;94m   | [0m
[1;94m3599 | [0m  updatedById           Int?                @unique
[1;94m3600 | [0m  [1;91mupdatedBy             User?               @relation("InventorySupplierUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3601 | [0m  inventory             Inventory[]         @relation("InventorySupplier")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `InventorySupplier`: The relation field `auditLogs` on model `InventorySupplier` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3602[0m
[1;94m   | [0m
[1;94m3601 | [0m  inventory             Inventory[]         @relation("InventorySupplier")
[1;94m3602 | [0m  [1;91mauditLogs             AuditLog[]          @relation("SupplierAuditLogs")[0m
[1;94m3603 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Procurement`: The relation field `department` on model `Procurement` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3648[0m
[1;94m   | [0m
[1;94m3647 | [0m  departmentId        Int?
[1;94m3648 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m3649 | [0m  requesterId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `requester` in model `Procurement`: The relation field `requester` on model `Procurement` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3650[0m
[1;94m   | [0m
[1;94m3649 | [0m  requesterId         Int?
[1;94m3650 | [0m  [1;91mrequester           User?                 @relation("ProcurementRequester", fields: [requesterId], references: [id])[0m
[1;94m3651 | [0m  status              ProcurementStatus     @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3659[0m
[1;94m   | [0m
[1;94m3658 | [0m  purchaseOrderId     Int?
[1;94m3659 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3660 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3725[0m
[1;94m   | [0m
[1;94m3724 | [0m  procurementId       Int?
[1;94m3725 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3726 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3659[0m
[1;94m   | [0m
[1;94m3658 | [0m  purchaseOrderId     Int?
[1;94m3659 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3660 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3725[0m
[1;94m   | [0m
[1;94m3724 | [0m  procurementId       Int?
[1;94m3725 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3726 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `purchaseOrderId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3659[0m
[1;94m   | [0m
[1;94m3658 | [0m  purchaseOrderId     Int?
[1;94m3659 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3660 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medication` in model `Procurement`: The relation field `medication` on model `Procurement` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3661[0m
[1;94m   | [0m
[1;94m3660 | [0m  medicationId        Int?
[1;94m3661 | [0m  [1;91mmedication          Medication?           @relation(fields: [medicationId], references: [id])[0m
[1;94m3662 | [0m  cssdInstrumentId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `Procurement`: The relation field `cssdInstrument` on model `Procurement` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3663[0m
[1;94m   | [0m
[1;94m3662 | [0m  cssdInstrumentId    Int?
[1;94m3663 | [0m  [1;91mcssdInstrument      CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])[0m
[1;94m3664 | [0m  inventoryItemId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventoryItem` in model `Procurement`: The relation field `inventoryItem` on model `Procurement` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3665[0m
[1;94m   | [0m
[1;94m3664 | [0m  inventoryItemId     Int?
[1;94m3665 | [0m  [1;91minventoryItem       Inventory?            @relation(fields: [inventoryItemId], references: [id])[0m
[1;94m3666 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Procurement`: The relation field `billing` on model `Procurement` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3667[0m
[1;94m   | [0m
[1;94m3666 | [0m  billingId           Int?
[1;94m3667 | [0m  [1;91mbilling             Billing?              @relation(fields: [billingId], references: [id])[0m
[1;94m3668 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Procurement`: The relation field `createdBy` on model `Procurement` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3671[0m
[1;94m   | [0m
[1;94m3670 | [0m  createdById         Int?
[1;94m3671 | [0m  [1;91mcreatedBy           User?                 @relation("ProcurementCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3672 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Procurement`: The relation field `updatedBy` on model `Procurement` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3673[0m
[1;94m   | [0m
[1;94m3672 | [0m  updatedById         Int?
[1;94m3673 | [0m  [1;91mupdatedBy           User?                 @relation("ProcurementUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3674 | [0m  auditLogs           AuditLog[]            @relation("ProcurementAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Procurement`: The relation field `auditLogs` on model `Procurement` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3674[0m
[1;94m   | [0m
[1;94m3673 | [0m  updatedBy           User?                 @relation("ProcurementUpdatedBy", fields: [updatedById], references: [id])
[1;94m3674 | [0m  [1;91mauditLogs           AuditLog[]            @relation("ProcurementAuditLogs")[0m
[1;94m3675 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Supplier`: The relation field `department` on model `Supplier` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3698[0m
[1;94m   | [0m
[1;94m3697 | [0m  departmentId        Int?
[1;94m3698 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m3699 | [0m  medications         Medication[]
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medications` in model `Supplier`: The relation field `medications` on model `Supplier` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3699[0m
[1;94m   | [0m
[1;94m3698 | [0m  department          Department?           @relation(fields: [departmentId], references: [id])
[1;94m3699 | [0m  [1;91mmedications         Medication[][0m
[1;94m3700 | [0m  purchaseOrders      PurchaseOrder[]
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstruments` in model `Supplier`: The relation field `cssdInstruments` on model `Supplier` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3701[0m
[1;94m   | [0m
[1;94m3700 | [0m  purchaseOrders      PurchaseOrder[]
[1;94m3701 | [0m  [1;91mcssdInstruments     CSSDInstrument[][0m
[1;94m3702 | [0m  inventoryItems      Inventory[]
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventoryItems` in model `Supplier`: The relation field `inventoryItems` on model `Supplier` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3702[0m
[1;94m   | [0m
[1;94m3701 | [0m  cssdInstruments     CSSDInstrument[]
[1;94m3702 | [0m  [1;91minventoryItems      Inventory[][0m
[1;94m3703 | [0m  performanceRating   Float?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Supplier`: The relation field `createdBy` on model `Supplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3708[0m
[1;94m   | [0m
[1;94m3707 | [0m  createdById         Int?
[1;94m3708 | [0m  [1;91mcreatedBy           User?                 @relation("SupplierCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3709 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Supplier`: The relation field `updatedBy` on model `Supplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3710[0m
[1;94m   | [0m
[1;94m3709 | [0m  updatedById         Int?
[1;94m3710 | [0m  [1;91mupdatedBy           User?                 @relation("SupplierUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3711 | [0m  auditLogs           AuditLog[]            @relation("SupplierAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Supplier`: The relation field `auditLogs` on model `Supplier` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3711[0m
[1;94m   | [0m
[1;94m3710 | [0m  updatedBy           User?                 @relation("SupplierUpdatedBy", fields: [updatedById], references: [id])
[1;94m3711 | [0m  [1;91mauditLogs           AuditLog[]            @relation("SupplierAuditLogs")[0m
[1;94m3712 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `PurchaseOrder`: The relation field `department` on model `PurchaseOrder` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3723[0m
[1;94m   | [0m
[1;94m3722 | [0m  departmentId        Int?
[1;94m3723 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m3724 | [0m  procurementId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3725[0m
[1;94m   | [0m
[1;94m3724 | [0m  procurementId       Int?
[1;94m3725 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3726 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3659[0m
[1;94m   | [0m
[1;94m3658 | [0m  purchaseOrderId     Int?
[1;94m3659 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3660 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3725[0m
[1;94m   | [0m
[1;94m3724 | [0m  procurementId       Int?
[1;94m3725 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3726 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3659[0m
[1;94m   | [0m
[1;94m3658 | [0m  purchaseOrderId     Int?
[1;94m3659 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3660 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `procurementId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3725[0m
[1;94m   | [0m
[1;94m3724 | [0m  procurementId       Int?
[1;94m3725 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3726 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `PurchaseOrder`: The relation field `inventory` on model `PurchaseOrder` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3738[0m
[1;94m   | [0m
[1;94m3737 | [0m  inventoryId         Int?
[1;94m3738 | [0m  [1;91minventory           Inventory?            @relation(fields: [inventoryId], references: [id])[0m
[1;94m3739 | [0m  cssdInstrumentId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `PurchaseOrder`: The relation field `cssdInstrument` on model `PurchaseOrder` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3740[0m
[1;94m   | [0m
[1;94m3739 | [0m  cssdInstrumentId    Int?
[1;94m3740 | [0m  [1;91mcssdInstrument      CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])[0m
[1;94m3741 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `PurchaseOrder`: The relation field `createdBy` on model `PurchaseOrder` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3745[0m
[1;94m   | [0m
[1;94m3744 | [0m  createdById         Int?
[1;94m3745 | [0m  [1;91mcreatedBy           User?                 @relation("PurchaseOrderCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3746 | [0m  approvedById        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `PurchaseOrder`: The relation field `approvedBy` on model `PurchaseOrder` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3747[0m
[1;94m   | [0m
[1;94m3746 | [0m  approvedById        Int?
[1;94m3747 | [0m  [1;91mapprovedBy          User?                 @relation("PurchaseOrderApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3748 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `PurchaseOrder`: The relation field `updatedBy` on model `PurchaseOrder` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3749[0m
[1;94m   | [0m
[1;94m3748 | [0m  updatedById         Int?
[1;94m3749 | [0m  [1;91mupdatedBy           User?                 @relation("PurchaseOrderUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3750 | [0m  auditLogs           AuditLog[]            @relation("PurchaseOrderAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `PurchaseOrder`: The relation field `auditLogs` on model `PurchaseOrder` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3750[0m
[1;94m   | [0m
[1;94m3749 | [0m  updatedBy           User?                 @relation("PurchaseOrderUpdatedBy", fields: [updatedById], references: [id])
[1;94m3750 | [0m  [1;91mauditLogs           AuditLog[]            @relation("PurchaseOrderAuditLogs")[0m
[1;94m3751 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medication` in model `PurchaseOrderItem`: The relation field `medication` on model `PurchaseOrderItem` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3761[0m
[1;94m   | [0m
[1;94m3760 | [0m  medicationId        Int?
[1;94m3761 | [0m  [1;91mmedication          Medication?           @relation(fields: [medicationId], references: [id])[0m
[1;94m3762 | [0m  cssdInstrumentId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `PurchaseOrderItem`: The relation field `cssdInstrument` on model `PurchaseOrderItem` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3763[0m
[1;94m   | [0m
[1;94m3762 | [0m  cssdInstrumentId    Int?
[1;94m3763 | [0m  [1;91mcssdInstrument      CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])[0m
[1;94m3764 | [0m  inventoryItemId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventoryItem` in model `PurchaseOrderItem`: The relation field `inventoryItem` on model `PurchaseOrderItem` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3765[0m
[1;94m   | [0m
[1;94m3764 | [0m  inventoryItemId     Int?
[1;94m3765 | [0m  [1;91minventoryItem       Inventory?            @relation(fields: [inventoryItemId], references: [id])[0m
[1;94m3766 | [0m  quantity            Int
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `PurchaseOrderItem`: The relation field `createdBy` on model `PurchaseOrderItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3776[0m
[1;94m   | [0m
[1;94m3775 | [0m  createdById         Int?
[1;94m3776 | [0m  [1;91mcreatedBy           User?                 @relation("PurchaseOrderItemCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3777 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `PurchaseOrderItem`: The relation field `updatedBy` on model `PurchaseOrderItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3778[0m
[1;94m   | [0m
[1;94m3777 | [0m  updatedById         Int?
[1;94m3778 | [0m  [1;91mupdatedBy           User?                 @relation("PurchaseOrderItemUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3779 | [0m  auditLogs           AuditLog[]            @relation("PurchaseOrderItemAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `PurchaseOrderItem`: The relation field `auditLogs` on model `PurchaseOrderItem` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3779[0m
[1;94m   | [0m
[1;94m3778 | [0m  updatedBy           User?                 @relation("PurchaseOrderItemUpdatedBy", fields: [updatedById], references: [id])
[1;94m3779 | [0m  [1;91mauditLogs           AuditLog[]            @relation("PurchaseOrderItemAuditLogs")[0m
[1;94m3780 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `FixedAsset`: The relation field `department` on model `FixedAsset` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3826[0m
[1;94m   | [0m
[1;94m3825 | [0m  departmentId          Int?
[1;94m3826 | [0m  [1;91mdepartment            Department?         @relation("DepartmentFixedAssets", fields: [departmentId], references: [id])[0m
[1;94m3827 | [0m  location              String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `FixedAsset`: The relation field `createdBy` on model `FixedAsset` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3839[0m
[1;94m   | [0m
[1;94m3838 | [0m  createdById           Int?                @unique
[1;94m3839 | [0m  [1;91mcreatedBy             User?               @relation("FixedAssetCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3840 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `FixedAsset`: The relation field `updatedBy` on model `FixedAsset` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3841[0m
[1;94m   | [0m
[1;94m3840 | [0m  updatedById           Int?                @unique
[1;94m3841 | [0m  [1;91mupdatedBy             User?               @relation("FixedAssetUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3842 | [0m  auditLogs             AuditLog[]          @relation("FixedAssetAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `FixedAsset`: The relation field `auditLogs` on model `FixedAsset` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3842[0m
[1;94m   | [0m
[1;94m3841 | [0m  updatedBy             User?               @relation("FixedAssetUpdatedBy", fields: [updatedById], references: [id])
[1;94m3842 | [0m  [1;91mauditLogs             AuditLog[]          @relation("FixedAssetAuditLogs")[0m
[1;94m3843 | [0m  maintenanceRecords    MaintenanceRecord[] @relation("AssetMaintenanceRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `MaintenanceRecord`: The relation field `performedBy` on model `MaintenanceRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3858[0m
[1;94m   | [0m
[1;94m3857 | [0m  performedById         Int?                @unique
[1;94m3858 | [0m  [1;91mperformedBy           User?               @relation("MaintenancePerformedBy", fields: [performedById], references: [id])[0m
[1;94m3859 | [0m  createdById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `MaintenanceRecord`: The relation field `createdBy` on model `MaintenanceRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3860[0m
[1;94m   | [0m
[1;94m3859 | [0m  createdById           Int?                @unique
[1;94m3860 | [0m  [1;91mcreatedBy             User?               @relation("MaintenanceCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3861 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `MaintenanceRecord`: The relation field `updatedBy` on model `MaintenanceRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3862[0m
[1;94m   | [0m
[1;94m3861 | [0m  updatedById           Int?                @unique
[1;94m3862 | [0m  [1;91mupdatedBy             User?               @relation("MaintenanceUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3863 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `MaintenanceRecord`: The relation field `auditLogs` on model `MaintenanceRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3864[0m
[1;94m   | [0m
[1;94m3863 | [0m  notes                 String?
[1;94m3864 | [0m  [1;91mauditLogs             AuditLog[]          @relation("MaintenanceRecordAuditLogs")[0m
[1;94m3865 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Report`: The relation field `clinicalSetting` on model `Report` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3919[0m
[1;94m   | [0m
[1;94m3918 | [0m  clinicalSettingId     Int?                @unique
[1;94m3919 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("ReportClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m3920 | [0m  dynamicReportId       Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Report`: The relation field `createdBy` on model `Report` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3923[0m
[1;94m   | [0m
[1;94m3922 | [0m  createdById           Int?                @unique
[1;94m3923 | [0m  [1;91mcreatedBy             User?               @relation("ReportGeneralCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3924 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Report`: The relation field `updatedBy` on model `Report` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3925[0m
[1;94m   | [0m
[1;94m3924 | [0m  updatedById           Int?                @unique
[1;94m3925 | [0m  [1;91mupdatedBy             User?               @relation("ReportGeneralUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3926 | [0m  auditLogs             AuditLog[]          @relation("ReportAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Report`: The relation field `auditLogs` on model `Report` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3926[0m
[1;94m   | [0m
[1;94m3925 | [0m  updatedBy             User?               @relation("ReportGeneralUpdatedBy", fields: [updatedById], references: [id])
[1;94m3926 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ReportAuditLogs")[0m
[1;94m3927 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `DynamicReport`: The relation field `department` on model `DynamicReport` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3944[0m
[1;94m   | [0m
[1;94m3943 | [0m  departmentId          Int?
[1;94m3944 | [0m  [1;91mdepartment            Department?         @relation("DepartmentDynamicReports", fields: [departmentId], references: [id])[0m
[1;94m3945 | [0m  clinicalSettingId     Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `DynamicReport`: The relation field `clinicalSetting` on model `DynamicReport` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3946[0m
[1;94m   | [0m
[1;94m3945 | [0m  clinicalSettingId     Int?                @unique
[1;94m3946 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("DynamicReportClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m3947 | [0m  createdById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `DynamicReport`: The relation field `createdBy` on model `DynamicReport` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3948[0m
[1;94m   | [0m
[1;94m3947 | [0m  createdById           Int?                @unique
[1;94m3948 | [0m  [1;91mcreatedBy             User?               @relation("ReportCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3949 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `DynamicReport`: The relation field `updatedBy` on model `DynamicReport` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3950[0m
[1;94m   | [0m
[1;94m3949 | [0m  updatedById           Int?                @unique
[1;94m3950 | [0m  [1;91mupdatedBy             User?               @relation("ReportUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3951 | [0m  scheduled             Boolean             @default(false)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `DynamicReport`: The relation field `auditLogs` on model `DynamicReport` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3960[0m
[1;94m   | [0m
[1;94m3959 | [0m  notifications         ReportNotification[] @relation("ReportNotifications")
[1;94m3960 | [0m  [1;91mauditLogs             AuditLog[]          @relation("DynamicReportAuditLogs")[0m
[1;94m3961 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ReportTemplate`: The relation field `createdBy` on model `ReportTemplate` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3974[0m
[1;94m   | [0m
[1;94m3973 | [0m  createdById           Int?                @unique
[1;94m3974 | [0m  [1;91mcreatedBy             User?               @relation("TemplateCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3975 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ReportTemplate`: The relation field `updatedBy` on model `ReportTemplate` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3976[0m
[1;94m   | [0m
[1;94m3975 | [0m  updatedById           Int?                @unique
[1;94m3976 | [0m  [1;91mupdatedBy             User?               @relation("TemplateUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3977 | [0m  reports               DynamicReport[]     @relation("DynamicReportTemplates")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ReportTemplate`: The relation field `auditLogs` on model `ReportTemplate` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3978[0m
[1;94m   | [0m
[1;94m3977 | [0m  reports               DynamicReport[]     @relation("DynamicReportTemplates")
[1;94m3978 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ReportTemplateAuditLogs")[0m
[1;94m3979 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ReportNotification`: The relation field `recipient` on model `ReportNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3992[0m
[1;94m   | [0m
[1;94m3991 | [0m  recipientId           Int?                @unique
[1;94m3992 | [0m  [1;91mrecipient             User?               @relation("ReportNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m3993 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `doctor` in model `MedicalRecord`: The relation field `doctor` on model `MedicalRecord` is missing an opposite relation field on the model `Doctor`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4018[0m
[1;94m   | [0m
[1;94m4017 | [0m  doctorId              Int?
[1;94m4018 | [0m  [1;91mdoctor                Doctor?               @relation("DoctorMedicalRecords", fields: [doctorId], references: [id])[0m
[1;94m4019 | [0m  appointmentId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `MedicalRecord`: The relation field `admission` on model `MedicalRecord` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4022[0m
[1;94m   | [0m
[1;94m4021 | [0m  admissionId           Int?                  @unique
[1;94m4022 | [0m  [1;91madmission             Admission?            @relation("MedicalRecordAdmissions")[0m
[1;94m4023 | [0m  clinicalRecordId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `MedicalRecord`: The relation field `clinicalRecord` on model `MedicalRecord` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4024[0m
[1;94m   | [0m
[1;94m4023 | [0m  clinicalRecordId      Int?
[1;94m4024 | [0m  [1;91mclinicalRecord        ClinicalRecord?       @relation("MedicalRecordClinicalRecords", fields: [clinicalRecordId], references: [id])[0m
[1;94m4025 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `MedicalRecord`: The relation field `department` on model `MedicalRecord` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4026[0m
[1;94m   | [0m
[1;94m4025 | [0m  departmentId          Int?
[1;94m4026 | [0m  [1;91mdepartment            Department?           @relation("DepartmentMedicalRecords", fields: [departmentId], references: [id])[0m
[1;94m4027 | [0m  clinicalSettingId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `MedicalRecord`: The relation field `clinicalSetting` on model `MedicalRecord` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4028[0m
[1;94m   | [0m
[1;94m4027 | [0m  clinicalSettingId     Int?
[1;94m4028 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("MedicalRecordClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m4029 | [0m  status                MedicalRecordStatus   @default(DRAFT)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratoryTests` in model `MedicalRecord`: The relation field `laboratoryTests` on model `MedicalRecord` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4040[0m
[1;94m   | [0m
[1;94m4039 | [0m  prescriptions         Prescription[]        @relation("PrescriptionMedicalRecords")
[1;94m4040 | [0m  [1;91mlaboratoryTests       Laboratory[]          @relation("MedicalRecordLaboratoryTests")[0m
[1;94m4041 | [0m  radiologyTests        Radiology[]           @relation("MedicalRecordRadiology")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `radiologyTestRecords` in model `MedicalRecord`: The relation field `radiologyTestRecords` on model `MedicalRecord` is missing an opposite relation field on the model `RadiologyTest`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4042[0m
[1;94m   | [0m
[1;94m4041 | [0m  radiologyTests        Radiology[]           @relation("MedicalRecordRadiology")
[1;94m4042 | [0m  [1;91mradiologyTestRecords  RadiologyTest[]       @relation("MedicalRecordRadiologyTests")[0m
[1;94m4043 | [0m  maternity             Maternity?            @relation("MedicalRecordMaternity")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reportedBy` in model `Helpdesk`: The relation field `reportedBy` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4091[0m
[1;94m   | [0m
[1;94m4090 | [0m  reportedById          Int?                @unique
[1;94m4091 | [0m  [1;91mreportedBy            User?               @relation("ReportedBy", fields: [reportedById], references: [id])[0m
[1;94m4092 | [0m  assignedToId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `assignedTo` in model `Helpdesk`: The relation field `assignedTo` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4093[0m
[1;94m   | [0m
[1;94m4092 | [0m  assignedToId          Int?                @unique
[1;94m4093 | [0m  [1;91massignedTo            User?               @relation("AssignedTo", fields: [assignedToId], references: [id])[0m
[1;94m4094 | [0m  doctorId              Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Helpdesk`: The relation field `clinicalSetting` on model `Helpdesk` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4099[0m
[1;94m   | [0m
[1;94m4098 | [0m  clinicalSettingId     Int?                @unique
[1;94m4099 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("HelpdeskClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m4100 | [0m  patientId             Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Helpdesk`: The relation field `patient` on model `Helpdesk` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4101[0m
[1;94m   | [0m
[1;94m4100 | [0m  patientId             Int?                @unique
[1;94m4101 | [0m  [1;91mpatient               Patient?            @relation("PatientHelpdeskTickets", fields: [patientId], references: [id])[0m
[1;94m4102 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Helpdesk`: The relation field `admission` on model `Helpdesk` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4103[0m
[1;94m   | [0m
[1;94m4102 | [0m  admissionId           Int?                @unique
[1;94m4103 | [0m  [1;91madmission             Admission?          @relation("HelpdeskAdmissions", fields: [admissionId], references: [id])[0m
[1;94m4104 | [0m  appointmentId         Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `Helpdesk`: The relation field `appointment` on model `Helpdesk` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4105[0m
[1;94m   | [0m
[1;94m4104 | [0m  appointmentId         Int?                @unique
[1;94m4105 | [0m  [1;91mappointment           Appointment?        @relation("HelpdeskAppointments", fields: [appointmentId], references: [id])[0m
[1;94m4106 | [0m  invoiceId             Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `invoice` in model `Helpdesk`: The relation field `invoice` on model `Helpdesk` is missing an opposite relation field on the model `Invoice`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4107[0m
[1;94m   | [0m
[1;94m4106 | [0m  invoiceId             Int?                @unique
[1;94m4107 | [0m  [1;91minvoice               Invoice?            @relation("HelpdeskInvoices", fields: [invoiceId], references: [id])[0m
[1;94m4108 | [0m  fixedAssetId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `fixedAsset` in model `Helpdesk`: The relation field `fixedAsset` on model `Helpdesk` is missing an opposite relation field on the model `FixedAsset`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4109[0m
[1;94m   | [0m
[1;94m4108 | [0m  fixedAssetId          Int?                @unique
[1;94m4109 | [0m  [1;91mfixedAsset            FixedAsset?         @relation("HelpdeskFixedAssets", fields: [fixedAssetId], references: [id])[0m
[1;94m4110 | [0m  createdDate           DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Helpdesk`: The relation field `createdBy` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4116[0m
[1;94m   | [0m
[1;94m4115 | [0m  createdById           Int?                @unique
[1;94m4116 | [0m  [1;91mcreatedBy             User?               @relation("HelpdeskCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4117 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Helpdesk`: The relation field `updatedBy` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4118[0m
[1;94m   | [0m
[1;94m4117 | [0m  updatedById           Int?                @unique
[1;94m4118 | [0m  [1;91mupdatedBy             User?               @relation("HelpdeskUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4119 | [0m  auditLogs             AuditLog[]          @relation("HelpdeskAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Helpdesk`: The relation field `auditLogs` on model `Helpdesk` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4119[0m
[1;94m   | [0m
[1;94m4118 | [0m  updatedBy             User?               @relation("HelpdeskUpdatedBy", fields: [updatedById], references: [id])
[1;94m4119 | [0m  [1;91mauditLogs             AuditLog[]          @relation("HelpdeskAuditLogs")[0m
[1;94m4120 | [0m  ticketComments        TicketComment[]     @relation("TicketComments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `TicketComment`: The relation field `createdBy` on model `TicketComment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4134[0m
[1;94m   | [0m
[1;94m4133 | [0m  createdById           Int?                @unique
[1;94m4134 | [0m  [1;91mcreatedBy             User?               @relation("TicketCommentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4135 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `TicketComment`: The relation field `auditLogs` on model `TicketComment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4137[0m
[1;94m   | [0m
[1;94m4136 | [0m  updatedAt             DateTime            @updatedAt
[1;94m4137 | [0m  [1;91mauditLogs             AuditLog[]          @relation("TicketCommentAuditLogs")[0m
[1;94m4138 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `TicketAttachment`: The relation field `uploadedBy` on model `TicketAttachment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4149[0m
[1;94m   | [0m
[1;94m4148 | [0m  uploadedById          Int?                @unique
[1;94m4149 | [0m  [1;91muploadedBy            User?               @relation("TicketAttachmentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m4150 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `TicketAttachment`: The relation field `auditLogs` on model `TicketAttachment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4152[0m
[1;94m   | [0m
[1;94m4151 | [0m  updatedAt             DateTime            @updatedAt
[1;94m4152 | [0m  [1;91mauditLogs             AuditLog[]          @relation("TicketAttachmentAuditLogs")[0m
[1;94m4153 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `TicketNotification`: The relation field `recipient` on model `TicketNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4164[0m
[1;94m   | [0m
[1;94m4163 | [0m  recipientId           Int?                @unique
[1;94m4164 | [0m  [1;91mrecipient             User?               @relation("TicketNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m4165 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `ReferralProgram`: The relation field `department` on model `ReferralProgram` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4208[0m
[1;94m   | [0m
[1;94m4207 | [0m  departmentId        Int?
[1;94m4208 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id], map: "ReferralProgram_department_fkey")[0m
[1;94m4209 | [0m  targetAudience      String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Referral`: The relation field `patient` on model `Referral` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4237[0m
[1;94m   | [0m
[1;94m4236 | [0m  patientId           Int?
[1;94m4237 | [0m  [1;91mpatient             Patient?              @relation(fields: [patientId], references: [id], map: "Referral_patient_fkey")[0m
[1;94m4238 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `doctor` in model `Referral`: The relation field `doctor` on model `Referral` is missing an opposite relation field on the model `Doctor`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4239[0m
[1;94m   | [0m
[1;94m4238 | [0m  doctorId            Int?
[1;94m4239 | [0m  [1;91mdoctor              Doctor?               @relation(fields: [doctorId], references: [id], map: "Referral_doctor_fkey")[0m
[1;94m4240 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Referral`: The relation field `department` on model `Referral` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4241[0m
[1;94m   | [0m
[1;94m4240 | [0m  departmentId        Int?
[1;94m4241 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id], map: "Referral_department_fkey")[0m
[1;94m4242 | [0m  status              ReferralStatus        @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `Referral`: The relation field `medicalRecord` on model `Referral` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4248[0m
[1;94m   | [0m
[1;94m4247 | [0m  medicalRecordId     Int?
[1;94m4248 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation(fields: [medicalRecordId], references: [id], map: "Referral_medicalRecord_fkey")[0m
[1;94m4249 | [0m  claimId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `Referral`: The relation field `claim` on model `Referral` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4250[0m
[1;94m   | [0m
[1;94m4249 | [0m  claimId             Int?
[1;94m4250 | [0m  [1;91mclaim               Claim?                @relation(fields: [claimId], references: [id], map: "Referral_claim_fkey")[0m
[1;94m4251 | [0m  nhifClaimId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `Referral`: The relation field `nhifClaim` on model `Referral` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4252[0m
[1;94m   | [0m
[1;94m4251 | [0m  nhifClaimId         Int?
[1;94m4252 | [0m  [1;91mnhifClaim           NhifClaim?            @relation(fields: [nhifClaimId], references: [id], map: "Referral_nhifClaim_fkey")[0m
[1;94m4253 | [0m  rewardId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4273[0m
[1;94m   | [0m
[1;94m4272 | [0m  referralId          Int
[1;94m4273 | [0m  [1;91mreferral            Referral              @relation(fields: [referralId], references: [id], map: "ReferralReward_referral_fkey")[0m
[1;94m4274 | [0m  rewardType          RewardType
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4254[0m
[1;94m   | [0m
[1;94m4253 | [0m  rewardId            Int?
[1;94m4254 | [0m  [1;91mreward              ReferralReward?       @relation(fields: [rewardId], references: [id], map: "Referral_reward_fkey")[0m
[1;94m4255 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4273[0m
[1;94m   | [0m
[1;94m4272 | [0m  referralId          Int
[1;94m4273 | [0m  [1;91mreferral            Referral              @relation(fields: [referralId], references: [id], map: "ReferralReward_referral_fkey")[0m
[1;94m4274 | [0m  rewardType          RewardType
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4254[0m
[1;94m   | [0m
[1;94m4253 | [0m  rewardId            Int?
[1;94m4254 | [0m  [1;91mreward              ReferralReward?       @relation(fields: [rewardId], references: [id], map: "Referral_reward_fkey")[0m
[1;94m4255 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `referralId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4273[0m
[1;94m   | [0m
[1;94m4272 | [0m  referralId          Int
[1;94m4273 | [0m  [1;91mreferral            Referral              @relation(fields: [referralId], references: [id], map: "ReferralReward_referral_fkey")[0m
[1;94m4274 | [0m  rewardType          RewardType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `MarketingCampaign`: The relation field `auditLogs` on model `MarketingCampaign` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4314[0m
[1;94m   | [0m
[1;94m4313 | [0m  updatedBy           User?                 @relation("CampaignUpdatedBy", fields: [updatedById], references: [id], map: "MarketingCampaign_updatedBy_fkey")
[1;94m4314 | [0m  [1;91mauditLogs           AuditLog[]            @relation("MarketingCampaignAuditLogs")[0m
[1;94m4315 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `SocialService`: The relation field `billing` on model `SocialService` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4377[0m
[1;94m   | [0m
[1;94m4376 | [0m  billingId           Int?
[1;94m4377 | [0m  [1;91mbilling             Billing?              @relation("SocialServiceBilling", fields: [billingId], references: [id])[0m
[1;94m4378 | [0m  createdById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referral` in model `SocialServiceCase`: The relation field `referral` on model `SocialServiceCase` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4414[0m
[1;94m   | [0m
[1;94m4413 | [0m  referralId          Int?
[1;94m4414 | [0m  [1;91mreferral            Referral?             @relation("SocialServiceCaseReferrals", fields: [referralId], references: [id])[0m
[1;94m4415 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `SocialServiceCase`: The relation field `billing` on model `SocialServiceCase` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4418[0m
[1;94m   | [0m
[1;94m4417 | [0m  billingId           Int?
[1;94m4418 | [0m  [1;91mbilling             Billing?              @relation("SocialServiceCaseBilling", fields: [billingId], references: [id])[0m
[1;94m4419 | [0m  claimId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `SocialServiceCase`: The relation field `claim` on model `SocialServiceCase` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4420[0m
[1;94m   | [0m
[1;94m4419 | [0m  claimId             Int?
[1;94m4420 | [0m  [1;91mclaim               Claim?                @relation("SocialServiceCaseClaims", fields: [claimId], references: [id])[0m
[1;94m4421 | [0m  nhifClaimId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `SocialServiceCase`: The relation field `createdBy` on model `SocialServiceCase` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4429[0m
[1;94m   | [0m
[1;94m4428 | [0m  createdById         Int?
[1;94m4429 | [0m  [1;91mcreatedBy           User?               @relation("CaseCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4430 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `SocialServiceCase`: The relation field `updatedBy` on model `SocialServiceCase` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4431[0m
[1;94m   | [0m
[1;94m4430 | [0m  updatedById         Int?
[1;94m4431 | [0m  [1;91mupdatedBy           User?               @relation("CaseUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4432 | [0m  auditLogs           AuditLog[]            @relation("SocialServiceCaseAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ExternalAgency`: The relation field `createdBy` on model `ExternalAgency` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4454[0m
[1;94m   | [0m
[1;94m4453 | [0m  createdById         Int?
[1;94m4454 | [0m  [1;91mcreatedBy           User?               @relation("AgencyCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4455 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ExternalAgency`: The relation field `updatedBy` on model `ExternalAgency` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4456[0m
[1;94m   | [0m
[1;94m4455 | [0m  updatedById         Int?
[1;94m4456 | [0m  [1;91mupdatedBy           User?               @relation("AgencyUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4457 | [0m  auditLogs           AuditLog[]            @relation("ExternalAgencyAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patientRecords` in model `User`: The relation field `patientRecords` on model `User` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4544[0m
[1;94m   | [0m
[1;94m4543 | [0m  auditLogs             AuditLog[]            @relation("PerformedBy")
[1;94m4544 | [0m  [1;91mpatientRecords        Patient[]             @relation("PatientUser")[0m
[1;94m4545 | [0m  patientCreated        Patient[]             @relation("PatientCreatedBy")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Utility`: The relation field `billing` on model `Utility` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4839[0m
[1;94m   | [0m
[1;94m4838 | [0m  billingId           Int?
[1;94m4839 | [0m  [1;91mbilling             Billing?              @relation("UtilityBilling", fields: [billingId], references: [id])[0m
[1;94m4840 | [0m  createdById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Utility`: The relation field `createdBy` on model `Utility` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4841[0m
[1;94m   | [0m
[1;94m4840 | [0m  createdById         Int?
[1;94m4841 | [0m  [1;91mcreatedBy           User?                 @relation("UtilityCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4842 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Utility`: The relation field `updatedBy` on model `Utility` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4843[0m
[1;94m   | [0m
[1;94m4842 | [0m  updatedById         Int?
[1;94m4843 | [0m  [1;91mupdatedBy           User?                 @relation("UtilityUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4844 | [0m  auditLogs           AuditLog[]            @relation("UtilityAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Utility`: The relation field `auditLogs` on model `Utility` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4844[0m
[1;94m   | [0m
[1;94m4843 | [0m  updatedBy           User?                 @relation("UtilityUpdatedBy", fields: [updatedById], references: [id])
[1;94m4844 | [0m  [1;91mauditLogs           AuditLog[]            @relation("UtilityAuditLogs")[0m
[1;94m4845 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `UtilityProvider`: The relation field `createdBy` on model `UtilityProvider` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4866[0m
[1;94m   | [0m
[1;94m4865 | [0m  createdById         Int?
[1;94m4866 | [0m  [1;91mcreatedBy           User?                 @relation("ProviderCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4867 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `UtilityProvider`: The relation field `updatedBy` on model `UtilityProvider` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4868[0m
[1;94m   | [0m
[1;94m4867 | [0m  updatedById         Int?
[1;94m4868 | [0m  [1;91mupdatedBy           User?                 @relation("ProviderUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4869 | [0m  auditLogs           AuditLog[]            @relation("UtilityProviderAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `UtilityProvider`: The relation field `auditLogs` on model `UtilityProvider` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4869[0m
[1;94m   | [0m
[1;94m4868 | [0m  updatedBy           User?                 @relation("ProviderUpdatedBy", fields: [updatedById], references: [id])
[1;94m4869 | [0m  [1;91mauditLogs           AuditLog[]            @relation("UtilityProviderAuditLogs")[0m
[1;94m4870 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `UtilityMaintenance`: The relation field `performedBy` on model `UtilityMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4883[0m
[1;94m   | [0m
[1;94m4882 | [0m  performedById       Int?
[1;94m4883 | [0m  [1;91mperformedBy         User?                 @relation("MaintenancePerformedBy", fields: [performedById], references: [id])[0m
[1;94m4884 | [0m  cost                Float?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `UtilityMaintenance`: The relation field `createdBy` on model `UtilityMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4892[0m
[1;94m   | [0m
[1;94m4891 | [0m  createdById         Int?
[1;94m4892 | [0m  [1;91mcreatedBy           User?                 @relation("MaintenanceCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4893 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `UtilityMaintenance`: The relation field `updatedBy` on model `UtilityMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4894[0m
[1;94m   | [0m
[1;94m4893 | [0m  updatedById         Int?
[1;94m4894 | [0m  [1;91mupdatedBy           User?                 @relation("MaintenanceUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4895 | [0m  auditLogs           AuditLog[]            @relation("UtilityMaintenanceAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `UtilityMaintenance`: The relation field `auditLogs` on model `UtilityMaintenance` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4895[0m
[1;94m   | [0m
[1;94m4894 | [0m  updatedBy           User?                 @relation("MaintenanceUpdatedBy", fields: [updatedById], references: [id])
[1;94m4895 | [0m  [1;91mauditLogs           AuditLog[]            @relation("UtilityMaintenanceAuditLogs")[0m
[1;94m4896 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Verification`: The relation field `patient` on model `Verification` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4937[0m
[1;94m   | [0m
[1;94m4936 | [0m  patientId           Int?
[1;94m4937 | [0m  [1;91mpatient             Patient?              @relation(fields: [patientId], references: [id])[0m
[1;94m4938 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Verification`: The relation field `department` on model `Verification` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4953[0m
[1;94m   | [0m
[1;94m4952 | [0m  departmentId        Int?
[1;94m4953 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m4954 | [0m  verifiedById        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `VerificationConfiguration`: The relation field `department` on model `VerificationConfiguration` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4979[0m
[1;94m   | [0m
[1;94m4978 | [0m  departmentId        Int?
[1;94m4979 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m4980 | [0m  notes               String?
[1;94m   | [0m

Validation Error Count: 511
[Context: validate]

Prisma CLI Version : 5.22.0
