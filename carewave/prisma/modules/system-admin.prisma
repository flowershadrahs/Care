enum UserRole {
  ADMIN
  DOCTOR
  NURSE
  PHARMACIST
  RADIOLOGIST
  SOCIAL_WORKER
  PATIENT
  BILLING_OFFICER
  RECEPTIONIST
  LAB_TECHNICIAN
  IT_SUPPORT
}

enum PermissionLevel {
  FULL_ACCESS
  READ_ONLY
  WRITE
  RESTRICTED
}

enum SystemLogType {
  LOGIN
  LOGOUT
  DATA_MODIFICATION
  ERROR
  SECURITY
  SYSTEM_EVENT
}

model User {
  id                    Int                   @id @default(autoincrement())
  uuid                  String                @unique @default(uuid())
  email                 String                @unique
  name                  String
  password              String
  role                  UserRole              @default(PATIENT)
  status                String                @default("ACTIVE")
  departmentId          Int?
  department            Department?           @relation("UserDepartment", fields: [departmentId], references: [id])
  phone                 String?
  address               String?
  profileImage          String?
  lastLogin             DateTime?
  loginAttempts         Int                   @default(0)
  accountLocked         Boolean               @default(false)
  permissions           String?
  createdById           Int?
  createdBy             User?                 @relation("UserCreatedBy", fields: [createdById], references: [id])
  updatedById           Int?
  updatedBy             User?                 @relation("UserUpdatedBy", fields: [updatedById], references: [id])
  createdUsers          User[]                @relation("UserCreatedBy")
  updatedUsers          User[]                @relation("UserUpdatedBy")
  payrolls              Payroll[]
  cssdLogs              CSSDLog[]             @relation("LoggedBy")
  cssdRequisitions      CSSDRequisition[]     @relation("RequisitionRequestedBy")
  appointments          Appointment[]         @relation("BookedBy")
  dispensingRecords     DispensingRecord[]    @relation("DispensedBy")
  refunds               Refund[]              @relation("ProcessedBy")
  stockAdjustments      StockAdjustment[]     @relation("AdjustedBy")
  socialServiceCases    SocialServiceCase[]   @relation("SocialWorker")
  radiologyTests        RadiologyTest[]       @relation("Radiologist")
  nursingCare           NursingCare[]         @relation("NurseAssigned")
  nursingTasks          NursingTask[]         @relation("TaskAssignedNurse")
  nursingShifts         NursingShift[]        @relation("ShiftNurse")
  surgicalStaff         SurgicalStaff[]       @relation("SurgicalStaff")
  systemLogs            SystemLog[]           @relation("LoggedBy")
  auditLogs             AuditLog[]            @relation("PerformedBy")
  patientRecords        Patient[]             @relation("PatientUser")
  doctorRecords         Doctor[]              @relation("DoctorUser")
  dashboardsOwned       Dashboard[]           @relation("DashboardOwner")
  dashboardsCreated     Dashboard[]           @relation("DashboardCreatedBy")
  dashboardsUpdated     Dashboard[]           @relation("DashboardUpdatedBy")
  departmentsHeaded     Department[]          @relation("DepartmentHead")
  createdDepartments    Department[]          @relation("DepartmentCreatedBy")
  updatedDepartments    Department[]          @relation("DepartmentUpdatedBy")
  widgetCreated         DashboardWidget[]     @relation("WidgetCreatedBy")
  widgetUpdated         DashboardWidget[]     @relation("WidgetUpdatedBy")
  createdAt             DateTime              @default(now())
  updatedAt             DateTime              @updatedAt
}

model SystemConfiguration {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  key                 String                @unique
  value               String
  description         String?
  category            String?
  status              String                @default("ACTIVE")
  createdById         Int?
  createdBy           User?                 @relation("ConfigCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?
  updatedBy           User?                 @relation("ConfigUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("SystemConfigAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model SystemLog {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  userId              Int?
  user                User?                 @relation("LoggedBy", fields: [userId], references: [id])
  type                SystemLogType
  description         String
  ipAddress           String?
  deviceInfo          String?
  module              String?
  action              String
  entityId            Int?
  entityType          String?
  createdAt           DateTime              @default(now())
}

model RolePermission {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  role                UserRole
  module              String
  permissionLevel     PermissionLevel
  description         String?
  createdById         Int?
  createdBy           User?                 @relation("PermissionCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?
  updatedBy           User?                 @relation("PermissionUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("RolePermissionAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model AuditLog {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  action              String
  entity              String
  entityId            Int
  userId              Int?
  user                User?                 @relation(fields: [userId], references: [id])
  dashboard           Dashboard?            @relation("DashboardAuditLogs", fields: [entityId], references: [id])
  details             String?
  createdAt           DateTime              @default(now())
}