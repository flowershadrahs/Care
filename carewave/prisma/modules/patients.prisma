// Represents a patient in the hospital system
model Patient {
  id              String           @id @default(uuid())
  firstName       String
  lastName        String
  dateOfBirth     DateTime
  gender          String
  phone           String?
  email           String?          @unique
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  medicalRecords  MedicalRecord[]  @relation("PatientMedicalRecords")
  appointments    Appointment[]    @relation("PatientAppointments")
  admissions      Admission[]      @relation("PatientAdmissions")
  addresses       PatientAddress[] @relation("PatientAddresses")
  nextOfKin       NextOfKin?       @relation("PatientNextOfKin")
  insuranceInfo   InsuranceInfo?   @relation("PatientInsurance")
  supportCases    PatientSupportCase[] @relation("PatientSupportCases")
}

// Represents a patient's address
model PatientAddress {
  id        String   @id @default(uuid())
  patientId String
  patient   Patient  @relation("PatientAddresses", fields: [patientId], references: [id], onDelete: Cascade)
  street    String
  city      String
  country   String
  postalCode String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Represents a patient's next of kin
model NextOfKin {
  id        String   @id @default(uuid())
  patientId String   @unique
  patient   Patient  @relation("PatientNextOfKin", fields: [patientId], references: [id], onDelete: Cascade)
  firstName String
  lastName  String
  relationship String
  phone     String?
  email     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Represents a patient's insurance information
model InsuranceInfo {
  id            String   @id @default(uuid())
  patientId     String   @unique
  patient       Patient  @relation("PatientInsurance", fields: [patientId], references: [id], onDelete: Cascade)
  provider      String
  policyNumber  String   @unique
  expiryDate    DateTime?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}