enum MaternityStatus {
  ACTIVE
  DISCHARGED
  TRANSFERRED
  CANCELLED
  PENDING
}

enum DeliveryType {
  NORMAL
  CESAREAN
  ASSISTED
}



model Maternity {
  id                    Int                 @id @default(autoincrement())
  uuid                  String              @unique @default(uuid())
  patientId             Int
  patient               Patient             @relation(fields: [patientId], references: [id])
  doctorId              Int?                // Link to attending doctor
  doctor                Doctor?             @relation("DoctorMaternityRecords", fields: [doctorId], references: [id])
  admissionId           Int?                // Link to admission
  admission             Admission?          @relation(fields: [admissionId], references: [id])
  departmentId          Int?                // Link to maternity department
  department            Department?         @relation(fields: [departmentId], references: [id])
  clinicalSettingId     Int?                // Link to clinical setting
  clinicalSetting       ClinicalSetting?    @relation(fields: [clinicalSettingId], references: [id])
  status                MaternityStatus     @default(PENDING)
  expectedDeliveryDate  DateTime?           // Estimated delivery date
  deliveryDate          DateTime?           // Actual delivery date
  deliveryType          DeliveryType?       // Type of delivery
  gestationWeeks        Int?                // Gestational age in weeks
  prenatalCarePlan      String?             // JSON or text for prenatal care plan
  complications         String?             // JSON or text for complications (e.g., {"type": "Preeclampsia"})
  babyDetails           String?             // JSON for baby details (e.g., {"gender": "Male", "weight": 3.2})
  clinicalRecordId      Int?                // Link to clinical record
  clinicalRecord        ClinicalRecord?     @relation(fields: [clinicalRecordId], references: [id])
  billingId             Int?                // Link to billing for maternity services
  billing               Billing?            @relation(fields: [billingId], references: [id])
  claimId               Int?                // Link to insurance claim
  claim                 Claim?              @relation(fields: [claimId], references: [id])
  wardId                Int?                // Link to maternity ward
  ward                  Ward?               @relation(fields: [wardId], references: [id])
  bedId                 Int?                // Link to specific bed
  bed                   Bed?                @relation(fields: [bedId], references: [id])
  laboratoryId          Int?                // Link to lab tests ordered
  laboratory            Laboratory?         @relation(fields: [laboratoryId], references: [id])
  radiologyId           Int?                // Link to radiology tests ordered
  radiology             Radiology?          @relation(fields: [radiologyId], references: [id])
  pharmacyId            Int?                // Link to prescriptions
  pharmacy              Pharmacy?           @relation(fields: [pharmacyId], references: [id])
  operationTheatreId    Int?                // Link to operation theatre for cesarean
  operationTheatre      OperationTheatre?   @relation(fields: [operationTheatreId], references: [id])
  notes                 String?             // Additional notes
  createdById           Int?                // User who created the maternity record
  createdBy             User?               @relation("MaternityCreatedBy", fields: [createdById], references: [id])
  updatedById           Int?                // User who last updated
  updatedBy             User?               @relation("MaternityUpdatedBy", fields: [updatedById], references: [id])
  auditLogs             AuditLog[]          @relation("MaternityAuditLogs")
  maternityDocuments    MaternityDocument[] @relation("MaternityDocuments")
  maternityNotifications MaternityNotification[] @relation("MaternityNotifications")
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
}

model MaternityDocument {
  id                    Int                 @id @default(autoincrement())
  uuid                  String              @unique @default(uuid())
  maternityId           Int
  maternity             Maternity           @relation("MaternityDocuments", fields: [maternityId], references: [id])
  documentType          String              // e.g., "Ultrasound Report", "Birth Certificate"
  filePath              String              // Path to stored document
  description           String?             // Description of document
  uploadedById          Int?                // User who uploaded document
  uploadedBy            User?               @relation(fields: [uploadedById], references: [id])
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  auditLogs             AuditLog[]          @relation("MaternityDocumentAuditLogs")
}

model MaternityNotification {
  id                    Int                 @id @default(autoincrement())
  uuid                  String              @unique @default(uuid())
  maternityId           Int
  maternity             Maternity           @relation("MaternityNotifications", fields: [maternityId], references: [id])
  notificationType      String              // e.g., "SMS", "Email", "App Push"
  status                NotificationStatus  @default(PENDING)
  sentAt                DateTime?
  recipientId           Int?                // User or patient receiving notification
  recipient             User?               @relation(fields: [recipientId], references: [id])
  message               String?             // Notification content
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
}