Environment variables loaded from .env
Prisma schema loaded from prisma/schema.prisma
Datasource "db": PostgreSQL database "postgres", schema "public" at "aws-0-us-east-1.pooler.supabase.com:5432"


Error: Prisma schema validation - (validate wasm)
Error code: P1012
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `DashboardWidget` and `dashboardWidget` on Model `Admission` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:74[0m
[1;94m   | [0m
[1;94m73 | [0m  admissionId         Int?                  @unique
[1;94m74 | [0m  [1;91madmission           Admission?            @relation("DashboardWidgetAdmissions", fields: [admissionId], references: [id])[0m
[1;94m75 | [0m  billingId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `DashboardWidget` and `dashboardWidget` on Model `Admission` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:569[0m
[1;94m   | [0m
[1;94m568 | [0m  discharge            Discharge?          @relation("AdmissionDischarge")
[1;94m569 | [0m  [1;91mdashboardWidget      DashboardWidget?    @relation("DashboardWidgetAdmissions", fields: [id], references: [id])[0m
[1;94m570 | [0m  createdAt            DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `DashboardWidget` and `dashboardWidget` on Model `Admission` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:74[0m
[1;94m   | [0m
[1;94m73 | [0m  admissionId         Int?                  @unique
[1;94m74 | [0m  [1;91madmission           Admission?            @relation("DashboardWidgetAdmissions", fields: [admissionId], references: [id])[0m
[1;94m75 | [0m  billingId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `DashboardWidget` and `dashboardWidget` on Model `Admission` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:569[0m
[1;94m   | [0m
[1;94m568 | [0m  discharge            Discharge?          @relation("AdmissionDischarge")
[1;94m569 | [0m  [1;91mdashboardWidget      DashboardWidget?    @relation("DashboardWidgetAdmissions", fields: [id], references: [id])[0m
[1;94m570 | [0m  createdAt            DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `medicalRecord` on Model `DashboardWidget` and `dashboardWidget` on Model `MedicalRecord` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:94[0m
[1;94m   | [0m
[1;94m93 | [0m  medicalRecordId     Int?                  @unique
[1;94m94 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("DashboardWidgetMedicalRecords", fields: [medicalRecordId], references: [id])[0m
[1;94m95 | [0m  maternityId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `medicalRecord` on Model `DashboardWidget` and `dashboardWidget` on Model `MedicalRecord` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4050[0m
[1;94m   | [0m
[1;94m4049 | [0m  maternity             Maternity?            @relation("MedicalRecordMaternity")
[1;94m4050 | [0m  [1;91mdashboardWidget       DashboardWidget?      @relation("DashboardWidgetMedicalRecords", fields: [id], references: [id])[0m
[1;94m4051 | [0m  auditLogs             AuditLog[]            @relation("MedicalRecordAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `medicalRecord` on Model `DashboardWidget` and `dashboardWidget` on Model `MedicalRecord` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:94[0m
[1;94m   | [0m
[1;94m93 | [0m  medicalRecordId     Int?                  @unique
[1;94m94 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("DashboardWidgetMedicalRecords", fields: [medicalRecordId], references: [id])[0m
[1;94m95 | [0m  maternityId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `medicalRecord` on Model `DashboardWidget` and `dashboardWidget` on Model `MedicalRecord` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4050[0m
[1;94m   | [0m
[1;94m4049 | [0m  maternity             Maternity?            @relation("MedicalRecordMaternity")
[1;94m4050 | [0m  [1;91mdashboardWidget       DashboardWidget?      @relation("DashboardWidgetMedicalRecords", fields: [id], references: [id])[0m
[1;94m4051 | [0m  auditLogs             AuditLog[]            @relation("MedicalRecordAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `queue` on Model `Appointment` and `appointment` on Model `Queue` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:396[0m
[1;94m   | [0m
[1;94m395 | [0m  queueId               Int?                @unique
[1;94m396 | [0m  [1;91mqueue                 Queue?              @relation("AppointmentQueue", fields: [queueId], references: [id])[0m
[1;94m397 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `queue` on Model `Appointment` and `appointment` on Model `Queue` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:828[0m
[1;94m   | [0m
[1;94m827 | [0m  appointmentId       Int?                  @unique
[1;94m828 | [0m  [1;91mappointment         Appointment?          @relation("AppointmentQueue", fields: [appointmentId], references: [id])[0m
[1;94m829 | [0m  admissionId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `queue` on Model `Appointment` and `appointment` on Model `Queue` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:396[0m
[1;94m   | [0m
[1;94m395 | [0m  queueId               Int?                @unique
[1;94m396 | [0m  [1;91mqueue                 Queue?              @relation("AppointmentQueue", fields: [queueId], references: [id])[0m
[1;94m397 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `queue` on Model `Appointment` and `appointment` on Model `Queue` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:828[0m
[1;94m   | [0m
[1;94m827 | [0m  appointmentId       Int?                  @unique
[1;94m828 | [0m  [1;91mappointment         Appointment?          @relation("AppointmentQueue", fields: [appointmentId], references: [id])[0m
[1;94m829 | [0m  admissionId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `emergency` on Model `Admission` and `admission` on Model `Emergency` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:548[0m
[1;94m   | [0m
[1;94m547 | [0m  emergencyId          Int?                @unique
[1;94m548 | [0m  [1;91memergency            Emergency?          @relation("AdmissionEmergency", fields: [emergencyId], references: [id])[0m
[1;94m549 | [0m  billingId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `emergency` on Model `Admission` and `admission` on Model `Emergency` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:722[0m
[1;94m   | [0m
[1;94m721 | [0m  admissionId           Int?                @unique
[1;94m722 | [0m  [1;91madmission             Admission?          @relation("AdmissionEmergency", fields: [admissionId], references: [id])[0m
[1;94m723 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `emergency` on Model `Admission` and `admission` on Model `Emergency` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:548[0m
[1;94m   | [0m
[1;94m547 | [0m  emergencyId          Int?                @unique
[1;94m548 | [0m  [1;91memergency            Emergency?          @relation("AdmissionEmergency", fields: [emergencyId], references: [id])[0m
[1;94m549 | [0m  billingId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `emergency` on Model `Admission` and `admission` on Model `Emergency` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:722[0m
[1;94m   | [0m
[1;94m721 | [0m  admissionId           Int?                @unique
[1;94m722 | [0m  [1;91madmission             Admission?          @relation("AdmissionEmergency", fields: [admissionId], references: [id])[0m
[1;94m723 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `queue` on Model `Admission` and `admission` on Model `Queue` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:554[0m
[1;94m   | [0m
[1;94m553 | [0m  queueId              Int?                @unique
[1;94m554 | [0m  [1;91mqueue                Queue?              @relation("AdmissionQueue", fields: [queueId], references: [id])[0m
[1;94m555 | [0m  departmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `queue` on Model `Admission` and `admission` on Model `Queue` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:830[0m
[1;94m   | [0m
[1;94m829 | [0m  admissionId         Int?                  @unique
[1;94m830 | [0m  [1;91madmission           Admission?            @relation("AdmissionQueue", fields: [admissionId], references: [id])[0m
[1;94m831 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `queue` on Model `Admission` and `admission` on Model `Queue` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:554[0m
[1;94m   | [0m
[1;94m553 | [0m  queueId              Int?                @unique
[1;94m554 | [0m  [1;91mqueue                Queue?              @relation("AdmissionQueue", fields: [queueId], references: [id])[0m
[1;94m555 | [0m  departmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `queue` on Model `Admission` and `admission` on Model `Queue` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:830[0m
[1;94m   | [0m
[1;94m829 | [0m  admissionId         Int?                  @unique
[1;94m830 | [0m  [1;91madmission           Admission?            @relation("AdmissionQueue", fields: [admissionId], references: [id])[0m
[1;94m831 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referral` in model `Admission`: The relation field `referral` on model `Admission` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:559[0m
[1;94m   | [0m
[1;94m558 | [0m  referralId           Int?                @unique
[1;94m559 | [0m  [1;91mreferral             Referral?           @relation("AdmissionReferral", fields: [referralId], references: [id])[0m
[1;94m560 | [0m  insuranceId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `Admission` and `admission` on Model `DashboardWidget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:569[0m
[1;94m   | [0m
[1;94m568 | [0m  discharge            Discharge?          @relation("AdmissionDischarge")
[1;94m569 | [0m  [1;91mdashboardWidget      DashboardWidget?    @relation("DashboardWidgetAdmissions", fields: [id], references: [id])[0m
[1;94m570 | [0m  createdAt            DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `Admission` and `admission` on Model `DashboardWidget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:74[0m
[1;94m   | [0m
[1;94m73 | [0m  admissionId         Int?                  @unique
[1;94m74 | [0m  [1;91madmission           Admission?            @relation("DashboardWidgetAdmissions", fields: [admissionId], references: [id])[0m
[1;94m75 | [0m  billingId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `Admission` and `admission` on Model `DashboardWidget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:569[0m
[1;94m   | [0m
[1;94m568 | [0m  discharge            Discharge?          @relation("AdmissionDischarge")
[1;94m569 | [0m  [1;91mdashboardWidget      DashboardWidget?    @relation("DashboardWidgetAdmissions", fields: [id], references: [id])[0m
[1;94m570 | [0m  createdAt            DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `Admission` and `admission` on Model `DashboardWidget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:74[0m
[1;94m   | [0m
[1;94m73 | [0m  admissionId         Int?                  @unique
[1;94m74 | [0m  [1;91madmission           Admission?            @relation("DashboardWidgetAdmissions", fields: [admissionId], references: [id])[0m
[1;94m75 | [0m  billingId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `Emergency` and `emergency` on Model `Admission` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:722[0m
[1;94m   | [0m
[1;94m721 | [0m  admissionId           Int?                @unique
[1;94m722 | [0m  [1;91madmission             Admission?          @relation("AdmissionEmergency", fields: [admissionId], references: [id])[0m
[1;94m723 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `Emergency` and `emergency` on Model `Admission` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:548[0m
[1;94m   | [0m
[1;94m547 | [0m  emergencyId          Int?                @unique
[1;94m548 | [0m  [1;91memergency            Emergency?          @relation("AdmissionEmergency", fields: [emergencyId], references: [id])[0m
[1;94m549 | [0m  billingId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `Emergency` and `emergency` on Model `Admission` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:722[0m
[1;94m   | [0m
[1;94m721 | [0m  admissionId           Int?                @unique
[1;94m722 | [0m  [1;91madmission             Admission?          @relation("AdmissionEmergency", fields: [admissionId], references: [id])[0m
[1;94m723 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `Emergency` and `emergency` on Model `Admission` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:548[0m
[1;94m   | [0m
[1;94m547 | [0m  emergencyId          Int?                @unique
[1;94m548 | [0m  [1;91memergency            Emergency?          @relation("AdmissionEmergency", fields: [emergencyId], references: [id])[0m
[1;94m549 | [0m  billingId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Emergency` and `emergency` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:738[0m
[1;94m   | [0m
[1;94m737 | [0m  radiologyId           Int?                @unique
[1;94m738 | [0m  [1;91mradiology             Radiology?          @relation("EmergencyRadiology", fields: [radiologyId], references: [id])[0m
[1;94m739 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Emergency` and `emergency` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1166[0m
[1;94m   | [0m
[1;94m1165 | [0m  emergencyId         Int?                  @unique
[1;94m1166 | [0m  [1;91memergency           Emergency?            @relation("EmergencyRadiology", fields: [emergencyId], references: [id])[0m
[1;94m1167 | [0m  invoiceId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Emergency` and `emergency` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:738[0m
[1;94m   | [0m
[1;94m737 | [0m  radiologyId           Int?                @unique
[1;94m738 | [0m  [1;91mradiology             Radiology?          @relation("EmergencyRadiology", fields: [radiologyId], references: [id])[0m
[1;94m739 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Emergency` and `emergency` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1166[0m
[1;94m   | [0m
[1;94m1165 | [0m  emergencyId         Int?                  @unique
[1;94m1166 | [0m  [1;91memergency           Emergency?            @relation("EmergencyRadiology", fields: [emergencyId], references: [id])[0m
[1;94m1167 | [0m  invoiceId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Emergency`: The relation field `billing` on model `Emergency` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:744[0m
[1;94m   | [0m
[1;94m743 | [0m  billingId             Int?                @unique
[1;94m744 | [0m  [1;91mbilling               Billing?            @relation("EmergencyBilling", fields: [billingId], references: [id])[0m
[1;94m745 | [0m  claimId               Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `Emergency`: The relation field `claim` on model `Emergency` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:746[0m
[1;94m   | [0m
[1;94m745 | [0m  claimId               Int?                @unique
[1;94m746 | [0m  [1;91mclaim                 Claim?              @relation("EmergencyClaims", fields: [claimId], references: [id])[0m
[1;94m747 | [0m  wardId                Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Emergency`: The relation field `createdBy` on model `Emergency` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:756[0m
[1;94m   | [0m
[1;94m755 | [0m  createdById           Int?                @unique
[1;94m756 | [0m  [1;91mcreatedBy             User?               @relation("EmergencyCreatedBy", fields: [createdById], references: [id])[0m
[1;94m757 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Emergency`: The relation field `updatedBy` on model `Emergency` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:758[0m
[1;94m   | [0m
[1;94m757 | [0m  updatedById           Int?                @unique
[1;94m758 | [0m  [1;91mupdatedBy             User?               @relation("EmergencyUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m759 | [0m  auditLogs             AuditLog[]          @relation("EmergencyAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Emergency`: The relation field `auditLogs` on model `Emergency` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:759[0m
[1;94m   | [0m
[1;94m758 | [0m  updatedBy             User?               @relation("EmergencyUpdatedBy", fields: [updatedById], references: [id])
[1;94m759 | [0m  [1;91mauditLogs             AuditLog[]          @relation("EmergencyAuditLogs")[0m
[1;94m760 | [0m  emergencyDocuments    EmergencyDocument[] @relation("EmergencyDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `EmergencyDocument`: The relation field `uploadedBy` on model `EmergencyDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:775[0m
[1;94m   | [0m
[1;94m774 | [0m  uploadedById          Int?                @unique
[1;94m775 | [0m  [1;91muploadedBy            User?               @relation("EmergencyDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m776 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `EmergencyDocument`: The relation field `auditLogs` on model `EmergencyDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:778[0m
[1;94m   | [0m
[1;94m777 | [0m  updatedAt             DateTime            @updatedAt
[1;94m778 | [0m  [1;91mauditLogs             AuditLog[]          @relation("EmergencyDocumentAuditLogs")[0m
[1;94m779 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `EmergencyNotification`: The relation field `recipient` on model `EmergencyNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:790[0m
[1;94m   | [0m
[1;94m789 | [0m  recipientId           Int?                @unique
[1;94m790 | [0m  [1;91mrecipient             User?               @relation("EmergencyNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m791 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Queue`: The relation field `patient` on model `Queue` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:826[0m
[1;94m   | [0m
[1;94m825 | [0m  patientId           Int?                  @unique
[1;94m826 | [0m  [1;91mpatient             Patient?              @relation("PatientQueue", fields: [patientId], references: [id])[0m
[1;94m827 | [0m  appointmentId       Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `Queue` and `queue` on Model `Appointment` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:828[0m
[1;94m   | [0m
[1;94m827 | [0m  appointmentId       Int?                  @unique
[1;94m828 | [0m  [1;91mappointment         Appointment?          @relation("AppointmentQueue", fields: [appointmentId], references: [id])[0m
[1;94m829 | [0m  admissionId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `Queue` and `queue` on Model `Appointment` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:396[0m
[1;94m   | [0m
[1;94m395 | [0m  queueId               Int?                @unique
[1;94m396 | [0m  [1;91mqueue                 Queue?              @relation("AppointmentQueue", fields: [queueId], references: [id])[0m
[1;94m397 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `Queue` and `queue` on Model `Appointment` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:828[0m
[1;94m   | [0m
[1;94m827 | [0m  appointmentId       Int?                  @unique
[1;94m828 | [0m  [1;91mappointment         Appointment?          @relation("AppointmentQueue", fields: [appointmentId], references: [id])[0m
[1;94m829 | [0m  admissionId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `appointment` on Model `Queue` and `queue` on Model `Appointment` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:396[0m
[1;94m   | [0m
[1;94m395 | [0m  queueId               Int?                @unique
[1;94m396 | [0m  [1;91mqueue                 Queue?              @relation("AppointmentQueue", fields: [queueId], references: [id])[0m
[1;94m397 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `Queue` and `queue` on Model `Admission` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:830[0m
[1;94m   | [0m
[1;94m829 | [0m  admissionId         Int?                  @unique
[1;94m830 | [0m  [1;91madmission           Admission?            @relation("AdmissionQueue", fields: [admissionId], references: [id])[0m
[1;94m831 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `Queue` and `queue` on Model `Admission` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:554[0m
[1;94m   | [0m
[1;94m553 | [0m  queueId              Int?                @unique
[1;94m554 | [0m  [1;91mqueue                Queue?              @relation("AdmissionQueue", fields: [queueId], references: [id])[0m
[1;94m555 | [0m  departmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `Queue` and `queue` on Model `Admission` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:830[0m
[1;94m   | [0m
[1;94m829 | [0m  admissionId         Int?                  @unique
[1;94m830 | [0m  [1;91madmission           Admission?            @relation("AdmissionQueue", fields: [admissionId], references: [id])[0m
[1;94m831 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `admission` on Model `Queue` and `queue` on Model `Admission` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:554[0m
[1;94m   | [0m
[1;94m553 | [0m  queueId              Int?                @unique
[1;94m554 | [0m  [1;91mqueue                Queue?              @relation("AdmissionQueue", fields: [queueId], references: [id])[0m
[1;94m555 | [0m  departmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Queue`: The relation field `clinicalSetting` on model `Queue` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:836[0m
[1;94m   | [0m
[1;94m835 | [0m  clinicalSettingId   Int?                  @unique
[1;94m836 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("QueueClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m837 | [0m  wardId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Queue`: The relation field `createdBy` on model `Queue` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:845[0m
[1;94m   | [0m
[1;94m844 | [0m  createdById         Int?                  @unique
[1;94m845 | [0m  [1;91mcreatedBy           User?                 @relation("QueueCreatedBy", fields: [createdById], references: [id])[0m
[1;94m846 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Queue`: The relation field `updatedBy` on model `Queue` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:847[0m
[1;94m   | [0m
[1;94m846 | [0m  updatedById         Int?                  @unique
[1;94m847 | [0m  [1;91mupdatedBy           User?                 @relation("QueueUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m848 | [0m  queueLogs           QueueLog[]            @relation("QueueLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Queue`: The relation field `auditLogs` on model `Queue` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:850[0m
[1;94m   | [0m
[1;94m849 | [0m  notifications       QueueNotification[]   @relation("QueueNotifications")
[1;94m850 | [0m  [1;91mauditLogs           AuditLog[]            @relation("QueueAuditLogs")[0m
[1;94m851 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `actionBy` in model `QueueLog`: The relation field `actionBy` on model `QueueLog` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:863[0m
[1;94m   | [0m
[1;94m862 | [0m  actionById          Int?                  @unique
[1;94m863 | [0m  [1;91mactionBy            User?                 @relation("QueueLogActionBy", fields: [actionById], references: [id])[0m
[1;94m864 | [0m  actionDate          DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `QueueNotification`: The relation field `recipient` on model `QueueNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:879[0m
[1;94m   | [0m
[1;94m878 | [0m  recipientId         Int?                  @unique
[1;94m879 | [0m  [1;91mrecipient           User?                 @relation("QueueNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m880 | [0m  message             String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `QueueConfiguration`: The relation field `clinicalSetting` on model `QueueConfiguration` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:891[0m
[1;94m   | [0m
[1;94m890 | [0m  clinicalSettingId   Int?                  @unique
[1;94m891 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("QueueConfigClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m892 | [0m  name                String
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `QueueConfiguration`: The relation field `createdBy` on model `QueueConfiguration` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:901[0m
[1;94m   | [0m
[1;94m900 | [0m  createdById         Int?                  @unique
[1;94m901 | [0m  [1;91mcreatedBy           User?                 @relation("QueueConfigCreatedBy", fields: [createdById], references: [id])[0m
[1;94m902 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `QueueConfiguration`: The relation field `updatedBy` on model `QueueConfiguration` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:903[0m
[1;94m   | [0m
[1;94m902 | [0m  updatedById         Int?                  @unique
[1;94m903 | [0m  [1;91mupdatedBy           User?                 @relation("QueueConfigUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m904 | [0m  auditLogs           AuditLog[]            @relation("QueueConfigAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `QueueConfiguration`: The relation field `auditLogs` on model `QueueConfiguration` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:904[0m
[1;94m   | [0m
[1;94m903 | [0m  updatedBy           User?                 @relation("QueueConfigUpdatedBy", fields: [updatedById], references: [id])
[1;94m904 | [0m  [1;91mauditLogs           AuditLog[]            @relation("QueueConfigAuditLogs")[0m
[1;94m905 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `ClinicalRecord`: The relation field `appointment` on model `ClinicalRecord` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:942[0m
[1;94m   | [0m
[1;94m941 | [0m  appointmentId         Int?                @unique
[1;94m942 | [0m  [1;91mappointment           Appointment?        @relation("ClinicalRecordAppointments", fields: [appointmentId], references: [id])[0m
[1;94m943 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `ClinicalRecord`: The relation field `admission` on model `ClinicalRecord` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:944[0m
[1;94m   | [0m
[1;94m943 | [0m  admissionId           Int?                @unique
[1;94m944 | [0m  [1;91madmission             Admission?          @relation("ClinicalRecordAdmissions", fields: [admissionId], references: [id])[0m
[1;94m945 | [0m  medicalRecordId       Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `ClinicalRecord`: The relation field `medicalRecord` on model `ClinicalRecord` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:946[0m
[1;94m   | [0m
[1;94m945 | [0m  medicalRecordId       Int?                @unique
[1;94m946 | [0m  [1;91mmedicalRecord         MedicalRecord?      @relation("ClinicalRecordMedicalRecords", fields: [medicalRecordId], references: [id])[0m
[1;94m947 | [0m  clinicalSettingId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:961[0m
[1;94m   | [0m
[1;94m960 | [0m  laboratoryId          Int?                @unique
[1;94m961 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m962 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1058[0m
[1;94m   | [0m
[1;94m1057 | [0m  clinicalRecordId      Int?                @unique
[1;94m1058 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1059 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:961[0m
[1;94m   | [0m
[1;94m960 | [0m  laboratoryId          Int?                @unique
[1;94m961 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m962 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `ClinicalRecord` and `clinicalRecord` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1058[0m
[1;94m   | [0m
[1;94m1057 | [0m  clinicalRecordId      Int?                @unique
[1;94m1058 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1059 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `ClinicalRecord`: The relation field `operationTheatre` on model `ClinicalRecord` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:967[0m
[1;94m   | [0m
[1;94m966 | [0m  operationTheatreId    Int?                @unique
[1;94m967 | [0m  [1;91moperationTheatre      OperationTheatre?   @relation("ClinicalRecordOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m968 | [0m  nursingId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursing` in model `ClinicalRecord`: The relation field `nursing` on model `ClinicalRecord` is missing an opposite relation field on the model `Nursing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:969[0m
[1;94m   | [0m
[1;94m968 | [0m  nursingId             Int?
[1;94m969 | [0m  [1;91mnursing               Nursing?            @relation("ClinicalRecordNursing", fields: [nursingId], references: [id])[0m
[1;94m970 | [0m  billingId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `ClinicalRecord`: The relation field `billing` on model `ClinicalRecord` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:971[0m
[1;94m   | [0m
[1;94m970 | [0m  billingId             Int?
[1;94m971 | [0m  [1;91mbilling               Billing?            @relation("ClinicalRecordBilling", fields: [billingId], references: [id])[0m
[1;94m972 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `ClinicalRecord`: The relation field `claim` on model `ClinicalRecord` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:973[0m
[1;94m   | [0m
[1;94m972 | [0m  claimId               Int?
[1;94m973 | [0m  [1;91mclaim                 Claim?              @relation("ClinicalRecordClaims", fields: [claimId], references: [id])[0m
[1;94m974 | [0m  encounterDate         DateTime?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ClinicalRecord`: The relation field `createdBy` on model `ClinicalRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:978[0m
[1;94m   | [0m
[1;94m977 | [0m  createdById           Int?
[1;94m978 | [0m  [1;91mcreatedBy             User?               @relation("ClinicalRecordCreatedBy", fields: [createdById], references: [id])[0m
[1;94m979 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ClinicalRecord`: The relation field `updatedBy` on model `ClinicalRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:980[0m
[1;94m   | [0m
[1;94m979 | [0m  updatedById           Int?
[1;94m980 | [0m  [1;91mupdatedBy             User?               @relation("ClinicalRecordUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m981 | [0m  reviewedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reviewedBy` in model `ClinicalRecord`: The relation field `reviewedBy` on model `ClinicalRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:982[0m
[1;94m   | [0m
[1;94m981 | [0m  reviewedById          Int?
[1;94m982 | [0m  [1;91mreviewedBy            User?               @relation("ClinicalRecordReviewedBy", fields: [reviewedById], references: [id])[0m
[1;94m983 | [0m  auditLogs             AuditLog[]          @relation("ClinicalRecordAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalRecord`: The relation field `auditLogs` on model `ClinicalRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:983[0m
[1;94m   | [0m
[1;94m982 | [0m  reviewedBy            User?               @relation("ClinicalRecordReviewedBy", fields: [reviewedById], references: [id])
[1;94m983 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClinicalRecordAuditLogs")[0m
[1;94m984 | [0m  clinicalDocuments     ClinicalDocument[]  @relation("ClinicalRecordDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `ClinicalDocument`: The relation field `uploadedBy` on model `ClinicalDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1002[0m
[1;94m   | [0m
[1;94m1001 | [0m  uploadedById          Int?
[1;94m1002 | [0m  [1;91muploadedBy            User?               @relation("ClinicalDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m1003 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalDocument`: The relation field `auditLogs` on model `ClinicalDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1005[0m
[1;94m   | [0m
[1;94m1004 | [0m  updatedAt             DateTime            @updatedAt
[1;94m1005 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClinicalDocumentAuditLogs")[0m
[1;94m1006 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ClinicalNotification`: The relation field `recipient` on model `ClinicalNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1017[0m
[1;94m   | [0m
[1;94m1016 | [0m  recipientId           Int?
[1;94m1017 | [0m  [1;91mrecipient             User?               @relation("ClinicalNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m1018 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1058[0m
[1;94m   | [0m
[1;94m1057 | [0m  clinicalRecordId      Int?                @unique
[1;94m1058 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1059 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:961[0m
[1;94m   | [0m
[1;94m960 | [0m  laboratoryId          Int?                @unique
[1;94m961 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m962 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1058[0m
[1;94m   | [0m
[1;94m1057 | [0m  clinicalRecordId      Int?                @unique
[1;94m1058 | [0m  [1;91mclinicalRecord        ClinicalRecord?     @relation("ClinicalRecordLaboratory", fields: [clinicalRecordId], references: [id])[0m
[1;94m1059 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalRecord` on Model `Laboratory` and `laboratory` on Model `ClinicalRecord` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:961[0m
[1;94m   | [0m
[1;94m960 | [0m  laboratoryId          Int?                @unique
[1;94m961 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClinicalRecordLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m962 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Laboratory`: The relation field `billing` on model `Laboratory` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1073[0m
[1;94m   | [0m
[1;94m1072 | [0m  billingId             Int?
[1;94m1073 | [0m  [1;91mbilling               Billing?            @relation("LaboratoryBilling", fields: [billingId], references: [id])[0m
[1;94m1074 | [0m  claimId               Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1075[0m
[1;94m   | [0m
[1;94m1074 | [0m  claimId               Int?                @unique
[1;94m1075 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1076 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3233[0m
[1;94m   | [0m
[1;94m3232 | [0m  laboratoryId          Int?
[1;94m3233 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3234 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1075[0m
[1;94m   | [0m
[1;94m1074 | [0m  claimId               Int?                @unique
[1;94m1075 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1076 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Laboratory` and `laboratory` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3233[0m
[1;94m   | [0m
[1;94m3232 | [0m  laboratoryId          Int?
[1;94m3233 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3234 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `Laboratory`: The relation field `performedBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1078[0m
[1;94m   | [0m
[1;94m1077 | [0m  performedById         Int?
[1;94m1078 | [0m  [1;91mperformedBy           User?               @relation("PerformedBy", fields: [performedById], references: [id])[0m
[1;94m1079 | [0m  reviewedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reviewedBy` in model `Laboratory`: The relation field `reviewedBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1080[0m
[1;94m   | [0m
[1;94m1079 | [0m  reviewedById          Int?
[1;94m1080 | [0m  [1;91mreviewedBy            User?               @relation("ReviewedBy", fields: [reviewedById], references: [id])[0m
[1;94m1081 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Laboratory`: The relation field `createdBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1083[0m
[1;94m   | [0m
[1;94m1082 | [0m  createdById           Int?
[1;94m1083 | [0m  [1;91mcreatedBy             User?               @relation("LaboratoryCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1084 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Laboratory`: The relation field `updatedBy` on model `Laboratory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1085[0m
[1;94m   | [0m
[1;94m1084 | [0m  updatedById           Int?
[1;94m1085 | [0m  [1;91mupdatedBy             User?               @relation("LaboratoryUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1086 | [0m  auditLogs             AuditLog[]          @relation("LaboratoryAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Laboratory`: The relation field `auditLogs` on model `Laboratory` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1086[0m
[1;94m   | [0m
[1;94m1085 | [0m  updatedBy             User?               @relation("LaboratoryUpdatedBy", fields: [updatedById], references: [id])
[1;94m1086 | [0m  [1;91mauditLogs             AuditLog[]          @relation("LaboratoryAuditLogs")[0m
[1;94m1087 | [0m  labDocuments          LabDocument[]       @relation("LaboratoryDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `LabDocument`: The relation field `uploadedBy` on model `LabDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1106[0m
[1;94m   | [0m
[1;94m1105 | [0m  uploadedById          Int?
[1;94m1106 | [0m  [1;91muploadedBy            User?               @relation("LabDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m1107 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `LabDocument`: The relation field `auditLogs` on model `LabDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1109[0m
[1;94m   | [0m
[1;94m1108 | [0m  updatedAt             DateTime            @updatedAt
[1;94m1109 | [0m  [1;91mauditLogs             AuditLog[]          @relation("LabDocumentAuditLogs")[0m
[1;94m1110 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `LabNotification`: The relation field `recipient` on model `LabNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1121[0m
[1;94m   | [0m
[1;94m1120 | [0m  recipientId           Int?
[1;94m1121 | [0m  [1;91mrecipient             User?               @relation("LabNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m1122 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Radiology`: The relation field `patient` on model `Radiology` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1162[0m
[1;94m   | [0m
[1;94m1161 | [0m  patientId           Int?
[1;94m1162 | [0m  [1;91mpatient             Patient?              @relation("PatientRadiology", fields: [patientId], references: [id])[0m
[1;94m1163 | [0m  appointmentId       Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `emergency` on Model `Radiology` and `radiology` on Model `Emergency` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1166[0m
[1;94m   | [0m
[1;94m1165 | [0m  emergencyId         Int?                  @unique
[1;94m1166 | [0m  [1;91memergency           Emergency?            @relation("EmergencyRadiology", fields: [emergencyId], references: [id])[0m
[1;94m1167 | [0m  invoiceId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `emergency` on Model `Radiology` and `radiology` on Model `Emergency` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:738[0m
[1;94m   | [0m
[1;94m737 | [0m  radiologyId           Int?                @unique
[1;94m738 | [0m  [1;91mradiology             Radiology?          @relation("EmergencyRadiology", fields: [radiologyId], references: [id])[0m
[1;94m739 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `emergency` on Model `Radiology` and `radiology` on Model `Emergency` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1166[0m
[1;94m   | [0m
[1;94m1165 | [0m  emergencyId         Int?                  @unique
[1;94m1166 | [0m  [1;91memergency           Emergency?            @relation("EmergencyRadiology", fields: [emergencyId], references: [id])[0m
[1;94m1167 | [0m  invoiceId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `emergency` on Model `Radiology` and `radiology` on Model `Emergency` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:738[0m
[1;94m   | [0m
[1;94m737 | [0m  radiologyId           Int?                @unique
[1;94m738 | [0m  [1;91mradiology             Radiology?          @relation("EmergencyRadiology", fields: [radiologyId], references: [id])[0m
[1;94m739 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1168[0m
[1;94m   | [0m
[1;94m1167 | [0m  invoiceId           Int?                  @unique
[1;94m1168 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1169 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2698[0m
[1;94m   | [0m
[1;94m2697 | [0m  radiologyId           Int?
[1;94m2698 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2699 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1168[0m
[1;94m   | [0m
[1;94m1167 | [0m  invoiceId           Int?                  @unique
[1;94m1168 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1169 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Radiology` and `radiology` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2698[0m
[1;94m   | [0m
[1;94m2697 | [0m  radiologyId           Int?
[1;94m2698 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2699 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1182[0m
[1;94m   | [0m
[1;94m1181 | [0m  maternityId         Int?                  @unique
[1;94m1182 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1183 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2027[0m
[1;94m   | [0m
[1;94m2026 | [0m  radiologyId             Int?
[1;94m2027 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2028 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1182[0m
[1;94m   | [0m
[1;94m1181 | [0m  maternityId         Int?                  @unique
[1;94m1182 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1183 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Radiology` and `radiology` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2027[0m
[1;94m   | [0m
[1;94m2026 | [0m  radiologyId             Int?
[1;94m2027 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2028 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `RadiologyTest`: The relation field `billing` on model `RadiologyTest` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1227[0m
[1;94m   | [0m
[1;94m1226 | [0m  billingId           Int?
[1;94m1227 | [0m  [1;91mbilling             Billing?              @relation("RadiologyTestBilling", fields: [billingId], references: [id])[0m
[1;94m1228 | [0m  claimId             Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `RadiologyTest`: The relation field `claim` on model `RadiologyTest` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1229[0m
[1;94m   | [0m
[1;94m1228 | [0m  claimId             Int?                  @unique
[1;94m1229 | [0m  [1;91mclaim               Claim?                @relation("RadiologyTestClaim", fields: [claimId], references: [id])[0m
[1;94m1230 | [0m  nhifClaimId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `RadiologyTest`: The relation field `nhifClaim` on model `RadiologyTest` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1231[0m
[1;94m   | [0m
[1;94m1230 | [0m  nhifClaimId         Int?                  @unique
[1;94m1231 | [0m  [1;91mnhifClaim           NhifClaim?            @relation("RadiologyTestNhifClaim", fields: [nhifClaimId], references: [id])[0m
[1;94m1232 | [0m  testCode            String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `RadiologyEquipment__fkey` has to be unique in the following namespace: on model `RadiologyEquipment` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1263[0m
[1;94m   | [0m
[1;94m1262 | [0m  clinicalSettingId   Int?
[1;94m1263 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("RadiologyEquipmentClinicalSettings")[0m
[1;94m1264 | [0m  location            String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `RadiologyEquipment`: The relation field `clinicalSetting` on model `RadiologyEquipment` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1263[0m
[1;94m   | [0m
[1;94m1262 | [0m  clinicalSettingId   Int?
[1;94m1263 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("RadiologyEquipmentClinicalSettings")[0m
[1;94m1264 | [0m  location            String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `RadiologyEquipment__fkey` has to be unique in the following namespace: on model `RadiologyEquipment` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1277[0m
[1;94m   | [0m
[1;94m1276 | [0m  fixedAssetId        Int?
[1;94m1277 | [0m  [1;91mfixedAsset          FixedAsset?           @relation("RadiologyEquipmentFixedAsset")[0m
[1;94m1278 | [0m  procurementId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `fixedAsset` in model `RadiologyEquipment`: The relation field `fixedAsset` on model `RadiologyEquipment` is missing an opposite relation field on the model `FixedAsset`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1277[0m
[1;94m   | [0m
[1;94m1276 | [0m  fixedAssetId        Int?
[1;94m1277 | [0m  [1;91mfixedAsset          FixedAsset?           @relation("RadiologyEquipmentFixedAsset")[0m
[1;94m1278 | [0m  procurementId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `RadiologyEquipment__fkey` has to be unique in the following namespace: on model `RadiologyEquipment` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1279[0m
[1;94m   | [0m
[1;94m1278 | [0m  procurementId       Int?
[1;94m1279 | [0m  [1;91mprocurement         Procurement?          @relation("RadiologyEquipmentProcurement")[0m
[1;94m1280 | [0m  radiologyTests      RadiologyTest[]       @relation("RadiologyTestEquipment")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `RadiologyEquipment`: The relation field `procurement` on model `RadiologyEquipment` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1279[0m
[1;94m   | [0m
[1;94m1278 | [0m  procurementId       Int?
[1;94m1279 | [0m  [1;91mprocurement         Procurement?          @relation("RadiologyEquipmentProcurement")[0m
[1;94m1280 | [0m  radiologyTests      RadiologyTest[]       @relation("RadiologyTestEquipment")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `clinicalSettingId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1329[0m
[1;94m   | [0m
[1;94m1328 | [0m  clinicalSettingId     Int?
[1;94m1329 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("ClinicalSettingOperationTheatre", fields: [clinicalSettingId], references: [id])[0m
[1;94m1330 | [0m  location              String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `OperationTheatre`: The relation field `cssdInstrument` on model `OperationTheatre` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1334[0m
[1;94m   | [0m
[1;94m1333 | [0m  cssdInstrumentId      Int?
[1;94m1334 | [0m  [1;91mcssdInstrument        CSSDInstrument?       @relation("OperationTheatreCSSDInstrument", fields: [cssdInstrumentId], references: [id])[0m
[1;94m1335 | [0m  procedures            SurgicalProcedure[]   @relation("OperationTheatreProcedures")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `OperationTheatre`: The relation field `createdBy` on model `OperationTheatre` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1338[0m
[1;94m   | [0m
[1;94m1337 | [0m  createdById           Int?
[1;94m1338 | [0m  [1;91mcreatedBy             User?                 @relation("TheatreCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1339 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `OperationTheatre`: The relation field `updatedBy` on model `OperationTheatre` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1340[0m
[1;94m   | [0m
[1;94m1339 | [0m  updatedById           Int?
[1;94m1340 | [0m  [1;91mupdatedBy             User?                 @relation("TheatreUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1341 | [0m  auditLogs             AuditLog[]            @relation("OperationTheatreAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `OperationTheatre`: The relation field `auditLogs` on model `OperationTheatre` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1341[0m
[1;94m   | [0m
[1;94m1340 | [0m  updatedBy             User?                 @relation("TheatreUpdatedBy", fields: [updatedById], references: [id])
[1;94m1341 | [0m  [1;91mauditLogs             AuditLog[]            @relation("OperationTheatreAuditLogs")[0m
[1;94m1342 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `SurgicalProcedure`: The relation field `patient` on model `SurgicalProcedure` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1356[0m
[1;94m   | [0m
[1;94m1355 | [0m  patientId             Int
[1;94m1356 | [0m  [1;91mpatient               Patient               @relation("PatientSurgicalProcedures", fields: [patientId], references: [id])[0m
[1;94m1357 | [0m  doctorId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `SurgicalProcedure`: The relation field `appointment` on model `SurgicalProcedure` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1362[0m
[1;94m   | [0m
[1;94m1361 | [0m  appointmentId         Int?                  @unique
[1;94m1362 | [0m  [1;91mappointment           Appointment?          @relation("ProcedureAppointment", fields: [appointmentId], references: [id])[0m
[1;94m1363 | [0m  admissionId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `SurgicalProcedure`: The relation field `clinicalRecord` on model `SurgicalProcedure` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1366[0m
[1;94m   | [0m
[1;94m1365 | [0m  clinicalRecordId      Int?
[1;94m1366 | [0m  [1;91mclinicalRecord        ClinicalRecord?       @relation("SurgicalProcedureClinicalRecord", fields: [clinicalRecordId], references: [id])[0m
[1;94m1367 | [0m  medicalRecordId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `SurgicalProcedure`: The relation field `medicalRecord` on model `SurgicalProcedure` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1368[0m
[1;94m   | [0m
[1;94m1367 | [0m  medicalRecordId       Int?
[1;94m1368 | [0m  [1;91mmedicalRecord         MedicalRecord?        @relation("ProcedureMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m1369 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `SurgicalProcedure`: The relation field `clinicalSetting` on model `SurgicalProcedure` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1372[0m
[1;94m   | [0m
[1;94m1371 | [0m  clinicalSettingId     Int?
[1;94m1372 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("SurgicalProcedureClinicalSetting", fields: [clinicalSettingId], references: [id])[0m
[1;94m1373 | [0m  type                  ProcedureType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdRequisition` in model `SurgicalProcedure`: The relation field `cssdRequisition` on model `SurgicalProcedure` is missing an opposite relation field on the model `CSSDRequisition`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1385[0m
[1;94m   | [0m
[1;94m1384 | [0m  cssdRequisitionId     Int?
[1;94m1385 | [0m  [1;91mcssdRequisition       CSSDRequisition?      @relation("SurgicalProcedureCSSDRequisition", fields: [cssdRequisitionId], references: [id])[0m
[1;94m1386 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `SurgicalProcedure`: The relation field `pharmacy` on model `SurgicalProcedure` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1387[0m
[1;94m   | [0m
[1;94m1386 | [0m  pharmacyId            Int?
[1;94m1387 | [0m  [1;91mpharmacy              Pharmacy?             @relation("ProcedurePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m1388 | [0m  nursingId             Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `SurgicalProcedure`: The relation field `billing` on model `SurgicalProcedure` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1391[0m
[1;94m   | [0m
[1;94m1390 | [0m  billingId             Int?
[1;94m1391 | [0m  [1;91mbilling               Billing?              @relation("ProcedureBilling", fields: [billingId], references: [id])[0m
[1;94m1392 | [0m  claimId               Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `SurgicalProcedure`: The relation field `nhifClaim` on model `SurgicalProcedure` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1395[0m
[1;94m   | [0m
[1;94m1394 | [0m  nhifClaimId           Int?
[1;94m1395 | [0m  [1;91mnhifClaim             NhifClaim?            @relation("ProcedureNhifClaim", fields: [nhifClaimId], references: [id])[0m
[1;94m1396 | [0m  staffAssignments      SurgicalStaff[]       @relation("ProcedureStaffAssignments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `SurgicalProcedure`: The relation field `createdBy` on model `SurgicalProcedure` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1399[0m
[1;94m   | [0m
[1;94m1398 | [0m  createdById           Int?
[1;94m1399 | [0m  [1;91mcreatedBy             User?                 @relation("ProcedureCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1400 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `SurgicalProcedure`: The relation field `updatedBy` on model `SurgicalProcedure` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1401[0m
[1;94m   | [0m
[1;94m1400 | [0m  updatedById           Int?
[1;94m1401 | [0m  [1;91mupdatedBy             User?                 @relation("ProcedureUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1402 | [0m  auditLogs             AuditLog[]            @relation("SurgicalProcedureAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `SurgicalProcedure`: The relation field `auditLogs` on model `SurgicalProcedure` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1402[0m
[1;94m   | [0m
[1;94m1401 | [0m  updatedBy             User?                 @relation("ProcedureUpdatedBy", fields: [updatedById], references: [id])
[1;94m1402 | [0m  [1;91mauditLogs             AuditLog[]            @relation("SurgicalProcedureAuditLogs")[0m
[1;94m1403 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `SurgicalStaff`: The relation field `createdBy` on model `SurgicalStaff` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1417[0m
[1;94m   | [0m
[1;94m1416 | [0m  createdById           Int?
[1;94m1417 | [0m  [1;91mcreatedBy             User?                 @relation("StaffAssignmentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1418 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `SurgicalStaff`: The relation field `updatedBy` on model `SurgicalStaff` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1419[0m
[1;94m   | [0m
[1;94m1418 | [0m  updatedById           Int?
[1;94m1419 | [0m  [1;91mupdatedBy             User?                 @relation("StaffAssignmentUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1420 | [0m  auditLogs             AuditLog[]            @relation("SurgicalStaffAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `SurgicalStaff`: The relation field `auditLogs` on model `SurgicalStaff` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1420[0m
[1;94m   | [0m
[1;94m1419 | [0m  updatedBy             User?                 @relation("StaffAssignmentUpdatedBy", fields: [updatedById], references: [id])
[1;94m1420 | [0m  [1;91mauditLogs             AuditLog[]            @relation("SurgicalStaffAuditLogs")[0m
[1;94m1421 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `ClinicalSetting__fkey` has to be unique in the following namespace: on model `ClinicalSetting` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1474[0m
[1;94m   | [0m
[1;94m1473 | [0m  laboratoryId          Int?                  @unique
[1;94m1474 | [0m  [1;91mlaboratory            Laboratory?           @relation("ClinicalSettingLaboratory")[0m
[1;94m1475 | [0m  radiologyId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratory` in model `ClinicalSetting`: The relation field `laboratory` on model `ClinicalSetting` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1474[0m
[1;94m   | [0m
[1;94m1473 | [0m  laboratoryId          Int?                  @unique
[1;94m1474 | [0m  [1;91mlaboratory            Laboratory?           @relation("ClinicalSettingLaboratory")[0m
[1;94m1475 | [0m  radiologyId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `ClinicalSetting__fkey` has to be unique in the following namespace: on model `ClinicalSetting` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1476[0m
[1;94m   | [0m
[1;94m1475 | [0m  radiologyId           Int?                  @unique
[1;94m1476 | [0m  [1;91mradiology             Radiology?            @relation("ClinicalSettingRadiology")[0m
[1;94m1477 | [0m  pharmacyId            Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `ClinicalSetting` and `clinicalSetting` on Model `Radiology` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1476[0m
[1;94m   | [0m
[1;94m1475 | [0m  radiologyId           Int?                  @unique
[1;94m1476 | [0m  [1;91mradiology             Radiology?            @relation("ClinicalSettingRadiology")[0m
[1;94m1477 | [0m  pharmacyId            Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Radiology` and `radiology` on Model `ClinicalSetting` do not provide the `fields` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1191[0m
[1;94m   | [0m
[1;94m1190 | [0m  claims              Claim[]               @relation("ClaimRadiology")
[1;94m1191 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("ClinicalSettingRadiology")[0m
[1;94m1192 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `ClinicalSetting` and `clinicalSetting` on Model `Radiology` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1476[0m
[1;94m   | [0m
[1;94m1475 | [0m  radiologyId           Int?                  @unique
[1;94m1476 | [0m  [1;91mradiology             Radiology?            @relation("ClinicalSettingRadiology")[0m
[1;94m1477 | [0m  pharmacyId            Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `clinicalSetting` on Model `Radiology` and `radiology` on Model `ClinicalSetting` do not provide the `references` argument in the @relation attribute. You have to provide it on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1191[0m
[1;94m   | [0m
[1;94m1190 | [0m  claims              Claim[]               @relation("ClaimRadiology")
[1;94m1191 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("ClinicalSettingRadiology")[0m
[1;94m1192 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `ClinicalSetting__fkey` has to be unique in the following namespace: on model `ClinicalSetting` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1478[0m
[1;94m   | [0m
[1;94m1477 | [0m  pharmacyId            Int?                  @unique
[1;94m1478 | [0m  [1;91mpharmacy              Pharmacy?             @relation("ClinicalSettingPharmacy")[0m
[1;94m1479 | [0m  operationTheatreId    Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `ClinicalSetting`: The relation field `pharmacy` on model `ClinicalSetting` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1478[0m
[1;94m   | [0m
[1;94m1477 | [0m  pharmacyId            Int?                  @unique
[1;94m1478 | [0m  [1;91mpharmacy              Pharmacy?             @relation("ClinicalSettingPharmacy")[0m
[1;94m1479 | [0m  operationTheatreId    Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `ClinicalSetting__fkey` has to be unique in the following namespace: on model `ClinicalSetting` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1482[0m
[1;94m   | [0m
[1;94m1481 | [0m  nursingId             Int?                  @unique
[1;94m1482 | [0m  [1;91mnursing               Nursing?              @relation("ClinicalSettingNursing")[0m
[1;94m1483 | [0m  cssdId                Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursing` in model `ClinicalSetting`: The relation field `nursing` on model `ClinicalSetting` is missing an opposite relation field on the model `Nursing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1482[0m
[1;94m   | [0m
[1;94m1481 | [0m  nursingId             Int?                  @unique
[1;94m1482 | [0m  [1;91mnursing               Nursing?              @relation("ClinicalSettingNursing")[0m
[1;94m1483 | [0m  cssdId                Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The given constraint name `ClinicalSetting__fkey` has to be unique in the following namespace: on model `ClinicalSetting` for primary key, indexes, unique constraints and foreign keys. Please provide a different name using the `map` argument.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1486[0m
[1;94m   | [0m
[1;94m1485 | [0m  wardId                Int?                  @unique
[1;94m1486 | [0m  [1;91mward                  Ward?                 @relation("ClinicalSettingWard")[0m
[1;94m1487 | [0m  triageProtocols       String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `ward` on Model `ClinicalSetting` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1486[0m
[1;94m   | [0m
[1;94m1485 | [0m  wardId                Int?                  @unique
[1;94m1486 | [0m  [1;91mward                  Ward?                 @relation("ClinicalSettingWard")[0m
[1;94m1487 | [0m  triageProtocols       String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `ward` on Model `ClinicalSetting` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1486[0m
[1;94m   | [0m
[1;94m1485 | [0m  wardId                Int?                  @unique
[1;94m1486 | [0m  [1;91mward                  Ward?                 @relation("ClinicalSettingWard")[0m
[1;94m1487 | [0m  triageProtocols       String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ClinicalSetting`: The relation field `createdBy` on model `ClinicalSetting` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1492[0m
[1;94m   | [0m
[1;94m1491 | [0m  createdById           Int?                  @unique
[1;94m1492 | [0m  [1;91mcreatedBy             User?                 @relation("ClinicalSettingCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1493 | [0m  updatedById           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ClinicalSetting`: The relation field `updatedBy` on model `ClinicalSetting` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1494[0m
[1;94m   | [0m
[1;94m1493 | [0m  updatedById           Int?                  @unique
[1;94m1494 | [0m  [1;91mupdatedBy             User?                 @relation("ClinicalSettingUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1495 | [0m  auditLogs             AuditLog[]            @relation("ClinicalSettingAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalSetting`: The relation field `auditLogs` on model `ClinicalSetting` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1495[0m
[1;94m   | [0m
[1;94m1494 | [0m  updatedBy             User?                 @relation("ClinicalSettingUpdatedBy", fields: [updatedById], references: [id])
[1;94m1495 | [0m  [1;91mauditLogs             AuditLog[]            @relation("ClinicalSettingAuditLogs")[0m
[1;94m1496 | [0m  clinicalSettingDocuments ClinicalSettingDocument[] @relation("ClinicalSettingDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursingCares` in model `ClinicalSetting`: The relation field `nursingCares` on model `ClinicalSetting` is missing an opposite relation field on the model `NursingCare`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1513[0m
[1;94m   | [0m
[1;94m1512 | [0m  cssdRequisitions      CSSDRequisition[]     @relation("ClinicalSettingCSSDRequisitions")
[1;94m1513 | [0m  [1;91mnursingCares          NursingCare[]         @relation("NursingCareClinicalSettings")[0m
[1;94m1514 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Room`: The relation field `createdBy` on model `Room` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1533[0m
[1;94m   | [0m
[1;94m1532 | [0m  createdById           Int?                  @unique
[1;94m1533 | [0m  [1;91mcreatedBy             User?                 @relation("RoomCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1534 | [0m  updatedById           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Room`: The relation field `updatedBy` on model `Room` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1535[0m
[1;94m   | [0m
[1;94m1534 | [0m  updatedById           Int?                  @unique
[1;94m1535 | [0m  [1;91mupdatedBy             User?                 @relation("RoomUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1536 | [0m  auditLogs             AuditLog[]            @relation("RoomAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Room`: The relation field `auditLogs` on model `Room` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1536[0m
[1;94m   | [0m
[1;94m1535 | [0m  updatedBy             User?                 @relation("RoomUpdatedBy", fields: [updatedById], references: [id])
[1;94m1536 | [0m  [1;91mauditLogs             AuditLog[]            @relation("RoomAuditLogs")[0m
[1;94m1537 | [0m  roomSchedules         RoomSchedule[]        @relation("RoomSchedules")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `RoomSchedule`: The relation field `appointment` on model `RoomSchedule` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1550[0m
[1;94m   | [0m
[1;94m1549 | [0m  appointmentId         Int?                  @unique
[1;94m1550 | [0m  [1;91mappointment           Appointment?          @relation("RoomScheduleAppointment", fields: [appointmentId], references: [id])[0m
[1;94m1551 | [0m  status                String                @default("AVAILABLE")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `RoomSchedule`: The relation field `createdBy` on model `RoomSchedule` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1554[0m
[1;94m   | [0m
[1;94m1553 | [0m  createdById           Int?                  @unique
[1;94m1554 | [0m  [1;91mcreatedBy             User?                 @relation("RoomScheduleCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1555 | [0m  updatedById           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `RoomSchedule`: The relation field `updatedBy` on model `RoomSchedule` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1556[0m
[1;94m   | [0m
[1;94m1555 | [0m  updatedById           Int?                  @unique
[1;94m1556 | [0m  [1;91mupdatedBy             User?                 @relation("RoomScheduleUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1557 | [0m  auditLogs             AuditLog[]            @relation("RoomScheduleAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `RoomSchedule`: The relation field `auditLogs` on model `RoomSchedule` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1557[0m
[1;94m   | [0m
[1;94m1556 | [0m  updatedBy             User?                 @relation("RoomScheduleUpdatedBy", fields: [updatedById], references: [id])
[1;94m1557 | [0m  [1;91mauditLogs             AuditLog[]            @relation("RoomScheduleAuditLogs")[0m
[1;94m1558 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `ClinicalSettingDocument`: The relation field `uploadedBy` on model `ClinicalSettingDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1571[0m
[1;94m   | [0m
[1;94m1570 | [0m  uploadedById          Int?                  @unique
[1;94m1571 | [0m  [1;91muploadedBy            User?                 @relation("ClinicalSettingDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m1572 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClinicalSettingDocument`: The relation field `auditLogs` on model `ClinicalSettingDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1574[0m
[1;94m   | [0m
[1;94m1573 | [0m  updatedAt             DateTime              @updatedAt
[1;94m1574 | [0m  [1;91mauditLogs             AuditLog[]            @relation("ClinicalSettingDocumentAuditLogs")[0m
[1;94m1575 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ClinicalSettingNotification`: The relation field `recipient` on model `ClinicalSettingNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1586[0m
[1;94m   | [0m
[1;94m1585 | [0m  recipientId           Int?                  @unique
[1;94m1586 | [0m  [1;91mrecipient             User?                 @relation("ClinicalSettingNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m1587 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Cssd`: The relation field `department` on model `Cssd` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1639[0m
[1;94m   | [0m
[1;94m1638 | [0m  departmentId        Int?
[1;94m1639 | [0m  [1;91mdepartment          Department?           @relation("DepartmentCssd", fields: [departmentId], references: [id])[0m
[1;94m1640 | [0m  clinicalSettingId   Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Cssd`: The relation field `createdBy` on model `Cssd` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1652[0m
[1;94m   | [0m
[1;94m1651 | [0m  createdById         Int?                  @unique
[1;94m1652 | [0m  [1;91mcreatedBy           User?                 @relation("CssdCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1653 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Cssd`: The relation field `updatedBy` on model `Cssd` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1654[0m
[1;94m   | [0m
[1;94m1653 | [0m  updatedById         Int?                  @unique
[1;94m1654 | [0m  [1;91mupdatedBy           User?                 @relation("CssdUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1655 | [0m  auditLogs           AuditLog[]            @relation("CssdAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Cssd`: The relation field `auditLogs` on model `Cssd` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1655[0m
[1;94m   | [0m
[1;94m1654 | [0m  updatedBy           User?                 @relation("CssdUpdatedBy", fields: [updatedById], references: [id])
[1;94m1655 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CssdAuditLogs")[0m
[1;94m1656 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `CSSDInstrument`: The relation field `department` on model `CSSDInstrument` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1680[0m
[1;94m   | [0m
[1;94m1679 | [0m  departmentId        Int?
[1;94m1680 | [0m  [1;91mdepartment          Department?           @relation("DepartmentCSSDInstruments", fields: [departmentId], references: [id])[0m
[1;94m1681 | [0m  operationTheatreId  Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `CSSDInstrument`: The relation field `operationTheatre` on model `CSSDInstrument` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1682[0m
[1;94m   | [0m
[1;94m1681 | [0m  operationTheatreId  Int?                  @unique
[1;94m1682 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("OperationTheatreCSSDInstruments", fields: [operationTheatreId], references: [id])[0m
[1;94m1683 | [0m  clinicalSettingId   Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `CSSDInstrument`: The relation field `procurement` on model `CSSDInstrument` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1686[0m
[1;94m   | [0m
[1;94m1685 | [0m  procurementId       Int?                  @unique
[1;94m1686 | [0m  [1;91mprocurement         Procurement?          @relation("CSSDInstrumentProcurement", fields: [procurementId], references: [id])[0m
[1;94m1687 | [0m  fixedAssetId        Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `CSSDInstrument`: The relation field `createdBy` on model `CSSDInstrument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1694[0m
[1;94m   | [0m
[1;94m1693 | [0m  createdById         Int?                  @unique
[1;94m1694 | [0m  [1;91mcreatedBy           User?                 @relation("InstrumentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1695 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `CSSDInstrument`: The relation field `updatedBy` on model `CSSDInstrument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1696[0m
[1;94m   | [0m
[1;94m1695 | [0m  updatedById         Int?                  @unique
[1;94m1696 | [0m  [1;91mupdatedBy           User?                 @relation("InstrumentUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1697 | [0m  auditLogs           AuditLog[]            @relation("CSSDInstrumentAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDInstrument`: The relation field `auditLogs` on model `CSSDInstrument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1697[0m
[1;94m   | [0m
[1;94m1696 | [0m  updatedBy           User?                 @relation("InstrumentUpdatedBy", fields: [updatedById], references: [id])
[1;94m1697 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDInstrumentAuditLogs")[0m
[1;94m1698 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `CSSDRecord`: The relation field `operationTheatre` on model `CSSDRecord` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1720[0m
[1;94m   | [0m
[1;94m1719 | [0m  operationTheatreId  Int?                  @unique
[1;94m1720 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("OperationTheatreCSSDRecords", fields: [operationTheatreId], references: [id])[0m
[1;94m1721 | [0m  clinicalSettingId   Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `CSSDRecord`: The relation field `createdBy` on model `CSSDRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1724[0m
[1;94m   | [0m
[1;94m1723 | [0m  createdById         Int?                  @unique
[1;94m1724 | [0m  [1;91mcreatedBy           User?                 @relation("RecordCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1725 | [0m  qualityCheckedById  Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `qualityCheckedBy` in model `CSSDRecord`: The relation field `qualityCheckedBy` on model `CSSDRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1726[0m
[1;94m   | [0m
[1;94m1725 | [0m  qualityCheckedById  Int?                  @unique
[1;94m1726 | [0m  [1;91mqualityCheckedBy    User?                 @relation("RecordQualityCheckedBy", fields: [qualityCheckedById], references: [id])[0m
[1;94m1727 | [0m  logs                CSSDLog[]             @relation("RecordLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDRecord`: The relation field `auditLogs` on model `CSSDRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1728[0m
[1;94m   | [0m
[1;94m1727 | [0m  logs                CSSDLog[]             @relation("RecordLogs")
[1;94m1728 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDRecordAuditLogs")[0m
[1;94m1729 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `CSSDRequisition`: The relation field `operationTheatre` on model `CSSDRequisition` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1743[0m
[1;94m   | [0m
[1;94m1742 | [0m  operationTheatreId  Int?                  @unique
[1;94m1743 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("OperationTheatreCSSDRequisitions", fields: [operationTheatreId], references: [id])[0m
[1;94m1744 | [0m  requestedById       Int
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `CSSDRequisition`: The relation field `approvedBy` on model `CSSDRequisition` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1747[0m
[1;94m   | [0m
[1;94m1746 | [0m  approvedById        Int?                  @unique
[1;94m1747 | [0m  [1;91mapprovedBy          User?                 @relation("RequisitionApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m1748 | [0m  quantity            Int
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `CSSDRequisition`: The relation field `procurement` on model `CSSDRequisition` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1757[0m
[1;94m   | [0m
[1;94m1756 | [0m  procurementId       Int?                  @unique
[1;94m1757 | [0m  [1;91mprocurement         Procurement?          @relation("CSSDRequisitionProcurement", fields: [procurementId], references: [id])[0m
[1;94m1758 | [0m  logs                CSSDLog[]             @relation("RequisitionLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDRequisition`: The relation field `auditLogs` on model `CSSDRequisition` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1759[0m
[1;94m   | [0m
[1;94m1758 | [0m  logs                CSSDLog[]             @relation("RequisitionLogs")
[1;94m1759 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDRequisitionAuditLogs")[0m
[1;94m1760 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `CSSDMaintenance`: The relation field `performedBy` on model `CSSDMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1775[0m
[1;94m   | [0m
[1;94m1774 | [0m  performedById       Int?                  @unique
[1;94m1775 | [0m  [1;91mperformedBy         User?                 @relation("MaintenancePerformedBy", fields: [performedById], references: [id])[0m
[1;94m1776 | [0m  cost                Float?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `CSSDMaintenance`: The relation field `procurement` on model `CSSDMaintenance` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1780[0m
[1;94m   | [0m
[1;94m1779 | [0m  procurementId       Int?                  @unique
[1;94m1780 | [0m  [1;91mprocurement         Procurement?          @relation("CSSDMaintenanceProcurement", fields: [procurementId], references: [id])[0m
[1;94m1781 | [0m  logs                CSSDLog[]             @relation("MaintenanceLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `CSSDMaintenance`: The relation field `auditLogs` on model `CSSDMaintenance` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1782[0m
[1;94m   | [0m
[1;94m1781 | [0m  logs                CSSDLog[]             @relation("MaintenanceLogs")
[1;94m1782 | [0m  [1;91mauditLogs           AuditLog[]            @relation("CSSDMaintenanceAuditLogs")[0m
[1;94m1783 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssd` in model `CSSDLog`: The relation field `cssd` on model `CSSDLog` is missing an opposite relation field on the model `Cssd`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1791[0m
[1;94m   | [0m
[1;94m1790 | [0m  cssdId              Int?
[1;94m1791 | [0m  [1;91mcssd                Cssd?                 @relation("CssdLogs", fields: [cssdId], references: [id])[0m
[1;94m1792 | [0m  instrumentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Nursing`: The relation field `patient` on model `Nursing` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1846[0m
[1;94m   | [0m
[1;94m1845 | [0m  patientId           Int?
[1;94m1846 | [0m  [1;91mpatient             Patient?              @relation("PatientNursingRecords", fields: [patientId], references: [id])[0m
[1;94m1847 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Nursing`: The relation field `clinicalRecord` on model `Nursing` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1852[0m
[1;94m   | [0m
[1;94m1851 | [0m  clinicalRecordId    Int?
[1;94m1852 | [0m  [1;91mclinicalRecord      ClinicalRecord?       @relation(fields: [clinicalRecordId], references: [id])[0m
[1;94m1853 | [0m  admissionId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `ward` in model `Nursing`: The relation field `ward` on model `Nursing` is missing an opposite relation field on the model `Ward`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1856[0m
[1;94m   | [0m
[1;94m1855 | [0m  wardId              Int?
[1;94m1856 | [0m  [1;91mward                Ward?                 @relation("WardNursing", fields: [wardId], references: [id])[0m
[1;94m1857 | [0m  clinicalSettingId   Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Nursing`: The relation field `clinicalSetting` on model `Nursing` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1858[0m
[1;94m   | [0m
[1;94m1857 | [0m  clinicalSettingId   Int?
[1;94m1858 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m1859 | [0m  status              NursingStatus         @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Nursing`: The relation field `billing` on model `Nursing` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1865[0m
[1;94m   | [0m
[1;94m1864 | [0m  billingId           Int?
[1;94m1865 | [0m  [1;91mbilling             Billing?              @relation("NursingBilling", fields: [billingId], references: [id])[0m
[1;94m1866 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Nursing`: The relation field `createdBy` on model `Nursing` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1868[0m
[1;94m   | [0m
[1;94m1867 | [0m  createdById         Int?
[1;94m1868 | [0m  [1;91mcreatedBy           User?                 @relation("NursingCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1869 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Nursing`: The relation field `updatedBy` on model `Nursing` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1870[0m
[1;94m   | [0m
[1;94m1869 | [0m  updatedById         Int?
[1;94m1870 | [0m  [1;91mupdatedBy           User?                 @relation("NursingUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1871 | [0m  auditLogs           AuditLog[]            @relation("NursingAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Nursing`: The relation field `auditLogs` on model `Nursing` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1871[0m
[1;94m   | [0m
[1;94m1870 | [0m  updatedBy           User?                 @relation("NursingUpdatedBy", fields: [updatedById], references: [id])
[1;94m1871 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingAuditLogs")[0m
[1;94m1872 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `NursingCare`: The relation field `patient` on model `NursingCare` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1881[0m
[1;94m   | [0m
[1;94m1880 | [0m  patientId           Int
[1;94m1881 | [0m  [1;91mpatient             Patient               @relation("PatientNursingCare", fields: [patientId], references: [id])[0m
[1;94m1882 | [0m  nurseId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `NursingCare`: The relation field `clinicalRecord` on model `NursingCare` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1887[0m
[1;94m   | [0m
[1;94m1886 | [0m  clinicalRecordId    Int?
[1;94m1887 | [0m  [1;91mclinicalRecord      ClinicalRecord?       @relation(fields: [clinicalRecordId], references: [id])[0m
[1;94m1888 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `NursingCare`: The relation field `medicalRecord` on model `NursingCare` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1889[0m
[1;94m   | [0m
[1;94m1888 | [0m  medicalRecordId     Int?
[1;94m1889 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("NursingCareMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m1890 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `NursingCare`: The relation field `clinicalSetting` on model `NursingCare` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1895[0m
[1;94m   | [0m
[1;94m1894 | [0m  clinicalSettingId   Int?
[1;94m1895 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m1896 | [0m  type                NursingCareType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `prescription` in model `NursingCare`: The relation field `prescription` on model `NursingCare` is missing an opposite relation field on the model `Prescription`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1907[0m
[1;94m   | [0m
[1;94m1906 | [0m  prescriptionId      Int?
[1;94m1907 | [0m  [1;91mprescription        Prescription?         @relation(fields: [prescriptionId], references: [id])[0m
[1;94m1908 | [0m  pharmacyId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `NursingCare`: The relation field `billing` on model `NursingCare` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1911[0m
[1;94m   | [0m
[1;94m1910 | [0m  billingId           Int?
[1;94m1911 | [0m  [1;91mbilling             Billing?              @relation("NursingCareBilling", fields: [billingId], references: [id])[0m
[1;94m1912 | [0m  nursing             Nursing[]             @relation("NursingCareRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NursingCare`: The relation field `createdBy` on model `NursingCare` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1916[0m
[1;94m   | [0m
[1;94m1915 | [0m  createdById         Int?
[1;94m1916 | [0m  [1;91mcreatedBy           User?                 @relation("NursingCareCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1917 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NursingCare`: The relation field `updatedBy` on model `NursingCare` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1918[0m
[1;94m   | [0m
[1;94m1917 | [0m  updatedById         Int?
[1;94m1918 | [0m  [1;91mupdatedBy           User?                 @relation("NursingCareUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1919 | [0m  auditLogs           AuditLog[]            @relation("NursingCareAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NursingCare`: The relation field `auditLogs` on model `NursingCare` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1919[0m
[1;94m   | [0m
[1;94m1918 | [0m  updatedBy           User?                 @relation("NursingCareUpdatedBy", fields: [updatedById], references: [id])
[1;94m1919 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingCareAuditLogs")[0m
[1;94m1920 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `prescription` in model `NursingTask`: The relation field `prescription` on model `NursingTask` is missing an opposite relation field on the model `Prescription`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1939[0m
[1;94m   | [0m
[1;94m1938 | [0m  prescriptionId      Int?
[1;94m1939 | [0m  [1;91mprescription        Prescription?         @relation(fields: [prescriptionId], references: [id])[0m
[1;94m1940 | [0m  shiftId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NursingTask`: The relation field `createdBy` on model `NursingTask` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1943[0m
[1;94m   | [0m
[1;94m1942 | [0m  createdById         Int?
[1;94m1943 | [0m  [1;91mcreatedBy           User?                 @relation("TaskCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1944 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NursingTask`: The relation field `updatedBy` on model `NursingTask` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1945[0m
[1;94m   | [0m
[1;94m1944 | [0m  updatedById         Int?
[1;94m1945 | [0m  [1;91mupdatedBy           User?                 @relation("TaskUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1946 | [0m  auditLogs           AuditLog[]            @relation("NursingTaskAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NursingTask`: The relation field `auditLogs` on model `NursingTask` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1946[0m
[1;94m   | [0m
[1;94m1945 | [0m  updatedBy           User?                 @relation("TaskUpdatedBy", fields: [updatedById], references: [id])
[1;94m1946 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingTaskAuditLogs")[0m
[1;94m1947 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NursingShift`: The relation field `createdBy` on model `NursingShift` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1967[0m
[1;94m   | [0m
[1;94m1966 | [0m  createdById         Int?
[1;94m1967 | [0m  [1;91mcreatedBy           User?                 @relation("ShiftCreatedBy", fields: [createdById], references: [id])[0m
[1;94m1968 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NursingShift`: The relation field `updatedBy` on model `NursingShift` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1969[0m
[1;94m   | [0m
[1;94m1968 | [0m  updatedById         Int?
[1;94m1969 | [0m  [1;91mupdatedBy           User?                 @relation("ShiftUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m1970 | [0m  auditLogs           AuditLog[]            @relation("NursingShiftAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NursingShift`: The relation field `auditLogs` on model `NursingShift` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1970[0m
[1;94m   | [0m
[1;94m1969 | [0m  updatedBy           User?                 @relation("ShiftUpdatedBy", fields: [updatedById], references: [id])
[1;94m1970 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NursingShiftAuditLogs")[0m
[1;94m1971 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Maternity`: The relation field `patient` on model `Maternity` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1997[0m
[1;94m   | [0m
[1;94m1996 | [0m  patientId               Int
[1;94m1997 | [0m  [1;91mpatient                 Patient                 @relation("PatientMaternityRecords", fields: [patientId], references: [id])[0m
[1;94m1998 | [0m  doctorId                Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Maternity`: The relation field `admission` on model `Maternity` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2001[0m
[1;94m   | [0m
[1;94m2000 | [0m  admissionId             Int?
[1;94m2001 | [0m  [1;91madmission               Admission?              @relation("AdmissionMaternity", fields: [admissionId], references: [id])[0m
[1;94m2002 | [0m  departmentId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Maternity`: The relation field `clinicalSetting` on model `Maternity` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2005[0m
[1;94m   | [0m
[1;94m2004 | [0m  clinicalSettingId       Int?
[1;94m2005 | [0m  [1;91mclinicalSetting         ClinicalSetting?        @relation(fields: [clinicalSettingId], references: [id])[0m
[1;94m2006 | [0m  status                  MaternityStatus         @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Maternity`: The relation field `clinicalRecord` on model `Maternity` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2015[0m
[1;94m   | [0m
[1;94m2014 | [0m  clinicalRecordId        Int?
[1;94m2015 | [0m  [1;91mclinicalRecord          ClinicalRecord?         @relation(fields: [clinicalRecordId], references: [id])[0m
[1;94m2016 | [0m  billingId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Maternity`: The relation field `billing` on model `Maternity` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2017[0m
[1;94m   | [0m
[1;94m2016 | [0m  billingId               Int?
[1;94m2017 | [0m  [1;91mbilling                 Billing?                @relation(fields: [billingId], references: [id])[0m
[1;94m2018 | [0m  claimId                 Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `Maternity`: The relation field `claim` on model `Maternity` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2019[0m
[1;94m   | [0m
[1;94m2018 | [0m  claimId                 Int?
[1;94m2019 | [0m  [1;91mclaim                   Claim?                  @relation(fields: [claimId], references: [id])[0m
[1;94m2020 | [0m  wardId                  Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `ward` in model `Maternity`: The relation field `ward` on model `Maternity` is missing an opposite relation field on the model `Ward`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2021[0m
[1;94m   | [0m
[1;94m2020 | [0m  wardId                  Int?
[1;94m2021 | [0m  [1;91mward                    Ward?                   @relation(fields: [wardId], references: [id])[0m
[1;94m2022 | [0m  bedId                   Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `bed` in model `Maternity`: The relation field `bed` on model `Maternity` is missing an opposite relation field on the model `Bed`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2023[0m
[1;94m   | [0m
[1;94m2022 | [0m  bedId                   Int?
[1;94m2023 | [0m  [1;91mbed                     Bed?                    @relation(fields: [bedId], references: [id])[0m
[1;94m2024 | [0m  laboratoryId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratory` in model `Maternity`: The relation field `laboratory` on model `Maternity` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2025[0m
[1;94m   | [0m
[1;94m2024 | [0m  laboratoryId            Int?
[1;94m2025 | [0m  [1;91mlaboratory              Laboratory?             @relation(fields: [laboratoryId], references: [id])[0m
[1;94m2026 | [0m  radiologyId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2027[0m
[1;94m   | [0m
[1;94m2026 | [0m  radiologyId             Int?
[1;94m2027 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2028 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1182[0m
[1;94m   | [0m
[1;94m1181 | [0m  maternityId         Int?                  @unique
[1;94m1182 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1183 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2027[0m
[1;94m   | [0m
[1;94m2026 | [0m  radiologyId             Int?
[1;94m2027 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2028 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Maternity` and `maternity` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1182[0m
[1;94m   | [0m
[1;94m1181 | [0m  maternityId         Int?                  @unique
[1;94m1182 | [0m  [1;91mmaternity           Maternity?            @relation("MaternityRadiology", fields: [maternityId], references: [id])[0m
[1;94m1183 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `radiologyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2027[0m
[1;94m   | [0m
[1;94m2026 | [0m  radiologyId             Int?
[1;94m2027 | [0m  [1;91mradiology               Radiology?              @relation("MaternityRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2028 | [0m  pharmacyId              Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2029[0m
[1;94m   | [0m
[1;94m2028 | [0m  pharmacyId              Int?
[1;94m2029 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2030 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2246[0m
[1;94m   | [0m
[1;94m2245 | [0m  maternityId           Int?
[1;94m2246 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2247 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2029[0m
[1;94m   | [0m
[1;94m2028 | [0m  pharmacyId              Int?
[1;94m2029 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2030 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Maternity` and `maternity` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2246[0m
[1;94m   | [0m
[1;94m2245 | [0m  maternityId           Int?
[1;94m2246 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2247 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `pharmacyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2029[0m
[1;94m   | [0m
[1;94m2028 | [0m  pharmacyId              Int?
[1;94m2029 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2030 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `medicalRecordId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2033[0m
[1;94m   | [0m
[1;94m2032 | [0m  medicalRecordId         Int?
[1;94m2033 | [0m  [1;91mmedicalRecord           MedicalRecord?          @relation("MedicalRecordMaternity", fields: [medicalRecordId], references: [id])[0m
[1;94m2034 | [0m  notes                   String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Vaccination`: The relation field `patient` on model `Vaccination` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2113[0m
[1;94m   | [0m
[1;94m2112 | [0m  patientId           Int
[1;94m2113 | [0m  [1;91mpatient             Patient               @relation("PatientVaccinationRecords", fields: [patientId], references: [id])[0m
[1;94m2114 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `Vaccination`: The relation field `appointment` on model `Vaccination` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2119[0m
[1;94m   | [0m
[1;94m2118 | [0m  appointmentId       Int?
[1;94m2119 | [0m  [1;91mappointment         Appointment?          @relation("VaccinationAppointment", fields: [appointmentId], references: [id])[0m
[1;94m2120 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `Vaccination`: The relation field `medicalRecord` on model `Vaccination` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2121[0m
[1;94m   | [0m
[1;94m2120 | [0m  medicalRecordId     Int?
[1;94m2121 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("VaccinationMedicalRecord", fields: [medicalRecordId], references: [id])[0m
[1;94m2122 | [0m  clinicalRecordId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Vaccination`: The relation field `clinicalRecord` on model `Vaccination` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2123[0m
[1;94m   | [0m
[1;94m2122 | [0m  clinicalRecordId    Int?
[1;94m2123 | [0m  [1;91mclinicalRecord      ClinicalRecord?       @relation("VaccinationClinicalRecord", fields: [clinicalRecordId], references: [id])[0m
[1;94m2124 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Vaccination`: The relation field `clinicalSetting` on model `Vaccination` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2127[0m
[1;94m   | [0m
[1;94m2126 | [0m  clinicalSettingId   Int?
[1;94m2127 | [0m  [1;91mclinicalSetting     ClinicalSetting?      @relation("VaccinationClinicalSetting", fields: [clinicalSettingId], references: [id])[0m
[1;94m2128 | [0m  vaccineId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `vaccine` in model `Vaccination`: The relation field `vaccine` on model `Vaccination` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2129[0m
[1;94m   | [0m
[1;94m2128 | [0m  vaccineId           Int?
[1;94m2129 | [0m  [1;91mvaccine             Medication?           @relation("VaccinationMedication", fields: [vaccineId], references: [id])[0m
[1;94m2130 | [0m  type                VaccineType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `Vaccination`: The relation field `nhifClaim` on model `Vaccination` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2150[0m
[1;94m   | [0m
[1;94m2149 | [0m  nhifClaimId         Int?
[1;94m2150 | [0m  [1;91mnhifClaim           NhifClaim?            @relation("VaccinationNhifClaim", fields: [nhifClaimId], references: [id])[0m
[1;94m2151 | [0m  pharmacyId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `Vaccination`: The relation field `pharmacy` on model `Vaccination` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2152[0m
[1;94m   | [0m
[1;94m2151 | [0m  pharmacyId          Int?
[1;94m2152 | [0m  [1;91mpharmacy            Pharmacy?             @relation("VaccinationPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2153 | [0m  inventoryId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `Vaccination`: The relation field `inventory` on model `Vaccination` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2154[0m
[1;94m   | [0m
[1;94m2153 | [0m  inventoryId         Int?
[1;94m2154 | [0m  [1;91minventory           Inventory?            @relation("VaccinationInventory", fields: [inventoryId], references: [id])[0m
[1;94m2155 | [0m  documents           String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `vaccinationCampaign` on Model `Vaccination` must specify the `fields` argument in the @relation attribute. You can run `prisma format` to fix this automatically.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2163[0m
[1;94m   | [0m
[1;94m2162 | [0m  updatedAt           DateTime              @updatedAt
[1;94m2163 | [0m  [1;91mvaccinationCampaign  VaccinationCampaign?  @relation("CampaignVaccinations")[0m
[1;94m2164 | [0m  vaccinationRecords  Doctor[]              @relation("DoctorVaccinationRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation field `vaccinationCampaign` on Model `Vaccination` must specify the `references` argument in the @relation attribute.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2163[0m
[1;94m   | [0m
[1;94m2162 | [0m  updatedAt           DateTime              @updatedAt
[1;94m2163 | [0m  [1;91mvaccinationCampaign  VaccinationCampaign?  @relation("CampaignVaccinations")[0m
[1;94m2164 | [0m  vaccinationRecords  Doctor[]              @relation("DoctorVaccinationRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Pharmacy`: The relation field `admission` on model `Pharmacy` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2229[0m
[1;94m   | [0m
[1;94m2228 | [0m  admissionId           Int?
[1;94m2229 | [0m  [1;91madmission             Admission?            @relation("PharmacyAdmissions", fields: [admissionId], references: [id])[0m
[1;94m2230 | [0m  prescriptionId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2233[0m
[1;94m   | [0m
[1;94m2232 | [0m  invoiceId             Int?
[1;94m2233 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2234 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2700[0m
[1;94m   | [0m
[1;94m2699 | [0m  pharmacyId            Int?
[1;94m2700 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2701 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2233[0m
[1;94m   | [0m
[1;94m2232 | [0m  invoiceId             Int?
[1;94m2233 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2234 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Pharmacy` and `pharmacy` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2700[0m
[1;94m   | [0m
[1;94m2699 | [0m  pharmacyId            Int?
[1;94m2700 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2701 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2233[0m
[1;94m   | [0m
[1;94m2232 | [0m  invoiceId             Int?
[1;94m2233 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2234 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Pharmacy`: The relation field `clinicalSetting` on model `Pharmacy` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2237[0m
[1;94m   | [0m
[1;94m2236 | [0m  clinicalSettingId     Int?
[1;94m2237 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("PharmacyClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m2238 | [0m  dispensingRecords     DispensingRecord[]    @relation("PharmacyDispensingRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `dispensingRecords` in model `Pharmacy`: The relation field `dispensingRecords` on model `Pharmacy` is missing an opposite relation field on the model `DispensingRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2238[0m
[1;94m   | [0m
[1;94m2237 | [0m  clinicalSetting       ClinicalSetting?      @relation("PharmacyClinicalSettings", fields: [clinicalSettingId], references: [id])
[1;94m2238 | [0m  [1;91mdispensingRecords     DispensingRecord[]    @relation("PharmacyDispensingRecords")[0m
[1;94m2239 | [0m  createdById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2246[0m
[1;94m   | [0m
[1;94m2245 | [0m  maternityId           Int?
[1;94m2246 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2247 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2029[0m
[1;94m   | [0m
[1;94m2028 | [0m  pharmacyId              Int?
[1;94m2029 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2030 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2246[0m
[1;94m   | [0m
[1;94m2245 | [0m  maternityId           Int?
[1;94m2246 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2247 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `maternity` on Model `Pharmacy` and `pharmacy` on Model `Maternity` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2029[0m
[1;94m   | [0m
[1;94m2028 | [0m  pharmacyId              Int?
[1;94m2029 | [0m  [1;91mpharmacy                Pharmacy?               @relation("MaternityPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2030 | [0m  operationTheatreId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `maternityId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2246[0m
[1;94m   | [0m
[1;94m2245 | [0m  maternityId           Int?
[1;94m2246 | [0m  [1;91mmaternity             Maternity?            @relation("MaternityPharmacy", fields: [maternityId], references: [id])[0m
[1;94m2247 | [0m  homeCares             HomeCare[]            @relation("HomeCarePharmacy")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `Medication`: The relation field `inventory` on model `Medication` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2275[0m
[1;94m   | [0m
[1;94m2274 | [0m  inventoryId           Int?
[1;94m2275 | [0m  [1;91minventory             Inventory?            @relation("MedicationInventory", fields: [inventoryId], references: [id])[0m
[1;94m2276 | [0m  prescriptions         Prescription[]        @relation("MedicationPrescriptions")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `dispensingRecords` in model `Medication`: The relation field `dispensingRecords` on model `Medication` is missing an opposite relation field on the model `DispensingRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2277[0m
[1;94m   | [0m
[1;94m2276 | [0m  prescriptions         Prescription[]        @relation("MedicationPrescriptions")
[1;94m2277 | [0m  [1;91mdispensingRecords     DispensingRecord[]    @relation("MedicationDispensingRecords")[0m
[1;94m2278 | [0m  adverseReactions      AdverseReaction[]     @relation("MedicationAdverseReactions")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `Prescription`: The relation field `clinicalRecord` on model `Prescription` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2308[0m
[1;94m   | [0m
[1;94m2307 | [0m  clinicalRecordId      Int?
[1;94m2308 | [0m  [1;91mclinicalRecord        ClinicalRecord?       @relation("PrescriptionClinicalRecords", fields: [clinicalRecordId], references: [id])[0m
[1;94m2309 | [0m  medicalRecordId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Prescription`: The relation field `createdBy` on model `Prescription` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2323[0m
[1;94m   | [0m
[1;94m2322 | [0m  createdById           Int?
[1;94m2323 | [0m  [1;91mcreatedBy             User?                 @relation("PrescriptionCreatedBy", fields: [createdById], references: [id])[0m
[1;94m2324 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Prescription`: The relation field `updatedBy` on model `Prescription` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2325[0m
[1;94m   | [0m
[1;94m2324 | [0m  updatedById           Int?
[1;94m2325 | [0m  [1;91mupdatedBy             User?                 @relation("PrescriptionUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m2326 | [0m  auditLogs             AuditLog[]            @relation("PrescriptionAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Prescription`: The relation field `auditLogs` on model `Prescription` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2326[0m
[1;94m   | [0m
[1;94m2325 | [0m  updatedBy             User?                 @relation("PrescriptionUpdatedBy", fields: [updatedById], references: [id])
[1;94m2326 | [0m  [1;91mauditLogs             AuditLog[]            @relation("PrescriptionAuditLogs")[0m
[1;94m2327 | [0m  createdAt             DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursingCares` in model `Prescription`: The relation field `nursingCares` on model `Prescription` is missing an opposite relation field on the model `NursingCare`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2330[0m
[1;94m   | [0m
[1;94m2329 | [0m  prescription_ITEMS    PrescriptionItem[]    @relation("PrescriptionItems")
[1;94m2330 | [0m  [1;91mnursingCares          NursingCare[]         @relation("NursingCarePrescription")[0m
[1;94m2331 | [0m  nursingTasks          NursingTask[]         @relation("NursingTaskPrescription")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nursingTasks` in model `Prescription`: The relation field `nursingTasks` on model `Prescription` is missing an opposite relation field on the model `NursingTask`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2331[0m
[1;94m   | [0m
[1;94m2330 | [0m  nursingCares          NursingCare[]         @relation("NursingCarePrescription")
[1;94m2331 | [0m  [1;91mnursingTasks          NursingTask[]         @relation("NursingTaskPrescription")[0m
[1;94m2332 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurements` in model `Department`: The relation field `procurements` on model `Department` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2419[0m
[1;94m   | [0m
[1;94m2418 | [0m  inventoryItems        Inventory[]           @relation("DepartmentInventory")
[1;94m2419 | [0m  [1;91mprocurements          Procurement[]         @relation("DepartmentProcurements")[0m
[1;94m2420 | [0m  costCenters           CostCenter[]          @relation("DepartmentCostCenters")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `verifications` in model `Department`: The relation field `verifications` on model `Department` is missing an opposite relation field on the model `Verification`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2462[0m
[1;94m   | [0m
[1;94m2461 | [0m  vaccinationCampaigns  VaccinationCampaign[] @relation("VaccinationCampaignDepartment")
[1;94m2462 | [0m  [1;91mverifications         Verification[]        @relation("DepartmentVerification")[0m
[1;94m2463 | [0m  verificationConfigs   VerificationConfiguration[] @relation("DepartmentVerificationConfig")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `verificationConfigs` in model `Department`: The relation field `verificationConfigs` on model `Department` is missing an opposite relation field on the model `VerificationConfiguration`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2463[0m
[1;94m   | [0m
[1;94m2462 | [0m  verifications         Verification[]        @relation("DepartmentVerification")
[1;94m2463 | [0m  [1;91mverificationConfigs   VerificationConfiguration[] @relation("DepartmentVerificationConfig")[0m
[1;94m2464 | [0m  emergencies           Emergency[]           @relation("DepartmentEmergencies")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referrals` in model `Department`: The relation field `referrals` on model `Department` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2465[0m
[1;94m   | [0m
[1;94m2464 | [0m  emergencies           Emergency[]           @relation("DepartmentEmergencies")
[1;94m2465 | [0m  [1;91mreferrals             Referral[]            @relation("Referral_department_fkey")[0m
[1;94m2466 | [0m  referralPrograms      ReferralProgram[]     @relation("ReferralProgram_department_fkey")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referralPrograms` in model `Department`: The relation field `referralPrograms` on model `Department` is missing an opposite relation field on the model `ReferralProgram`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2466[0m
[1;94m   | [0m
[1;94m2465 | [0m  referrals             Referral[]            @relation("Referral_department_fkey")
[1;94m2466 | [0m  [1;91mreferralPrograms      ReferralProgram[]     @relation("ReferralProgram_department_fkey")[0m
[1;94m2467 | [0m  medicalRecords        MedicalRecord[]       @relation("DepartmentMedicalRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `PrescriptionItem`: The relation field `createdBy` on model `PrescriptionItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2505[0m
[1;94m   | [0m
[1;94m2504 | [0m  createdById         Int?                  @unique
[1;94m2505 | [0m  [1;91mcreatedBy           User?                 @relation("PrescriptionItemCreatedBy", fields: [createdById], references: [id])[0m
[1;94m2506 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `PrescriptionItem`: The relation field `updatedBy` on model `PrescriptionItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2507[0m
[1;94m   | [0m
[1;94m2506 | [0m  updatedById         Int?                  @unique
[1;94m2507 | [0m  [1;91mupdatedBy           User?                 @relation("PrescriptionItemUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m2508 | [0m  auditLogs           AuditLog[]            @relation("PrescriptionItemAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `PrescriptionItem`: The relation field `auditLogs` on model `PrescriptionItem` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2508[0m
[1;94m   | [0m
[1;94m2507 | [0m  updatedBy           User?                 @relation("PrescriptionItemUpdatedBy", fields: [updatedById], references: [id])
[1;94m2508 | [0m  [1;91mauditLogs           AuditLog[]            @relation("PrescriptionItemAuditLogs")[0m
[1;94m2509 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medication` in model `DispensingRecord`: The relation field `medication` on model `DispensingRecord` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2519[0m
[1;94m   | [0m
[1;94m2518 | [0m  medicationId        Int
[1;94m2519 | [0m  [1;91mmedication          Medication            @relation("DispensingRecordMedication", fields: [medicationId], references: [id])[0m
[1;94m2520 | [0m  patientType         PatientType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `DispensingRecord`: The relation field `pharmacy` on model `DispensingRecord` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2526[0m
[1;94m   | [0m
[1;94m2525 | [0m  pharmacyId          Int?                  @unique
[1;94m2526 | [0m  [1;91mpharmacy            Pharmacy?             @relation("DispensingRecordPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2527 | [0m  invoiceId           Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `DispensingRecord`: The relation field `createdBy` on model `DispensingRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2534[0m
[1;94m   | [0m
[1;94m2533 | [0m  createdById         Int?                  @unique
[1;94m2534 | [0m  [1;91mcreatedBy           User?                 @relation("DispensingRecordCreatedBy", fields: [createdById], references: [id])[0m
[1;94m2535 | [0m  updatedById         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `DispensingRecord`: The relation field `updatedBy` on model `DispensingRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2536[0m
[1;94m   | [0m
[1;94m2535 | [0m  updatedById         Int?                  @unique
[1;94m2536 | [0m  [1;91mupdatedBy           User?                 @relation("DispensingRecordUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m2537 | [0m  auditLogs           AuditLog[]            @relation("DispensingRecordAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `DispensingRecord`: The relation field `auditLogs` on model `DispensingRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2537[0m
[1;94m   | [0m
[1;94m2536 | [0m  updatedBy           User?                 @relation("DispensingRecordUpdatedBy", fields: [updatedById], references: [id])
[1;94m2537 | [0m  [1;91mauditLogs           AuditLog[]            @relation("DispensingRecordAuditLogs")[0m
[1;94m2538 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `StockAdjustment`: The relation field `approvedBy` on model `StockAdjustment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2555[0m
[1;94m   | [0m
[1;94m2554 | [0m  approvedById        Int?                  @unique
[1;94m2555 | [0m  [1;91mapprovedBy          User?                 @relation("AdjustmentApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m2556 | [0m  adjustmentDate      DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `procurement` in model `StockAdjustment`: The relation field `procurement` on model `StockAdjustment` is missing an opposite relation field on the model `Procurement`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2560[0m
[1;94m   | [0m
[1;94m2559 | [0m  procurementId       Int?                  @unique
[1;94m2560 | [0m  [1;91mprocurement         Procurement?          @relation("StockAdjustmentProcurement", fields: [procurementId], references: [id])[0m
[1;94m2561 | [0m  inventoryId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `StockAdjustment`: The relation field `inventory` on model `StockAdjustment` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2562[0m
[1;94m   | [0m
[1;94m2561 | [0m  inventoryId         Int?                  @unique
[1;94m2562 | [0m  [1;91minventory           Inventory?            @relation("StockAdjustmentInventory", fields: [inventoryId], references: [id])[0m
[1;94m2563 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `StockAdjustment`: The relation field `auditLogs` on model `StockAdjustment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2564[0m
[1;94m   | [0m
[1;94m2563 | [0m  notes               String?
[1;94m2564 | [0m  [1;91mauditLogs           AuditLog[]            @relation("StockAdjustmentAuditLogs")[0m
[1;94m2565 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `notifications` in model `Billing`: The relation field `notifications` on model `Billing` is missing an opposite relation field on the model `BillingNotification`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2673[0m
[1;94m   | [0m
[1;94m2672 | [0m  auditLogs             AuditLog[]          @relation("BillingAuditLogs")
[1;94m2673 | [0m  [1;91mnotifications         BillingNotification[] @relation("BillingNotifications")[0m
[1;94m2674 | [0m  admissions            Admission[]         @relation("AdmissionBilling")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `prescriptionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2690[0m
[1;94m   | [0m
[1;94m2689 | [0m  prescriptionId        Int?
[1;94m2690 | [0m  [1;91mprescription          Prescription?       @relation("InvoicePrescription", fields: [prescriptionId], references: [id])[0m
[1;94m2691 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `appointmentId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2692[0m
[1;94m   | [0m
[1;94m2691 | [0m  appointmentId         Int?
[1;94m2692 | [0m  [1;91mappointment           Appointment?        @relation("AppointmentInvoices", fields: [appointmentId], references: [id])[0m
[1;94m2693 | [0m  admissionId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Invoice`: The relation field `admission` on model `Invoice` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2694[0m
[1;94m   | [0m
[1;94m2693 | [0m  admissionId           Int?
[1;94m2694 | [0m  [1;91madmission             Admission?          @relation("AdmissionInvoices", fields: [admissionId], references: [id])[0m
[1;94m2695 | [0m  laboratoryId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratory` in model `Invoice`: The relation field `laboratory` on model `Invoice` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2696[0m
[1;94m   | [0m
[1;94m2695 | [0m  laboratoryId          Int?
[1;94m2696 | [0m  [1;91mlaboratory            Laboratory?         @relation("InvoiceLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m2697 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2698[0m
[1;94m   | [0m
[1;94m2697 | [0m  radiologyId           Int?
[1;94m2698 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2699 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1168[0m
[1;94m   | [0m
[1;94m1167 | [0m  invoiceId           Int?                  @unique
[1;94m1168 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1169 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2698[0m
[1;94m   | [0m
[1;94m2697 | [0m  radiologyId           Int?
[1;94m2698 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2699 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `radiology` on Model `Invoice` and `invoice` on Model `Radiology` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1168[0m
[1;94m   | [0m
[1;94m1167 | [0m  invoiceId           Int?                  @unique
[1;94m1168 | [0m  [1;91minvoice             Invoice?              @relation("InvoiceRadiology", fields: [invoiceId], references: [id])[0m
[1;94m1169 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `radiologyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2698[0m
[1;94m   | [0m
[1;94m2697 | [0m  radiologyId           Int?
[1;94m2698 | [0m  [1;91mradiology             Radiology?          @relation("InvoiceRadiology", fields: [radiologyId], references: [id])[0m
[1;94m2699 | [0m  pharmacyId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2700[0m
[1;94m   | [0m
[1;94m2699 | [0m  pharmacyId            Int?
[1;94m2700 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2701 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2233[0m
[1;94m   | [0m
[1;94m2232 | [0m  invoiceId             Int?
[1;94m2233 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2234 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2700[0m
[1;94m   | [0m
[1;94m2699 | [0m  pharmacyId            Int?
[1;94m2700 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2701 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `pharmacy` on Model `Invoice` and `invoice` on Model `Pharmacy` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2233[0m
[1;94m   | [0m
[1;94m2232 | [0m  invoiceId             Int?
[1;94m2233 | [0m  [1;91minvoice               Invoice?              @relation("InvoicePharmacy", fields: [invoiceId], references: [id])[0m
[1;94m2234 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `pharmacyId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2700[0m
[1;94m   | [0m
[1;94m2699 | [0m  pharmacyId            Int?
[1;94m2700 | [0m  [1;91mpharmacy              Pharmacy?           @relation("InvoicePharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m2701 | [0m  operationTheatreId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `Invoice`: The relation field `operationTheatre` on model `Invoice` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2702[0m
[1;94m   | [0m
[1;94m2701 | [0m  operationTheatreId    Int?
[1;94m2702 | [0m  [1;91moperationTheatre      OperationTheatre?   @relation("InvoiceOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m2703 | [0m  totalAmount           Float
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2709[0m
[1;94m   | [0m
[1;94m2708 | [0m  transactionId         Int?
[1;94m2709 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2710 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2953[0m
[1;94m   | [0m
[1;94m2952 | [0m  invoiceId         Int?
[1;94m2953 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2954 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2709[0m
[1;94m   | [0m
[1;94m2708 | [0m  transactionId         Int?
[1;94m2709 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2710 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Invoice` and `invoice` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2953[0m
[1;94m   | [0m
[1;94m2952 | [0m  invoiceId         Int?
[1;94m2953 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2954 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `transactionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2709[0m
[1;94m   | [0m
[1;94m2708 | [0m  transactionId         Int?
[1;94m2709 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2710 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2711[0m
[1;94m   | [0m
[1;94m2710 | [0m  claimId               Int?
[1;94m2711 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2712 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3225[0m
[1;94m   | [0m
[1;94m3224 | [0m  invoiceId             Int?
[1;94m3225 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3226 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2711[0m
[1;94m   | [0m
[1;94m2710 | [0m  claimId               Int?
[1;94m2711 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2712 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Invoice` and `invoice` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3225[0m
[1;94m   | [0m
[1;94m3224 | [0m  invoiceId             Int?
[1;94m3225 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3226 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `claimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2711[0m
[1;94m   | [0m
[1;94m2710 | [0m  claimId               Int?
[1;94m2711 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2712 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2713[0m
[1;94m   | [0m
[1;94m2712 | [0m  nhifClaimId           Int?
[1;94m2713 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2714 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3376[0m
[1;94m   | [0m
[1;94m3375 | [0m  invoiceId           Int?
[1;94m3376 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3377 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2713[0m
[1;94m   | [0m
[1;94m2712 | [0m  nhifClaimId           Int?
[1;94m2713 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2714 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Invoice` and `invoice` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3376[0m
[1;94m   | [0m
[1;94m3375 | [0m  invoiceId           Int?
[1;94m3376 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3377 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `nhifClaimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2713[0m
[1;94m   | [0m
[1;94m2712 | [0m  nhifClaimId           Int?
[1;94m2713 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2714 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaims` in model `Invoice`: The relation field `nhifClaims` on model `Invoice` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2737[0m
[1;94m   | [0m
[1;94m2736 | [0m  payments              Payment[]           @relation("PaymentInvoices")
[1;94m2737 | [0m  [1;91mnhifClaims            NhifClaim[]         @relation("NhifClaimInvoice")[0m
[1;94m2738 | [0m  patients              Patient[]           @relation("PatientInsurances")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patients` in model `Invoice`: The relation field `patients` on model `Invoice` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2738[0m
[1;94m   | [0m
[1;94m2737 | [0m  nhifClaims            NhifClaim[]         @relation("NhifClaimInvoice")
[1;94m2738 | [0m  [1;91mpatients              Patient[]           @relation("PatientInsurances")[0m
[1;94m2739 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2953[0m
[1;94m   | [0m
[1;94m2952 | [0m  invoiceId         Int?
[1;94m2953 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2954 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2709[0m
[1;94m   | [0m
[1;94m2708 | [0m  transactionId         Int?
[1;94m2709 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2710 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2953[0m
[1;94m   | [0m
[1;94m2952 | [0m  invoiceId         Int?
[1;94m2953 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2954 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Transaction` and `transaction` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2709[0m
[1;94m   | [0m
[1;94m2708 | [0m  transactionId         Int?
[1;94m2709 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionInvoices", fields: [transactionId], references: [id])[0m
[1;94m2710 | [0m  claimId               Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2953[0m
[1;94m   | [0m
[1;94m2952 | [0m  invoiceId         Int?
[1;94m2953 | [0m  [1;91minvoice           Invoice?            @relation("TransactionInvoices", fields: [invoiceId], references: [id])[0m
[1;94m2954 | [0m  claimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2955[0m
[1;94m   | [0m
[1;94m2954 | [0m  claimId           Int?
[1;94m2955 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2956 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3241[0m
[1;94m   | [0m
[1;94m3240 | [0m  transactionId         Int?
[1;94m3241 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3242 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2955[0m
[1;94m   | [0m
[1;94m2954 | [0m  claimId           Int?
[1;94m2955 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2956 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `claim` on Model `Transaction` and `transaction` on Model `Claim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3241[0m
[1;94m   | [0m
[1;94m3240 | [0m  transactionId         Int?
[1;94m3241 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3242 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `claimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2955[0m
[1;94m   | [0m
[1;94m2954 | [0m  claimId           Int?
[1;94m2955 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2956 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2957[0m
[1;94m   | [0m
[1;94m2956 | [0m  nhifClaimId       Int?
[1;94m2957 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2958 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3412[0m
[1;94m   | [0m
[1;94m3411 | [0m  transactionId       Int?
[1;94m3412 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3413 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2957[0m
[1;94m   | [0m
[1;94m2956 | [0m  nhifClaimId       Int?
[1;94m2957 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2958 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `nhifClaim` on Model `Transaction` and `transaction` on Model `NhifClaim` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3412[0m
[1;94m   | [0m
[1;94m3411 | [0m  transactionId       Int?
[1;94m3412 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3413 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `nhifClaimId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2957[0m
[1;94m   | [0m
[1;94m2956 | [0m  nhifClaimId       Int?
[1;94m2957 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2958 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `fixedAsset` in model `Transaction`: The relation field `fixedAsset` on model `Transaction` is missing an opposite relation field on the model `FixedAsset`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2963[0m
[1;94m   | [0m
[1;94m2962 | [0m  fixedAssetId      Int?
[1;94m2963 | [0m  [1;91mfixedAsset        FixedAsset?         @relation("TransactionFixedAssets", fields: [fixedAssetId], references: [id])[0m
[1;94m2964 | [0m  createdById       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3002[0m
[1;94m   | [0m
[1;94m3001 | [0m  budgetId          Int?
[1;94m3002 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m3003 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3027[0m
[1;94m   | [0m
[1;94m3026 | [0m  costCenterId      Int?
[1;94m3027 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3028 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3002[0m
[1;94m   | [0m
[1;94m3001 | [0m  budgetId          Int?
[1;94m3002 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m3003 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `budget` on Model `CostCenter` and `costCenter` on Model `Budget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3027[0m
[1;94m   | [0m
[1;94m3026 | [0m  costCenterId      Int?
[1;94m3027 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3028 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `budgetId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3002[0m
[1;94m   | [0m
[1;94m3001 | [0m  budgetId          Int?
[1;94m3002 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m3003 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3027[0m
[1;94m   | [0m
[1;94m3026 | [0m  costCenterId      Int?
[1;94m3027 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3028 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3002[0m
[1;94m   | [0m
[1;94m3001 | [0m  budgetId          Int?
[1;94m3002 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m3003 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3027[0m
[1;94m   | [0m
[1;94m3026 | [0m  costCenterId      Int?
[1;94m3027 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3028 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `costCenter` on Model `Budget` and `budget` on Model `CostCenter` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3002[0m
[1;94m   | [0m
[1;94m3001 | [0m  budgetId          Int?
[1;94m3002 | [0m  [1;91mbudget            Budget?             @relation("CostCenterBudget", fields: [budgetId], references: [id])[0m
[1;94m3003 | [0m  managerId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `costCenterId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3027[0m
[1;94m   | [0m
[1;94m3026 | [0m  costCenterId      Int?
[1;94m3027 | [0m  [1;91mcostCenter        CostCenter?         @relation("CostCenterBudget", fields: [costCenterId], references: [id])[0m
[1;94m3028 | [0m  transactions      Transaction[]       @relation("TransactionBudget")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `BankStatement`: The relation field `auditLogs` on model `BankStatement` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3090[0m
[1;94m   | [0m
[1;94m3089 | [0m  updatedAt        DateTime             @updatedAt
[1;94m3090 | [0m  [1;91mauditLogs        AuditLog[]           @relation("BankStatementAuditLogs")[0m
[1;94m3091 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3225[0m
[1;94m   | [0m
[1;94m3224 | [0m  invoiceId             Int?
[1;94m3225 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3226 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2711[0m
[1;94m   | [0m
[1;94m2710 | [0m  claimId               Int?
[1;94m2711 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2712 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3225[0m
[1;94m   | [0m
[1;94m3224 | [0m  invoiceId             Int?
[1;94m3225 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3226 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `Claim` and `claim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2711[0m
[1;94m   | [0m
[1;94m2710 | [0m  claimId               Int?
[1;94m2711 | [0m  [1;91mclaim                 Claim?              @relation("InvoiceClaims", fields: [claimId], references: [id])[0m
[1;94m2712 | [0m  nhifClaimId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3225[0m
[1;94m   | [0m
[1;94m3224 | [0m  invoiceId             Int?
[1;94m3225 | [0m  [1;91minvoice               Invoice?            @relation("InvoiceClaims", fields: [invoiceId], references: [id])[0m
[1;94m3226 | [0m  appointmentId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `Claim`: The relation field `appointment` on model `Claim` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3227[0m
[1;94m   | [0m
[1;94m3226 | [0m  appointmentId         Int?
[1;94m3227 | [0m  [1;91mappointment           Appointment?        @relation("ClaimAppointments", fields: [appointmentId], references: [id])[0m
[1;94m3228 | [0m  admissionId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `Claim`: The relation field `pharmacy` on model `Claim` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3231[0m
[1;94m   | [0m
[1;94m3230 | [0m  pharmacyId            Int?
[1;94m3231 | [0m  [1;91mpharmacy              Pharmacy?           @relation("ClaimPharmacy", fields: [pharmacyId], references: [id])[0m
[1;94m3232 | [0m  laboratoryId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3233[0m
[1;94m   | [0m
[1;94m3232 | [0m  laboratoryId          Int?
[1;94m3233 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3234 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1075[0m
[1;94m   | [0m
[1;94m1074 | [0m  claimId               Int?                @unique
[1;94m1075 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1076 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3233[0m
[1;94m   | [0m
[1;94m3232 | [0m  laboratoryId          Int?
[1;94m3233 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3234 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `laboratory` on Model `Claim` and `claim` on Model `Laboratory` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:1075[0m
[1;94m   | [0m
[1;94m1074 | [0m  claimId               Int?                @unique
[1;94m1075 | [0m  [1;91mclaim                 Claim?              @relation("ClaimLaboratory", fields: [claimId], references: [id])[0m
[1;94m1076 | [0m  sampleId              String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `laboratoryId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3233[0m
[1;94m   | [0m
[1;94m3232 | [0m  laboratoryId          Int?
[1;94m3233 | [0m  [1;91mlaboratory            Laboratory?         @relation("ClaimLaboratory", fields: [laboratoryId], references: [id])[0m
[1;94m3234 | [0m  radiologyId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `Claim`: The relation field `nhifClaim` on model `Claim` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3239[0m
[1;94m   | [0m
[1;94m3238 | [0m  nhifClaimId           Int?
[1;94m3239 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("ClaimNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m3240 | [0m  transactionId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3241[0m
[1;94m   | [0m
[1;94m3240 | [0m  transactionId         Int?
[1;94m3241 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3242 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2955[0m
[1;94m   | [0m
[1;94m2954 | [0m  claimId           Int?
[1;94m2955 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2956 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3241[0m
[1;94m   | [0m
[1;94m3240 | [0m  transactionId         Int?
[1;94m3241 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3242 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `Claim` and `claim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2955[0m
[1;94m   | [0m
[1;94m2954 | [0m  claimId           Int?
[1;94m2955 | [0m  [1;91mclaim             Claim?              @relation("TransactionClaims", fields: [claimId], references: [id])[0m
[1;94m2956 | [0m  nhifClaimId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `transactionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3241[0m
[1;94m   | [0m
[1;94m3240 | [0m  transactionId         Int?
[1;94m3241 | [0m  [1;91mtransaction           Transaction?        @relation("TransactionClaims", fields: [transactionId], references: [id])[0m
[1;94m3242 | [0m  claimNumber           String              @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Claim`: The relation field `createdBy` on model `Claim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3261[0m
[1;94m   | [0m
[1;94m3260 | [0m  createdById           Int?
[1;94m3261 | [0m  [1;91mcreatedBy             User?               @relation("ClaimCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3262 | [0m  approvedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `Claim`: The relation field `approvedBy` on model `Claim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3263[0m
[1;94m   | [0m
[1;94m3262 | [0m  approvedById          Int?
[1;94m3263 | [0m  [1;91mapprovedBy            User?               @relation("ClaimApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3264 | [0m  updatedById           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Claim`: The relation field `updatedBy` on model `Claim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3265[0m
[1;94m   | [0m
[1;94m3264 | [0m  updatedById           Int?
[1;94m3265 | [0m  [1;91mupdatedBy             User?               @relation("ClaimUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3266 | [0m  auditLogs             AuditLog[]          @relation("ClaimAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Claim`: The relation field `auditLogs` on model `Claim` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3266[0m
[1;94m   | [0m
[1;94m3265 | [0m  updatedBy             User?               @relation("ClaimUpdatedBy", fields: [updatedById], references: [id])
[1;94m3266 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClaimAuditLogs")[0m
[1;94m3267 | [0m  claimDocuments        ClaimDocument[]     @relation("ClaimDocuments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `ClaimDocument`: The relation field `uploadedBy` on model `ClaimDocument` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3287[0m
[1;94m   | [0m
[1;94m3286 | [0m  uploadedById          Int?
[1;94m3287 | [0m  [1;91muploadedBy            User?               @relation("ClaimDocumentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m3288 | [0m  description           String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClaimDocument`: The relation field `auditLogs` on model `ClaimDocument` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3291[0m
[1;94m   | [0m
[1;94m3290 | [0m  updatedAt           DateTime            @updatedAt
[1;94m3291 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClaimDocumentAuditLogs")[0m
[1;94m3292 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ClaimNotification`: The relation field `recipient` on model `ClaimNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3303[0m
[1;94m   | [0m
[1;94m3302 | [0m  recipientId           Int?
[1;94m3303 | [0m  [1;91mrecipient             User?               @relation("ClaimNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m3304 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ClaimAdjustment`: The relation field `createdBy` on model `ClaimAdjustment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3318[0m
[1;94m   | [0m
[1;94m3317 | [0m  createdById           Int?
[1;94m3318 | [0m  [1;91mcreatedBy             User?               @relation("ClaimAdjustmentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3319 | [0m  approvedById          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `ClaimAdjustment`: The relation field `approvedBy` on model `ClaimAdjustment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3320[0m
[1;94m   | [0m
[1;94m3319 | [0m  approvedById          Int?
[1;94m3320 | [0m  [1;91mapprovedBy            User?               @relation("ClaimAdjustmentApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3321 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ClaimAdjustment`: The relation field `auditLogs` on model `ClaimAdjustment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3322[0m
[1;94m   | [0m
[1;94m3321 | [0m  notes                 String?
[1;94m3322 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ClaimAdjustmentAuditLogs")[0m
[1;94m3323 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Insurance`: The relation field `auditLogs` on model `Insurance` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3340[0m
[1;94m   | [0m
[1;94m3339 | [0m  updatedAt           DateTime            @updatedAt
[1;94m3340 | [0m  [1;91mauditLogs             AuditLog[]          @relation("InsuranceAuditLogs")[0m
[1;94m3341 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3376[0m
[1;94m   | [0m
[1;94m3375 | [0m  invoiceId           Int?
[1;94m3376 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3377 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2713[0m
[1;94m   | [0m
[1;94m2712 | [0m  nhifClaimId           Int?
[1;94m2713 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2714 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3376[0m
[1;94m   | [0m
[1;94m3375 | [0m  invoiceId           Int?
[1;94m3376 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3377 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `invoice` on Model `NhifClaim` and `nhifClaim` on Model `Invoice` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2713[0m
[1;94m   | [0m
[1;94m2712 | [0m  nhifClaimId           Int?
[1;94m2713 | [0m  [1;91mnhifClaim             NhifClaim?          @relation("NhifClaimInvoices", fields: [nhifClaimId], references: [id])[0m
[1;94m2714 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `invoiceId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3376[0m
[1;94m   | [0m
[1;94m3375 | [0m  invoiceId           Int?
[1;94m3376 | [0m  [1;91minvoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])[0m
[1;94m3377 | [0m  appointmentId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `NhifClaim`: The relation field `medicalRecord` on model `NhifClaim` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3384[0m
[1;94m   | [0m
[1;94m3383 | [0m  medicalRecordId     Int?
[1;94m3384 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("NhifClaimMedicalRecords", fields: [medicalRecordId], references: [id])[0m
[1;94m3385 | [0m  laboratoryId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `operationTheatre` in model `NhifClaim`: The relation field `operationTheatre` on model `NhifClaim` is missing an opposite relation field on the model `OperationTheatre`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3392[0m
[1;94m   | [0m
[1;94m3391 | [0m  operationTheatreId  Int?
[1;94m3392 | [0m  [1;91moperationTheatre    OperationTheatre?     @relation("NhifClaimOperationTheatre", fields: [operationTheatreId], references: [id])[0m
[1;94m3393 | [0m  maternityId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `maternity` in model `NhifClaim`: The relation field `maternity` on model `NhifClaim` is missing an opposite relation field on the model `Maternity`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3394[0m
[1;94m   | [0m
[1;94m3393 | [0m  maternityId         Int?
[1;94m3394 | [0m  [1;91mmaternity           Maternity?            @relation("NhifClaimMaternity", fields: [maternityId], references: [id])[0m
[1;94m3395 | [0m  vaccinationId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `vaccination` in model `NhifClaim`: The relation field `vaccination` on model `NhifClaim` is missing an opposite relation field on the model `Vaccination`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3396[0m
[1;94m   | [0m
[1;94m3395 | [0m  vaccinationId       Int?
[1;94m3396 | [0m  [1;91mvaccination         Vaccination?          @relation("NhifClaimVaccination", fields: [vaccinationId], references: [id])[0m
[1;94m3397 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3412[0m
[1;94m   | [0m
[1;94m3411 | [0m  transactionId       Int?
[1;94m3412 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3413 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2957[0m
[1;94m   | [0m
[1;94m2956 | [0m  nhifClaimId       Int?
[1;94m2957 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2958 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3412[0m
[1;94m   | [0m
[1;94m3411 | [0m  transactionId       Int?
[1;94m3412 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3413 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `transaction` on Model `NhifClaim` and `nhifClaim` on Model `Transaction` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:2957[0m
[1;94m   | [0m
[1;94m2956 | [0m  nhifClaimId       Int?
[1;94m2957 | [0m  [1;91mnhifClaim         NhifClaim?          @relation("TransactionNhifClaims", fields: [nhifClaimId], references: [id])[0m
[1;94m2958 | [0m  departmentId      Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `transactionId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3412[0m
[1;94m   | [0m
[1;94m3411 | [0m  transactionId       Int?
[1;94m3412 | [0m  [1;91mtransaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])[0m
[1;94m3413 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referral` in model `NhifClaim`: The relation field `referral` on model `NhifClaim` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3416[0m
[1;94m   | [0m
[1;94m3415 | [0m  referralId          Int?
[1;94m3416 | [0m  [1;91mreferral            Referral?             @relation("NhifClaimReferrals", fields: [referralId], references: [id])[0m
[1;94m3417 | [0m  socialServiceCases  SocialServiceCase[]   @relation("SocialServiceCaseNhifClaims")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `NhifClaim`: The relation field `createdBy` on model `NhifClaim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3420[0m
[1;94m   | [0m
[1;94m3419 | [0m  createdById         Int?
[1;94m3420 | [0m  [1;91mcreatedBy           User?                 @relation("NhifClaimCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3421 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `NhifClaim`: The relation field `updatedBy` on model `NhifClaim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3422[0m
[1;94m   | [0m
[1;94m3421 | [0m  updatedById         Int?
[1;94m3422 | [0m  [1;91mupdatedBy           User?                 @relation("NhifClaimUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3423 | [0m  reviewedById        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reviewedBy` in model `NhifClaim`: The relation field `reviewedBy` on model `NhifClaim` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3424[0m
[1;94m   | [0m
[1;94m3423 | [0m  reviewedById        Int?
[1;94m3424 | [0m  [1;91mreviewedBy          User?                 @relation("NhifClaimReviewedBy", fields: [reviewedById], references: [id])[0m
[1;94m3425 | [0m  auditLogs           AuditLog[]            @relation("NhifClaimAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `NhifClaim`: The relation field `auditLogs` on model `NhifClaim` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3425[0m
[1;94m   | [0m
[1;94m3424 | [0m  reviewedBy          User?                 @relation("NhifClaimReviewedBy", fields: [reviewedById], references: [id])
[1;94m3425 | [0m  [1;91mauditLogs           AuditLog[]            @relation("NhifClaimAuditLogs")[0m
[1;94m3426 | [0m  dashboardWidgets    DashboardWidget[]     @relation("DashboardWidgetNhifClaims")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `user` in model `Incentive`: The relation field `user` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3458[0m
[1;94m   | [0m
[1;94m3457 | [0m  userId                Int                 @unique
[1;94m3458 | [0m  [1;91muser                  User                @relation("IncentiveUser", fields: [userId], references: [id])[0m
[1;94m3459 | [0m  doctorId              Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `doctor` in model `Incentive`: The relation field `doctor` on model `Incentive` is missing an opposite relation field on the model `Doctor`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3460[0m
[1;94m   | [0m
[1;94m3459 | [0m  doctorId              Int?                @unique
[1;94m3460 | [0m  [1;91mdoctor                Doctor?             @relation("IncentiveDoctor", fields: [doctorId], references: [id])[0m
[1;94m3461 | [0m  departmentId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `transaction` in model `Incentive`: The relation field `transaction` on model `Incentive` is missing an opposite relation field on the model `Transaction`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3471[0m
[1;94m   | [0m
[1;94m3470 | [0m  transactionId         Int?                @unique
[1;94m3471 | [0m  [1;91mtransaction           Transaction?        @relation("IncentiveTransaction", fields: [transactionId], references: [id])[0m
[1;94m3472 | [0m  rejectionReason       String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Incentive`: The relation field `createdBy` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3474[0m
[1;94m   | [0m
[1;94m3473 | [0m  createdById           Int?                @unique
[1;94m3474 | [0m  [1;91mcreatedBy             User?               @relation("IncentiveCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3475 | [0m  approvedById          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `Incentive`: The relation field `approvedBy` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3476[0m
[1;94m   | [0m
[1;94m3475 | [0m  approvedById          Int?                @unique
[1;94m3476 | [0m  [1;91mapprovedBy            User?               @relation("IncentiveApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3477 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Incentive`: The relation field `updatedBy` on model `Incentive` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3478[0m
[1;94m   | [0m
[1;94m3477 | [0m  updatedById           Int?                @unique
[1;94m3478 | [0m  [1;91mupdatedBy             User?               @relation("IncentiveUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3479 | [0m  auditLogs             AuditLog[]          @relation("IncentiveAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Incentive`: The relation field `auditLogs` on model `Incentive` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3479[0m
[1;94m   | [0m
[1;94m3478 | [0m  updatedBy             User?               @relation("IncentiveUpdatedBy", fields: [updatedById], references: [id])
[1;94m3479 | [0m  [1;91mauditLogs             AuditLog[]          @relation("IncentiveAuditLogs")[0m
[1;94m3480 | [0m  incentiveNotifications IncentiveNotification[] @relation("IncentiveNotifications")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `IncentiveNotification`: The relation field `recipient` on model `IncentiveNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3494[0m
[1;94m   | [0m
[1;94m3493 | [0m  recipientId           Int?                @unique
[1;94m3494 | [0m  [1;91mrecipient             User?               @relation("IncentiveNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m3495 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Inventory`: The relation field `clinicalSetting` on model `Inventory` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3541[0m
[1;94m   | [0m
[1;94m3540 | [0m  clinicalSettingId     Int?                @unique
[1;94m3541 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("ClinicalSettingInventory", fields: [clinicalSettingId], references: [id])[0m
[1;94m3542 | [0m  pharmacyId            Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `pharmacy` in model `Inventory`: The relation field `pharmacy` on model `Inventory` is missing an opposite relation field on the model `Pharmacy`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3543[0m
[1;94m   | [0m
[1;94m3542 | [0m  pharmacyId            Int?                @unique
[1;94m3543 | [0m  [1;91mpharmacy              Pharmacy?           @relation("PharmacyInventory", fields: [pharmacyId], references: [id])[0m
[1;94m3544 | [0m  storageLocation       String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Inventory`: The relation field `createdBy` on model `Inventory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3549[0m
[1;94m   | [0m
[1;94m3548 | [0m  createdById           Int?                @unique
[1;94m3549 | [0m  [1;91mcreatedBy             User?               @relation("InventoryCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3550 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Inventory`: The relation field `updatedBy` on model `Inventory` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3551[0m
[1;94m   | [0m
[1;94m3550 | [0m  updatedById           Int?                @unique
[1;94m3551 | [0m  [1;91mupdatedBy             User?               @relation("InventoryUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3552 | [0m  auditLogs             AuditLog[]          @relation("InventoryAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Inventory`: The relation field `auditLogs` on model `Inventory` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3552[0m
[1;94m   | [0m
[1;94m3551 | [0m  updatedBy             User?               @relation("InventoryUpdatedBy", fields: [updatedById], references: [id])
[1;94m3552 | [0m  [1;91mauditLogs             AuditLog[]          @relation("InventoryAuditLogs")[0m
[1;94m3553 | [0m  inventoryTransactions InventoryTransaction[] @relation("InventoryTransactions")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `InventoryTransaction`: The relation field `performedBy` on model `InventoryTransaction` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3572[0m
[1;94m   | [0m
[1;94m3571 | [0m  performedById         Int?                @unique
[1;94m3572 | [0m  [1;91mperformedBy           User?               @relation("InventoryTransactionPerformedBy", fields: [performedById], references: [id])[0m
[1;94m3573 | [0m  createdById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `InventoryTransaction`: The relation field `createdBy` on model `InventoryTransaction` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3574[0m
[1;94m   | [0m
[1;94m3573 | [0m  createdById           Int?                @unique
[1;94m3574 | [0m  [1;91mcreatedBy             User?               @relation("InventoryTransactionCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3575 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `InventoryTransaction`: The relation field `updatedBy` on model `InventoryTransaction` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3576[0m
[1;94m   | [0m
[1;94m3575 | [0m  updatedById           Int?                @unique
[1;94m3576 | [0m  [1;91mupdatedBy             User?               @relation("InventoryTransactionUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3577 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `InventoryTransaction`: The relation field `auditLogs` on model `InventoryTransaction` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3578[0m
[1;94m   | [0m
[1;94m3577 | [0m  notes                 String?
[1;94m3578 | [0m  [1;91mauditLogs             AuditLog[]          @relation("InventoryTransactionAuditLogs")[0m
[1;94m3579 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `InventoryNotification`: The relation field `recipient` on model `InventoryNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3592[0m
[1;94m   | [0m
[1;94m3591 | [0m  recipientId           Int?                @unique
[1;94m3592 | [0m  [1;91mrecipient             User?               @relation("InventoryNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m3593 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `InventorySupplier`: The relation field `createdBy` on model `InventorySupplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3606[0m
[1;94m   | [0m
[1;94m3605 | [0m  createdById           Int?                @unique
[1;94m3606 | [0m  [1;91mcreatedBy             User?               @relation("InventorySupplierCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3607 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `InventorySupplier`: The relation field `updatedBy` on model `InventorySupplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3608[0m
[1;94m   | [0m
[1;94m3607 | [0m  updatedById           Int?                @unique
[1;94m3608 | [0m  [1;91mupdatedBy             User?               @relation("InventorySupplierUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3609 | [0m  inventory             Inventory[]         @relation("InventorySupplier")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `InventorySupplier`: The relation field `auditLogs` on model `InventorySupplier` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3610[0m
[1;94m   | [0m
[1;94m3609 | [0m  inventory             Inventory[]         @relation("InventorySupplier")
[1;94m3610 | [0m  [1;91mauditLogs             AuditLog[]          @relation("SupplierAuditLogs")[0m
[1;94m3611 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Procurement`: The relation field `department` on model `Procurement` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3656[0m
[1;94m   | [0m
[1;94m3655 | [0m  departmentId        Int?
[1;94m3656 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m3657 | [0m  requesterId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `requester` in model `Procurement`: The relation field `requester` on model `Procurement` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3658[0m
[1;94m   | [0m
[1;94m3657 | [0m  requesterId         Int?
[1;94m3658 | [0m  [1;91mrequester           User?                 @relation("ProcurementRequester", fields: [requesterId], references: [id])[0m
[1;94m3659 | [0m  status              ProcurementStatus     @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3667[0m
[1;94m   | [0m
[1;94m3666 | [0m  purchaseOrderId     Int?
[1;94m3667 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3668 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3733[0m
[1;94m   | [0m
[1;94m3732 | [0m  procurementId       Int?
[1;94m3733 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3734 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3667[0m
[1;94m   | [0m
[1;94m3666 | [0m  purchaseOrderId     Int?
[1;94m3667 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3668 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `purchaseOrder` on Model `Procurement` and `procurement` on Model `PurchaseOrder` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3733[0m
[1;94m   | [0m
[1;94m3732 | [0m  procurementId       Int?
[1;94m3733 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3734 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `purchaseOrderId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3667[0m
[1;94m   | [0m
[1;94m3666 | [0m  purchaseOrderId     Int?
[1;94m3667 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3668 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medication` in model `Procurement`: The relation field `medication` on model `Procurement` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3669[0m
[1;94m   | [0m
[1;94m3668 | [0m  medicationId        Int?
[1;94m3669 | [0m  [1;91mmedication          Medication?           @relation(fields: [medicationId], references: [id])[0m
[1;94m3670 | [0m  cssdInstrumentId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `Procurement`: The relation field `cssdInstrument` on model `Procurement` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3671[0m
[1;94m   | [0m
[1;94m3670 | [0m  cssdInstrumentId    Int?
[1;94m3671 | [0m  [1;91mcssdInstrument      CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])[0m
[1;94m3672 | [0m  inventoryItemId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventoryItem` in model `Procurement`: The relation field `inventoryItem` on model `Procurement` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3673[0m
[1;94m   | [0m
[1;94m3672 | [0m  inventoryItemId     Int?
[1;94m3673 | [0m  [1;91minventoryItem       Inventory?            @relation(fields: [inventoryItemId], references: [id])[0m
[1;94m3674 | [0m  billingId           Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Procurement`: The relation field `billing` on model `Procurement` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3675[0m
[1;94m   | [0m
[1;94m3674 | [0m  billingId           Int?
[1;94m3675 | [0m  [1;91mbilling             Billing?              @relation(fields: [billingId], references: [id])[0m
[1;94m3676 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Procurement`: The relation field `createdBy` on model `Procurement` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3679[0m
[1;94m   | [0m
[1;94m3678 | [0m  createdById         Int?
[1;94m3679 | [0m  [1;91mcreatedBy           User?                 @relation("ProcurementCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3680 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Procurement`: The relation field `updatedBy` on model `Procurement` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3681[0m
[1;94m   | [0m
[1;94m3680 | [0m  updatedById         Int?
[1;94m3681 | [0m  [1;91mupdatedBy           User?                 @relation("ProcurementUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3682 | [0m  auditLogs           AuditLog[]            @relation("ProcurementAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Procurement`: The relation field `auditLogs` on model `Procurement` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3682[0m
[1;94m   | [0m
[1;94m3681 | [0m  updatedBy           User?                 @relation("ProcurementUpdatedBy", fields: [updatedById], references: [id])
[1;94m3682 | [0m  [1;91mauditLogs           AuditLog[]            @relation("ProcurementAuditLogs")[0m
[1;94m3683 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Supplier`: The relation field `department` on model `Supplier` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3706[0m
[1;94m   | [0m
[1;94m3705 | [0m  departmentId        Int?
[1;94m3706 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m3707 | [0m  medications         Medication[]
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medications` in model `Supplier`: The relation field `medications` on model `Supplier` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3707[0m
[1;94m   | [0m
[1;94m3706 | [0m  department          Department?           @relation(fields: [departmentId], references: [id])
[1;94m3707 | [0m  [1;91mmedications         Medication[][0m
[1;94m3708 | [0m  purchaseOrders      PurchaseOrder[]
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstruments` in model `Supplier`: The relation field `cssdInstruments` on model `Supplier` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3709[0m
[1;94m   | [0m
[1;94m3708 | [0m  purchaseOrders      PurchaseOrder[]
[1;94m3709 | [0m  [1;91mcssdInstruments     CSSDInstrument[][0m
[1;94m3710 | [0m  inventoryItems      Inventory[]
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventoryItems` in model `Supplier`: The relation field `inventoryItems` on model `Supplier` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3710[0m
[1;94m   | [0m
[1;94m3709 | [0m  cssdInstruments     CSSDInstrument[]
[1;94m3710 | [0m  [1;91minventoryItems      Inventory[][0m
[1;94m3711 | [0m  performanceRating   Float?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Supplier`: The relation field `createdBy` on model `Supplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3716[0m
[1;94m   | [0m
[1;94m3715 | [0m  createdById         Int?
[1;94m3716 | [0m  [1;91mcreatedBy           User?                 @relation("SupplierCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3717 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Supplier`: The relation field `updatedBy` on model `Supplier` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3718[0m
[1;94m   | [0m
[1;94m3717 | [0m  updatedById         Int?
[1;94m3718 | [0m  [1;91mupdatedBy           User?                 @relation("SupplierUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3719 | [0m  auditLogs           AuditLog[]            @relation("SupplierAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Supplier`: The relation field `auditLogs` on model `Supplier` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3719[0m
[1;94m   | [0m
[1;94m3718 | [0m  updatedBy           User?                 @relation("SupplierUpdatedBy", fields: [updatedById], references: [id])
[1;94m3719 | [0m  [1;91mauditLogs           AuditLog[]            @relation("SupplierAuditLogs")[0m
[1;94m3720 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `PurchaseOrder`: The relation field `department` on model `PurchaseOrder` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3731[0m
[1;94m   | [0m
[1;94m3730 | [0m  departmentId        Int?
[1;94m3731 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m3732 | [0m  procurementId       Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3733[0m
[1;94m   | [0m
[1;94m3732 | [0m  procurementId       Int?
[1;94m3733 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3734 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3667[0m
[1;94m   | [0m
[1;94m3666 | [0m  purchaseOrderId     Int?
[1;94m3667 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3668 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3733[0m
[1;94m   | [0m
[1;94m3732 | [0m  procurementId       Int?
[1;94m3733 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3734 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `procurement` on Model `PurchaseOrder` and `purchaseOrder` on Model `Procurement` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3667[0m
[1;94m   | [0m
[1;94m3666 | [0m  purchaseOrderId     Int?
[1;94m3667 | [0m  [1;91mpurchaseOrder       PurchaseOrder?        @relation(fields: [purchaseOrderId], references: [id])[0m
[1;94m3668 | [0m  medicationId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `procurementId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3733[0m
[1;94m   | [0m
[1;94m3732 | [0m  procurementId       Int?
[1;94m3733 | [0m  [1;91mprocurement         Procurement?          @relation(fields: [procurementId], references: [id])[0m
[1;94m3734 | [0m  orderDate           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventory` in model `PurchaseOrder`: The relation field `inventory` on model `PurchaseOrder` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3746[0m
[1;94m   | [0m
[1;94m3745 | [0m  inventoryId         Int?
[1;94m3746 | [0m  [1;91minventory           Inventory?            @relation(fields: [inventoryId], references: [id])[0m
[1;94m3747 | [0m  cssdInstrumentId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `PurchaseOrder`: The relation field `cssdInstrument` on model `PurchaseOrder` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3748[0m
[1;94m   | [0m
[1;94m3747 | [0m  cssdInstrumentId    Int?
[1;94m3748 | [0m  [1;91mcssdInstrument      CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])[0m
[1;94m3749 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `PurchaseOrder`: The relation field `createdBy` on model `PurchaseOrder` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3753[0m
[1;94m   | [0m
[1;94m3752 | [0m  createdById         Int?
[1;94m3753 | [0m  [1;91mcreatedBy           User?                 @relation("PurchaseOrderCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3754 | [0m  approvedById        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `approvedBy` in model `PurchaseOrder`: The relation field `approvedBy` on model `PurchaseOrder` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3755[0m
[1;94m   | [0m
[1;94m3754 | [0m  approvedById        Int?
[1;94m3755 | [0m  [1;91mapprovedBy          User?                 @relation("PurchaseOrderApprovedBy", fields: [approvedById], references: [id])[0m
[1;94m3756 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `PurchaseOrder`: The relation field `updatedBy` on model `PurchaseOrder` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3757[0m
[1;94m   | [0m
[1;94m3756 | [0m  updatedById         Int?
[1;94m3757 | [0m  [1;91mupdatedBy           User?                 @relation("PurchaseOrderUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3758 | [0m  auditLogs           AuditLog[]            @relation("PurchaseOrderAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `PurchaseOrder`: The relation field `auditLogs` on model `PurchaseOrder` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3758[0m
[1;94m   | [0m
[1;94m3757 | [0m  updatedBy           User?                 @relation("PurchaseOrderUpdatedBy", fields: [updatedById], references: [id])
[1;94m3758 | [0m  [1;91mauditLogs           AuditLog[]            @relation("PurchaseOrderAuditLogs")[0m
[1;94m3759 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medication` in model `PurchaseOrderItem`: The relation field `medication` on model `PurchaseOrderItem` is missing an opposite relation field on the model `Medication`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3769[0m
[1;94m   | [0m
[1;94m3768 | [0m  medicationId        Int?
[1;94m3769 | [0m  [1;91mmedication          Medication?           @relation(fields: [medicationId], references: [id])[0m
[1;94m3770 | [0m  cssdInstrumentId    Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `cssdInstrument` in model `PurchaseOrderItem`: The relation field `cssdInstrument` on model `PurchaseOrderItem` is missing an opposite relation field on the model `CSSDInstrument`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3771[0m
[1;94m   | [0m
[1;94m3770 | [0m  cssdInstrumentId    Int?
[1;94m3771 | [0m  [1;91mcssdInstrument      CSSDInstrument?       @relation(fields: [cssdInstrumentId], references: [id])[0m
[1;94m3772 | [0m  inventoryItemId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `inventoryItem` in model `PurchaseOrderItem`: The relation field `inventoryItem` on model `PurchaseOrderItem` is missing an opposite relation field on the model `Inventory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3773[0m
[1;94m   | [0m
[1;94m3772 | [0m  inventoryItemId     Int?
[1;94m3773 | [0m  [1;91minventoryItem       Inventory?            @relation(fields: [inventoryItemId], references: [id])[0m
[1;94m3774 | [0m  quantity            Int
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `PurchaseOrderItem`: The relation field `createdBy` on model `PurchaseOrderItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3784[0m
[1;94m   | [0m
[1;94m3783 | [0m  createdById         Int?
[1;94m3784 | [0m  [1;91mcreatedBy           User?                 @relation("PurchaseOrderItemCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3785 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `PurchaseOrderItem`: The relation field `updatedBy` on model `PurchaseOrderItem` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3786[0m
[1;94m   | [0m
[1;94m3785 | [0m  updatedById         Int?
[1;94m3786 | [0m  [1;91mupdatedBy           User?                 @relation("PurchaseOrderItemUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3787 | [0m  auditLogs           AuditLog[]            @relation("PurchaseOrderItemAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `PurchaseOrderItem`: The relation field `auditLogs` on model `PurchaseOrderItem` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3787[0m
[1;94m   | [0m
[1;94m3786 | [0m  updatedBy           User?                 @relation("PurchaseOrderItemUpdatedBy", fields: [updatedById], references: [id])
[1;94m3787 | [0m  [1;91mauditLogs           AuditLog[]            @relation("PurchaseOrderItemAuditLogs")[0m
[1;94m3788 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `FixedAsset`: The relation field `department` on model `FixedAsset` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3834[0m
[1;94m   | [0m
[1;94m3833 | [0m  departmentId          Int?
[1;94m3834 | [0m  [1;91mdepartment            Department?         @relation("DepartmentFixedAssets", fields: [departmentId], references: [id])[0m
[1;94m3835 | [0m  location              String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `FixedAsset`: The relation field `createdBy` on model `FixedAsset` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3847[0m
[1;94m   | [0m
[1;94m3846 | [0m  createdById           Int?                @unique
[1;94m3847 | [0m  [1;91mcreatedBy             User?               @relation("FixedAssetCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3848 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `FixedAsset`: The relation field `updatedBy` on model `FixedAsset` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3849[0m
[1;94m   | [0m
[1;94m3848 | [0m  updatedById           Int?                @unique
[1;94m3849 | [0m  [1;91mupdatedBy             User?               @relation("FixedAssetUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3850 | [0m  auditLogs             AuditLog[]          @relation("FixedAssetAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `FixedAsset`: The relation field `auditLogs` on model `FixedAsset` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3850[0m
[1;94m   | [0m
[1;94m3849 | [0m  updatedBy             User?               @relation("FixedAssetUpdatedBy", fields: [updatedById], references: [id])
[1;94m3850 | [0m  [1;91mauditLogs             AuditLog[]          @relation("FixedAssetAuditLogs")[0m
[1;94m3851 | [0m  maintenanceRecords    MaintenanceRecord[] @relation("AssetMaintenanceRecords")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `MaintenanceRecord`: The relation field `performedBy` on model `MaintenanceRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3866[0m
[1;94m   | [0m
[1;94m3865 | [0m  performedById         Int?                @unique
[1;94m3866 | [0m  [1;91mperformedBy           User?               @relation("MaintenancePerformedBy", fields: [performedById], references: [id])[0m
[1;94m3867 | [0m  createdById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `MaintenanceRecord`: The relation field `createdBy` on model `MaintenanceRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3868[0m
[1;94m   | [0m
[1;94m3867 | [0m  createdById           Int?                @unique
[1;94m3868 | [0m  [1;91mcreatedBy             User?               @relation("MaintenanceCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3869 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `MaintenanceRecord`: The relation field `updatedBy` on model `MaintenanceRecord` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3870[0m
[1;94m   | [0m
[1;94m3869 | [0m  updatedById           Int?                @unique
[1;94m3870 | [0m  [1;91mupdatedBy             User?               @relation("MaintenanceUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3871 | [0m  notes                 String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `MaintenanceRecord`: The relation field `auditLogs` on model `MaintenanceRecord` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3872[0m
[1;94m   | [0m
[1;94m3871 | [0m  notes                 String?
[1;94m3872 | [0m  [1;91mauditLogs             AuditLog[]          @relation("MaintenanceRecordAuditLogs")[0m
[1;94m3873 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Report`: The relation field `clinicalSetting` on model `Report` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3927[0m
[1;94m   | [0m
[1;94m3926 | [0m  clinicalSettingId     Int?                @unique
[1;94m3927 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("ReportClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m3928 | [0m  dynamicReportId       Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Report`: The relation field `createdBy` on model `Report` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3931[0m
[1;94m   | [0m
[1;94m3930 | [0m  createdById           Int?                @unique
[1;94m3931 | [0m  [1;91mcreatedBy             User?               @relation("ReportGeneralCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3932 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Report`: The relation field `updatedBy` on model `Report` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3933[0m
[1;94m   | [0m
[1;94m3932 | [0m  updatedById           Int?                @unique
[1;94m3933 | [0m  [1;91mupdatedBy             User?               @relation("ReportGeneralUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3934 | [0m  auditLogs             AuditLog[]          @relation("ReportAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Report`: The relation field `auditLogs` on model `Report` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3934[0m
[1;94m   | [0m
[1;94m3933 | [0m  updatedBy             User?               @relation("ReportGeneralUpdatedBy", fields: [updatedById], references: [id])
[1;94m3934 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ReportAuditLogs")[0m
[1;94m3935 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `DynamicReport`: The relation field `department` on model `DynamicReport` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3952[0m
[1;94m   | [0m
[1;94m3951 | [0m  departmentId          Int?
[1;94m3952 | [0m  [1;91mdepartment            Department?         @relation("DepartmentDynamicReports", fields: [departmentId], references: [id])[0m
[1;94m3953 | [0m  clinicalSettingId     Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `DynamicReport`: The relation field `clinicalSetting` on model `DynamicReport` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3954[0m
[1;94m   | [0m
[1;94m3953 | [0m  clinicalSettingId     Int?                @unique
[1;94m3954 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("DynamicReportClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m3955 | [0m  createdById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `DynamicReport`: The relation field `createdBy` on model `DynamicReport` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3956[0m
[1;94m   | [0m
[1;94m3955 | [0m  createdById           Int?                @unique
[1;94m3956 | [0m  [1;91mcreatedBy             User?               @relation("ReportCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3957 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `DynamicReport`: The relation field `updatedBy` on model `DynamicReport` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3958[0m
[1;94m   | [0m
[1;94m3957 | [0m  updatedById           Int?                @unique
[1;94m3958 | [0m  [1;91mupdatedBy             User?               @relation("ReportUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3959 | [0m  scheduled             Boolean             @default(false)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `DynamicReport`: The relation field `auditLogs` on model `DynamicReport` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3968[0m
[1;94m   | [0m
[1;94m3967 | [0m  notifications         ReportNotification[] @relation("ReportNotifications")
[1;94m3968 | [0m  [1;91mauditLogs             AuditLog[]          @relation("DynamicReportAuditLogs")[0m
[1;94m3969 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ReportTemplate`: The relation field `createdBy` on model `ReportTemplate` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3982[0m
[1;94m   | [0m
[1;94m3981 | [0m  createdById           Int?                @unique
[1;94m3982 | [0m  [1;91mcreatedBy             User?               @relation("TemplateCreatedBy", fields: [createdById], references: [id])[0m
[1;94m3983 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ReportTemplate`: The relation field `updatedBy` on model `ReportTemplate` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3984[0m
[1;94m   | [0m
[1;94m3983 | [0m  updatedById           Int?                @unique
[1;94m3984 | [0m  [1;91mupdatedBy             User?               @relation("TemplateUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m3985 | [0m  reports               DynamicReport[]     @relation("DynamicReportTemplates")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `ReportTemplate`: The relation field `auditLogs` on model `ReportTemplate` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:3986[0m
[1;94m   | [0m
[1;94m3985 | [0m  reports               DynamicReport[]     @relation("DynamicReportTemplates")
[1;94m3986 | [0m  [1;91mauditLogs             AuditLog[]          @relation("ReportTemplateAuditLogs")[0m
[1;94m3987 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `ReportNotification`: The relation field `recipient` on model `ReportNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4000[0m
[1;94m   | [0m
[1;94m3999 | [0m  recipientId           Int?                @unique
[1;94m4000 | [0m  [1;91mrecipient             User?               @relation("ReportNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m4001 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `doctor` in model `MedicalRecord`: The relation field `doctor` on model `MedicalRecord` is missing an opposite relation field on the model `Doctor`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4024[0m
[1;94m   | [0m
[1;94m4023 | [0m  doctorId              Int?
[1;94m4024 | [0m  [1;91mdoctor                Doctor?               @relation("DoctorMedicalRecords", fields: [doctorId], references: [id])[0m
[1;94m4025 | [0m  appointmentId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalRecord` in model `MedicalRecord`: The relation field `clinicalRecord` on model `MedicalRecord` is missing an opposite relation field on the model `ClinicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4030[0m
[1;94m   | [0m
[1;94m4029 | [0m  clinicalRecordId      Int?
[1;94m4030 | [0m  [1;91mclinicalRecord        ClinicalRecord?       @relation("MedicalRecordClinicalRecords", fields: [clinicalRecordId], references: [id])[0m
[1;94m4031 | [0m  departmentId          Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `MedicalRecord`: The relation field `clinicalSetting` on model `MedicalRecord` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4034[0m
[1;94m   | [0m
[1;94m4033 | [0m  clinicalSettingId     Int?
[1;94m4034 | [0m  [1;91mclinicalSetting       ClinicalSetting?      @relation("MedicalRecordClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m4035 | [0m  status                MedicalRecordStatus   @default(DRAFT)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `laboratoryTests` in model `MedicalRecord`: The relation field `laboratoryTests` on model `MedicalRecord` is missing an opposite relation field on the model `Laboratory`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4046[0m
[1;94m   | [0m
[1;94m4045 | [0m  prescriptions         Prescription[]        @relation("PrescriptionMedicalRecords")
[1;94m4046 | [0m  [1;91mlaboratoryTests       Laboratory[]          @relation("MedicalRecordLaboratoryTests")[0m
[1;94m4047 | [0m  radiologyTests        Radiology[]           @relation("MedicalRecordRadiology")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `MedicalRecord` and `medicalRecord` on Model `DashboardWidget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4050[0m
[1;94m   | [0m
[1;94m4049 | [0m  maternity             Maternity?            @relation("MedicalRecordMaternity")
[1;94m4050 | [0m  [1;91mdashboardWidget       DashboardWidget?      @relation("DashboardWidgetMedicalRecords", fields: [id], references: [id])[0m
[1;94m4051 | [0m  auditLogs             AuditLog[]            @relation("MedicalRecordAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `MedicalRecord` and `medicalRecord` on Model `DashboardWidget` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:94[0m
[1;94m   | [0m
[1;94m93 | [0m  medicalRecordId     Int?                  @unique
[1;94m94 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("DashboardWidgetMedicalRecords", fields: [medicalRecordId], references: [id])[0m
[1;94m95 | [0m  maternityId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `MedicalRecord` and `medicalRecord` on Model `DashboardWidget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4050[0m
[1;94m   | [0m
[1;94m4049 | [0m  maternity             Maternity?            @relation("MedicalRecordMaternity")
[1;94m4050 | [0m  [1;91mdashboardWidget       DashboardWidget?      @relation("DashboardWidgetMedicalRecords", fields: [id], references: [id])[0m
[1;94m4051 | [0m  auditLogs             AuditLog[]            @relation("MedicalRecordAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `dashboardWidget` on Model `MedicalRecord` and `medicalRecord` on Model `DashboardWidget` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:94[0m
[1;94m   | [0m
[1;94m93 | [0m  medicalRecordId     Int?                  @unique
[1;94m94 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation("DashboardWidgetMedicalRecords", fields: [medicalRecordId], references: [id])[0m
[1;94m95 | [0m  maternityId         Int?                  @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `reportedBy` in model `Helpdesk`: The relation field `reportedBy` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4097[0m
[1;94m   | [0m
[1;94m4096 | [0m  reportedById          Int?                @unique
[1;94m4097 | [0m  [1;91mreportedBy            User?               @relation("ReportedBy", fields: [reportedById], references: [id])[0m
[1;94m4098 | [0m  assignedToId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `assignedTo` in model `Helpdesk`: The relation field `assignedTo` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4099[0m
[1;94m   | [0m
[1;94m4098 | [0m  assignedToId          Int?                @unique
[1;94m4099 | [0m  [1;91massignedTo            User?               @relation("AssignedTo", fields: [assignedToId], references: [id])[0m
[1;94m4100 | [0m  doctorId              Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `clinicalSetting` in model `Helpdesk`: The relation field `clinicalSetting` on model `Helpdesk` is missing an opposite relation field on the model `ClinicalSetting`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4105[0m
[1;94m   | [0m
[1;94m4104 | [0m  clinicalSettingId     Int?                @unique
[1;94m4105 | [0m  [1;91mclinicalSetting       ClinicalSetting?    @relation("HelpdeskClinicalSettings", fields: [clinicalSettingId], references: [id])[0m
[1;94m4106 | [0m  patientId             Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Helpdesk`: The relation field `patient` on model `Helpdesk` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4107[0m
[1;94m   | [0m
[1;94m4106 | [0m  patientId             Int?                @unique
[1;94m4107 | [0m  [1;91mpatient               Patient?            @relation("PatientHelpdeskTickets", fields: [patientId], references: [id])[0m
[1;94m4108 | [0m  admissionId           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `admission` in model `Helpdesk`: The relation field `admission` on model `Helpdesk` is missing an opposite relation field on the model `Admission`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4109[0m
[1;94m   | [0m
[1;94m4108 | [0m  admissionId           Int?                @unique
[1;94m4109 | [0m  [1;91madmission             Admission?          @relation("HelpdeskAdmissions", fields: [admissionId], references: [id])[0m
[1;94m4110 | [0m  appointmentId         Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `appointment` in model `Helpdesk`: The relation field `appointment` on model `Helpdesk` is missing an opposite relation field on the model `Appointment`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4111[0m
[1;94m   | [0m
[1;94m4110 | [0m  appointmentId         Int?                @unique
[1;94m4111 | [0m  [1;91mappointment           Appointment?        @relation("HelpdeskAppointments", fields: [appointmentId], references: [id])[0m
[1;94m4112 | [0m  invoiceId             Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `invoice` in model `Helpdesk`: The relation field `invoice` on model `Helpdesk` is missing an opposite relation field on the model `Invoice`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4113[0m
[1;94m   | [0m
[1;94m4112 | [0m  invoiceId             Int?                @unique
[1;94m4113 | [0m  [1;91minvoice               Invoice?            @relation("HelpdeskInvoices", fields: [invoiceId], references: [id])[0m
[1;94m4114 | [0m  fixedAssetId          Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `fixedAsset` in model `Helpdesk`: The relation field `fixedAsset` on model `Helpdesk` is missing an opposite relation field on the model `FixedAsset`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4115[0m
[1;94m   | [0m
[1;94m4114 | [0m  fixedAssetId          Int?                @unique
[1;94m4115 | [0m  [1;91mfixedAsset            FixedAsset?         @relation("HelpdeskFixedAssets", fields: [fixedAssetId], references: [id])[0m
[1;94m4116 | [0m  createdDate           DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Helpdesk`: The relation field `createdBy` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4122[0m
[1;94m   | [0m
[1;94m4121 | [0m  createdById           Int?                @unique
[1;94m4122 | [0m  [1;91mcreatedBy             User?               @relation("HelpdeskCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4123 | [0m  updatedById           Int?                @unique
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Helpdesk`: The relation field `updatedBy` on model `Helpdesk` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4124[0m
[1;94m   | [0m
[1;94m4123 | [0m  updatedById           Int?                @unique
[1;94m4124 | [0m  [1;91mupdatedBy             User?               @relation("HelpdeskUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4125 | [0m  auditLogs             AuditLog[]          @relation("HelpdeskAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Helpdesk`: The relation field `auditLogs` on model `Helpdesk` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4125[0m
[1;94m   | [0m
[1;94m4124 | [0m  updatedBy             User?               @relation("HelpdeskUpdatedBy", fields: [updatedById], references: [id])
[1;94m4125 | [0m  [1;91mauditLogs             AuditLog[]          @relation("HelpdeskAuditLogs")[0m
[1;94m4126 | [0m  ticketComments        TicketComment[]     @relation("TicketComments")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `TicketComment`: The relation field `createdBy` on model `TicketComment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4140[0m
[1;94m   | [0m
[1;94m4139 | [0m  createdById           Int?                @unique
[1;94m4140 | [0m  [1;91mcreatedBy             User?               @relation("TicketCommentCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4141 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `TicketComment`: The relation field `auditLogs` on model `TicketComment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4143[0m
[1;94m   | [0m
[1;94m4142 | [0m  updatedAt             DateTime            @updatedAt
[1;94m4143 | [0m  [1;91mauditLogs             AuditLog[]          @relation("TicketCommentAuditLogs")[0m
[1;94m4144 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `uploadedBy` in model `TicketAttachment`: The relation field `uploadedBy` on model `TicketAttachment` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4155[0m
[1;94m   | [0m
[1;94m4154 | [0m  uploadedById          Int?                @unique
[1;94m4155 | [0m  [1;91muploadedBy            User?               @relation("TicketAttachmentUploadedBy", fields: [uploadedById], references: [id])[0m
[1;94m4156 | [0m  createdAt             DateTime            @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `TicketAttachment`: The relation field `auditLogs` on model `TicketAttachment` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4158[0m
[1;94m   | [0m
[1;94m4157 | [0m  updatedAt             DateTime            @updatedAt
[1;94m4158 | [0m  [1;91mauditLogs             AuditLog[]          @relation("TicketAttachmentAuditLogs")[0m
[1;94m4159 | [0m}
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `recipient` in model `TicketNotification`: The relation field `recipient` on model `TicketNotification` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4170[0m
[1;94m   | [0m
[1;94m4169 | [0m  recipientId           Int?                @unique
[1;94m4170 | [0m  [1;91mrecipient             User?               @relation("TicketNotificationRecipient", fields: [recipientId], references: [id])[0m
[1;94m4171 | [0m  message               String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `ReferralProgram`: The relation field `department` on model `ReferralProgram` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4214[0m
[1;94m   | [0m
[1;94m4213 | [0m  departmentId        Int?
[1;94m4214 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id], map: "ReferralProgram_department_fkey")[0m
[1;94m4215 | [0m  targetAudience      String?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Referral`: The relation field `patient` on model `Referral` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4243[0m
[1;94m   | [0m
[1;94m4242 | [0m  patientId           Int?
[1;94m4243 | [0m  [1;91mpatient             Patient?              @relation(fields: [patientId], references: [id], map: "Referral_patient_fkey")[0m
[1;94m4244 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `doctor` in model `Referral`: The relation field `doctor` on model `Referral` is missing an opposite relation field on the model `Doctor`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4245[0m
[1;94m   | [0m
[1;94m4244 | [0m  doctorId            Int?
[1;94m4245 | [0m  [1;91mdoctor              Doctor?               @relation(fields: [doctorId], references: [id], map: "Referral_doctor_fkey")[0m
[1;94m4246 | [0m  departmentId        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Referral`: The relation field `department` on model `Referral` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4247[0m
[1;94m   | [0m
[1;94m4246 | [0m  departmentId        Int?
[1;94m4247 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id], map: "Referral_department_fkey")[0m
[1;94m4248 | [0m  status              ReferralStatus        @default(PENDING)
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `medicalRecord` in model `Referral`: The relation field `medicalRecord` on model `Referral` is missing an opposite relation field on the model `MedicalRecord`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4254[0m
[1;94m   | [0m
[1;94m4253 | [0m  medicalRecordId     Int?
[1;94m4254 | [0m  [1;91mmedicalRecord       MedicalRecord?        @relation(fields: [medicalRecordId], references: [id], map: "Referral_medicalRecord_fkey")[0m
[1;94m4255 | [0m  claimId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `Referral`: The relation field `claim` on model `Referral` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4256[0m
[1;94m   | [0m
[1;94m4255 | [0m  claimId             Int?
[1;94m4256 | [0m  [1;91mclaim               Claim?                @relation(fields: [claimId], references: [id], map: "Referral_claim_fkey")[0m
[1;94m4257 | [0m  nhifClaimId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `nhifClaim` in model `Referral`: The relation field `nhifClaim` on model `Referral` is missing an opposite relation field on the model `NhifClaim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4258[0m
[1;94m   | [0m
[1;94m4257 | [0m  nhifClaimId         Int?
[1;94m4258 | [0m  [1;91mnhifClaim           NhifClaim?            @relation(fields: [nhifClaimId], references: [id], map: "Referral_nhifClaim_fkey")[0m
[1;94m4259 | [0m  rewardId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4279[0m
[1;94m   | [0m
[1;94m4278 | [0m  referralId          Int
[1;94m4279 | [0m  [1;91mreferral            Referral              @relation(fields: [referralId], references: [id], map: "ReferralReward_referral_fkey")[0m
[1;94m4280 | [0m  rewardType          RewardType
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `references` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4260[0m
[1;94m   | [0m
[1;94m4259 | [0m  rewardId            Int?
[1;94m4260 | [0m  [1;91mreward              ReferralReward?       @relation(fields: [rewardId], references: [id], map: "Referral_reward_fkey")[0m
[1;94m4261 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4279[0m
[1;94m   | [0m
[1;94m4278 | [0m  referralId          Int
[1;94m4279 | [0m  [1;91mreferral            Referral              @relation(fields: [referralId], references: [id], map: "ReferralReward_referral_fkey")[0m
[1;94m4280 | [0m  rewardType          RewardType
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": The relation fields `referral` on Model `ReferralReward` and `reward` on Model `Referral` both provide the `fields` argument in the @relation attribute. You have to provide it only on one of the two fields.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4260[0m
[1;94m   | [0m
[1;94m4259 | [0m  rewardId            Int?
[1;94m4260 | [0m  [1;91mreward              ReferralReward?       @relation(fields: [rewardId], references: [id], map: "Referral_reward_fkey")[0m
[1;94m4261 | [0m  notes               String?
[1;94m   | [0m
[1;91merror[0m: [1mError parsing attribute "@relation": A one-to-one relation must use unique fields on the defining side. Either add an `@unique` attribute to the field `referralId`, or change the relation to one-to-many.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4279[0m
[1;94m   | [0m
[1;94m4278 | [0m  referralId          Int
[1;94m4279 | [0m  [1;91mreferral            Referral              @relation(fields: [referralId], references: [id], map: "ReferralReward_referral_fkey")[0m
[1;94m4280 | [0m  rewardType          RewardType
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `MarketingCampaign`: The relation field `auditLogs` on model `MarketingCampaign` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4320[0m
[1;94m   | [0m
[1;94m4319 | [0m  updatedBy           User?                 @relation("CampaignUpdatedBy", fields: [updatedById], references: [id], map: "MarketingCampaign_updatedBy_fkey")
[1;94m4320 | [0m  [1;91mauditLogs           AuditLog[]            @relation("MarketingCampaignAuditLogs")[0m
[1;94m4321 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `SocialService`: The relation field `billing` on model `SocialService` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4383[0m
[1;94m   | [0m
[1;94m4382 | [0m  billingId           Int?
[1;94m4383 | [0m  [1;91mbilling             Billing?              @relation("SocialServiceBilling", fields: [billingId], references: [id])[0m
[1;94m4384 | [0m  createdById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `referral` in model `SocialServiceCase`: The relation field `referral` on model `SocialServiceCase` is missing an opposite relation field on the model `Referral`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4420[0m
[1;94m   | [0m
[1;94m4419 | [0m  referralId          Int?
[1;94m4420 | [0m  [1;91mreferral            Referral?             @relation("SocialServiceCaseReferrals", fields: [referralId], references: [id])[0m
[1;94m4421 | [0m  medicalRecordId     Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `SocialServiceCase`: The relation field `billing` on model `SocialServiceCase` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4424[0m
[1;94m   | [0m
[1;94m4423 | [0m  billingId           Int?
[1;94m4424 | [0m  [1;91mbilling             Billing?              @relation("SocialServiceCaseBilling", fields: [billingId], references: [id])[0m
[1;94m4425 | [0m  claimId             Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `claim` in model `SocialServiceCase`: The relation field `claim` on model `SocialServiceCase` is missing an opposite relation field on the model `Claim`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4426[0m
[1;94m   | [0m
[1;94m4425 | [0m  claimId             Int?
[1;94m4426 | [0m  [1;91mclaim               Claim?                @relation("SocialServiceCaseClaims", fields: [claimId], references: [id])[0m
[1;94m4427 | [0m  nhifClaimId         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `SocialServiceCase`: The relation field `createdBy` on model `SocialServiceCase` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4435[0m
[1;94m   | [0m
[1;94m4434 | [0m  createdById         Int?
[1;94m4435 | [0m  [1;91mcreatedBy           User?               @relation("CaseCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4436 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `SocialServiceCase`: The relation field `updatedBy` on model `SocialServiceCase` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4437[0m
[1;94m   | [0m
[1;94m4436 | [0m  updatedById         Int?
[1;94m4437 | [0m  [1;91mupdatedBy           User?               @relation("CaseUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4438 | [0m  auditLogs           AuditLog[]            @relation("SocialServiceCaseAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `ExternalAgency`: The relation field `createdBy` on model `ExternalAgency` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4460[0m
[1;94m   | [0m
[1;94m4459 | [0m  createdById         Int?
[1;94m4460 | [0m  [1;91mcreatedBy           User?               @relation("AgencyCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4461 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `ExternalAgency`: The relation field `updatedBy` on model `ExternalAgency` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4462[0m
[1;94m   | [0m
[1;94m4461 | [0m  updatedById         Int?
[1;94m4462 | [0m  [1;91mupdatedBy           User?               @relation("AgencyUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4463 | [0m  auditLogs           AuditLog[]            @relation("ExternalAgencyAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patientRecords` in model `User`: The relation field `patientRecords` on model `User` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4550[0m
[1;94m   | [0m
[1;94m4549 | [0m  auditLogs             AuditLog[]            @relation("PerformedBy")
[1;94m4550 | [0m  [1;91mpatientRecords        Patient[]             @relation("PatientUser")[0m
[1;94m4551 | [0m  patientCreated        Patient[]             @relation("PatientCreatedBy")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `billing` in model `Utility`: The relation field `billing` on model `Utility` is missing an opposite relation field on the model `Billing`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4845[0m
[1;94m   | [0m
[1;94m4844 | [0m  billingId           Int?
[1;94m4845 | [0m  [1;91mbilling             Billing?              @relation("UtilityBilling", fields: [billingId], references: [id])[0m
[1;94m4846 | [0m  createdById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `Utility`: The relation field `createdBy` on model `Utility` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4847[0m
[1;94m   | [0m
[1;94m4846 | [0m  createdById         Int?
[1;94m4847 | [0m  [1;91mcreatedBy           User?                 @relation("UtilityCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4848 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `Utility`: The relation field `updatedBy` on model `Utility` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4849[0m
[1;94m   | [0m
[1;94m4848 | [0m  updatedById         Int?
[1;94m4849 | [0m  [1;91mupdatedBy           User?                 @relation("UtilityUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4850 | [0m  auditLogs           AuditLog[]            @relation("UtilityAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `Utility`: The relation field `auditLogs` on model `Utility` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4850[0m
[1;94m   | [0m
[1;94m4849 | [0m  updatedBy           User?                 @relation("UtilityUpdatedBy", fields: [updatedById], references: [id])
[1;94m4850 | [0m  [1;91mauditLogs           AuditLog[]            @relation("UtilityAuditLogs")[0m
[1;94m4851 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `UtilityProvider`: The relation field `createdBy` on model `UtilityProvider` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4872[0m
[1;94m   | [0m
[1;94m4871 | [0m  createdById         Int?
[1;94m4872 | [0m  [1;91mcreatedBy           User?                 @relation("ProviderCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4873 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `UtilityProvider`: The relation field `updatedBy` on model `UtilityProvider` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4874[0m
[1;94m   | [0m
[1;94m4873 | [0m  updatedById         Int?
[1;94m4874 | [0m  [1;91mupdatedBy           User?                 @relation("ProviderUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4875 | [0m  auditLogs           AuditLog[]            @relation("UtilityProviderAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `UtilityProvider`: The relation field `auditLogs` on model `UtilityProvider` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4875[0m
[1;94m   | [0m
[1;94m4874 | [0m  updatedBy           User?                 @relation("ProviderUpdatedBy", fields: [updatedById], references: [id])
[1;94m4875 | [0m  [1;91mauditLogs           AuditLog[]            @relation("UtilityProviderAuditLogs")[0m
[1;94m4876 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `performedBy` in model `UtilityMaintenance`: The relation field `performedBy` on model `UtilityMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4889[0m
[1;94m   | [0m
[1;94m4888 | [0m  performedById       Int?
[1;94m4889 | [0m  [1;91mperformedBy         User?                 @relation("MaintenancePerformedBy", fields: [performedById], references: [id])[0m
[1;94m4890 | [0m  cost                Float?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `createdBy` in model `UtilityMaintenance`: The relation field `createdBy` on model `UtilityMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4898[0m
[1;94m   | [0m
[1;94m4897 | [0m  createdById         Int?
[1;94m4898 | [0m  [1;91mcreatedBy           User?                 @relation("MaintenanceCreatedBy", fields: [createdById], references: [id])[0m
[1;94m4899 | [0m  updatedById         Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `updatedBy` in model `UtilityMaintenance`: The relation field `updatedBy` on model `UtilityMaintenance` is missing an opposite relation field on the model `User`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4900[0m
[1;94m   | [0m
[1;94m4899 | [0m  updatedById         Int?
[1;94m4900 | [0m  [1;91mupdatedBy           User?                 @relation("MaintenanceUpdatedBy", fields: [updatedById], references: [id])[0m
[1;94m4901 | [0m  auditLogs           AuditLog[]            @relation("UtilityMaintenanceAuditLogs")
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `auditLogs` in model `UtilityMaintenance`: The relation field `auditLogs` on model `UtilityMaintenance` is missing an opposite relation field on the model `AuditLog`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4901[0m
[1;94m   | [0m
[1;94m4900 | [0m  updatedBy           User?                 @relation("MaintenanceUpdatedBy", fields: [updatedById], references: [id])
[1;94m4901 | [0m  [1;91mauditLogs           AuditLog[]            @relation("UtilityMaintenanceAuditLogs")[0m
[1;94m4902 | [0m  createdAt           DateTime              @default(now())
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `patient` in model `Verification`: The relation field `patient` on model `Verification` is missing an opposite relation field on the model `Patient`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4943[0m
[1;94m   | [0m
[1;94m4942 | [0m  patientId           Int?
[1;94m4943 | [0m  [1;91mpatient             Patient?              @relation(fields: [patientId], references: [id])[0m
[1;94m4944 | [0m  doctorId            Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `Verification`: The relation field `department` on model `Verification` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4959[0m
[1;94m   | [0m
[1;94m4958 | [0m  departmentId        Int?
[1;94m4959 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m4960 | [0m  verifiedById        Int?
[1;94m   | [0m
[1;91merror[0m: [1mError validating field `department` in model `VerificationConfiguration`: The relation field `department` on model `VerificationConfiguration` is missing an opposite relation field on the model `Department`. Either run `prisma format` or add it manually.[0m
  [1;94m-->[0m  [4mprisma/schema.prisma:4985[0m
[1;94m   | [0m
[1;94m4984 | [0m  departmentId        Int?
[1;94m4985 | [0m  [1;91mdepartment          Department?           @relation(fields: [departmentId], references: [id])[0m
[1;94m4986 | [0m  notes               String?
[1;94m   | [0m

Validation Error Count: 529
[Context: validate]

Prisma CLI Version : 5.22.0
