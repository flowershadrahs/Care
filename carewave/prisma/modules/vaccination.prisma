enum VaccinationStatus {
  SCHEDULED
  ADMINISTERED
  CANCELLED
  MISSED
  PENDING
}

enum VaccineType {
  COVID_19
  INFLUENZA
  MMR
  HEPATITIS_B
  TETANUS
  POLIO
  HPV
  PNEUMOCOCCAL
  OTHER
}

enum VaccinationPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

model Vaccination {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  vaccinationNumber   String                @unique
  patientId           Int
  patient             Patient               @relation("PatientVaccinationRecords", fields: [patientId], references: [id])
  doctorId            Int?
  doctor              Doctor?               @relation("VaccinationDoctor", fields: [doctorId], references: [id])
  nurseId             Int?
  nurse               User?                 @relation("VaccinationNurse", fields: [nurseId], references: [id])
  appointmentId       Int?
  appointment         Appointment?          @relation("VaccinationAppointment", fields: [appointmentId], references: [id])
  medicalRecordId     Int?
  medicalRecord       MedicalRecord?        @relation("VaccinationMedicalRecord", fields: [medicalRecordId], references: [id])
  clinicalRecordId    Int?
  clinicalRecord      ClinicalRecord?       @relation("VaccinationClinicalRecord", fields: [clinicalRecordId], references: [id])
  departmentId        Int?
  department          Department?           @relation("DepartmentVaccinationRecords", fields: [departmentId], references: [id])
  clinicalSettingId   Int?
  clinicalSetting     ClinicalSetting?      @relation("VaccinationClinicalSetting", fields: [clinicalSettingId], references: [id])
  vaccineId           Int?
  vaccine             Medication?           @relation("VaccinationMedication", fields: [vaccineId], references: [id])
  type                VaccineType
  status              VaccinationStatus     @default(SCHEDULED)
  scheduledDate       DateTime?
  administeredDate    DateTime?
  batchNumber         String?
  expiryDate          DateTime?
  doseNumber          Int?
  totalDoses          Int?
  administrationRoute  String?
  administrationSite  String?
  lotNumber           String?
  manufacturer        String?
  adverseReactions    String?
  notes               String?
  priority            VaccinationPriority?
  billingId           Int?
  billing             Billing?              @relation("VaccinationBilling", fields: [billingId], references: [id])
  claimId             Int?
  claim               Claim?                @relation("VaccinationClaim", fields: [claimId], references: [id])
  nhifClaimId         Int?
  nhifClaim           NhifClaim?            @relation("VaccinationNhifClaim", fields: [nhifClaimId], references: [id])
  pharmacyId          Int?
  pharmacy            Pharmacy?             @relation("VaccinationPharmacy", fields: [pharmacyId], references: [id])
  inventoryId         Int?
  inventory           Inventory?            @relation("VaccinationInventory", fields: [inventoryId], references: [id])
  documents           String?
  createdById         Int?
  createdBy           User?                 @relation("VaccinationCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?
  updatedBy           User?                 @relation("VaccinationUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("VaccinationAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  vaccinationCampaign  VaccinationCampaign?  @relation("CampaignVaccinations")
}

model VaccinationCampaign {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  name                String
  description         String?
  startDate           DateTime              @default(now())
  endDate             DateTime?
  vaccineType         VaccineType
  targetPopulation    String?
  departmentId        Int?
  department          Department?           @relation("VaccinationCampaignDepartment", fields: [departmentId], references: [id])
  status              String                @default("ACTIVE")
  targetCount         Int?
  actualCount         Int?
  budget              Float?
  actualCost          Float?
  notes               String?
  documents           String?
  vaccinations        Vaccination[]         @relation("CampaignVaccinations")
  createdById         Int?
  createdBy           User?                 @relation("CampaignCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?
  updatedBy           User?                 @relation("CampaignUpdatedBy", fields: [updatedById], references: [id])
  auditLogs           AuditLog[]            @relation("VaccinationCampaignAuditLogs")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}