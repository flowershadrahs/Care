// nhifclaim.prisma
enum NhifClaimStatus {
  PENDING
  SUBMITTED
  APPROVED
  REJECTED
  PARTIALLY_APPROVED
  PAID
  DENIED
  UNDER_REVIEW
}

enum NhifClaimType {
  INPATIENT
  OUTPATIENT
  PHARMACY
  SURGICAL
  MATERNITY
  DIAGNOSTIC
}

model NhifClaim {
  id                  Int                   @id @default(autoincrement())
  uuid                String                @unique @default(uuid())
  claimNumber         String                @unique
  patientId           Int
  patient             Patient               @relation("PatientNhifClaims", fields: [patientId], references: [id])
  nhifNumber          String
  invoiceId           Int?
  invoice             Invoice?              @relation("NhifClaimInvoices", fields: [invoiceId], references: [id])
  appointmentId       Int?
  appointment         Appointment?          @relation("NhifClaimAppointments", fields: [appointmentId], references: [id])
  admissionId         Int?
  admission           Admission?            @relation("NhifClaimAdmissions", fields: [admissionId], references: [id])
  clinicalRecordId    Int?
  clinicalRecord      ClinicalRecord?       @relation("NhifClaimClinicalRecords", fields: [clinicalRecordId], references: [id])
  medicalRecordId     Int?
  medicalRecord       MedicalRecord?        @relation("NhifClaimMedicalRecords", fields: [medicalRecordId], references: [id])
  laboratoryId        Int?
  laboratory          Laboratory?           @relation("NhifClaimLaboratory", fields: [laboratoryId], references: [id])
  radiologyId         Int?
  radiology           Radiology?            @relation("NhifClaimRadiology", fields: [radiologyId], references: [id])
  pharmacyId          Int?
  pharmacy            Pharmacy?             @relation("NhifClaimPharmacy", fields: [pharmacyId], references: [id])
  operationTheatreId  Int?
  operationTheatre    OperationTheatre?     @relation("NhifClaimOperationTheatre", fields: [operationTheatreId], references: [id])
  maternityId         Int?
  maternity           Maternity?            @relation("NhifClaimMaternity", fields: [maternityId], references: [id])
  vaccinationId       Int?
  vaccination         Vaccination?          @relation("NhifClaimVaccination", fields: [vaccinationId], references: [id])
  departmentId        Int?
  department          Department?           @relation("NhifClaimDepartment", fields: [departmentId], references: [id])
  claimType           NhifClaimType
  status              NhifClaimStatus       @default(PENDING)
  submittedDate       DateTime?
  approvedDate        DateTime?
  totalAmount         Float
  approvedAmount      Float?
  rejectionReason     String?
  documents           String?
  preAuthorizationCode String?
  treatmentCode       String?
  diagnosisCodes      String?
  notes               String?
  transactionId       Int?
  transaction         Transaction?          @relation("TransactionNhifClaims", fields: [transactionId], references: [id])
  billingId           Int?
  billing             Billing?              @relation("NhifClaimBilling", fields: [billingId], references: [id])
  referralId          Int?
  referral            Referral?             @relation("NhifClaimReferrals", fields: [referralId], references: [id])
  socialServiceCases  SocialServiceCase[]   @relation("SocialServiceCaseNhifClaims")
  homeCares           HomeCare[]            @relation("NhifClaimHomeCare")
  createdById         Int?
  createdBy           User?                 @relation("NhifClaimCreatedBy", fields: [createdById], references: [id])
  updatedById         Int?
  updatedBy           User?                 @relation("NhifClaimUpdatedBy", fields: [updatedById], references: [id])
  reviewedById        Int?
  reviewedBy          User?                 @relation("NhifClaimReviewedBy", fields: [reviewedById], references: [id])
  auditLogs           AuditLog[]            @relation("NhifClaimAuditLogs")
  dashboardWidgets    DashboardWidget[]     @relation("DashboardWidgetNhifClaims")
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}