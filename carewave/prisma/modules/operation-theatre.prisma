// Represents a surgical procedure
model Surgery {
  id                String           @id @default(uuid())
  patientId         String
  patient           Patient          @relation("PatientSurgeries", fields: [patientId], references: [id], onDelete: Cascade)
  theatreId         String
  theatre           Theatre          @relation("TheatreSurgeries", fields: [theatreId], references: [id], onDelete: Restrict)
  surgicalTeamId    String
  surgicalTeam      SurgicalTeam     @relation("SurgeryTeam", fields: [surgicalTeamId], references: [id], onDelete: Restrict)
  preOpAssessmentId String?
  preOpAssessment   PreOpAssessment? @relation("SurgeryPreOp", fields: [preOpAssessmentId], references: [id], onDelete: SetNull)
  surgeryDate       DateTime
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
}

// Represents an operation theatre
model Theatre {
  id            String       @id @default(uuid())
  name          String       @unique
  departmentId  String
  department    Department   @relation("TheatreDepartment", fields: [departmentId], references: [id], onDelete: Restrict)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  surgeries     Surgery[]    @relation("TheatreSurgeries")
}

// Represents a surgical team
model SurgicalTeam {
  id            String     @id @default(uuid())
  name          String     @unique
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  surgeries     Surgery[]  @relation("SurgeryTeam")
}

// Represents a pre-operative assessment
model PreOpAssessment {
  id            String     @id @default(uuid())
  patientId     String
  patient       Patient    @relation("PatientPreOpAssessments", fields: [patientId], references: [id], onDelete: Cascade)
  assessment    String
  assessedAt    DateTime
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  surgeries     Surgery[]  @relation("SurgeryPreOp")
}